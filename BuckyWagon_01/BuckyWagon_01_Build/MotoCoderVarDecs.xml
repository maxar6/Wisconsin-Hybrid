<?xml version="1.0" encoding="UTF-8"?>
<VarDecs>
   <VarDec>
      <name>CCP1_StationAddr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Station ID for CCP handler: CCP1</help>
      <group>System | CCP | CCP1</group>
      <struct>ConstantWork.CCP1_StationAddr</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>CCP1TxID</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Transmit CAN ID for CCP handler: CCP1</help>
      <group>System | CCP | CCP1</group>
      <struct>ConstantWork.CCP1TxID</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CCP1RxID</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Receive CAN ID for CCP handler: CCP1</help>
      <group>System | CCP | CCP1</group>
      <struct>ConstantWork.CCP1RxID</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CCP1RxIDMask</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Receive CAN ID Mask for CCP handler: CCP1</help>
      <group>System | CCP | CCP1</group>
      <struct>ConstantWork.CCP1RxIDMask</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>ProcessorReboot</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Reboots the processor when set.</help>
      <group>System | Main Power Relay</group>
      <struct>VolatileWork_BSS.ProcessorReboot</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Run" value="0"/>
         <item name="Reboot" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ECUP_Threshold</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1023</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>ADC_counts</units>
      <ctype>const Constant_T</ctype>
      <help>ADC voltage threshold above which ECU is considered powered</help>
      <group>System | Main Power Relay | Main Power Relay Config</group>
      <struct>ConstantWork.ECUP_Threshold</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>MPRD_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>System | Main Power Relay | MPRD Override</group>
      <struct>VolatileWork_BSS.MPRD_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MPRD_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Directly Override Main Power Relay</help>
      <group>System | Main Power Relay | MPRD Override</group>
      <struct>VolatileWork_BSS.MPRD_new</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Off" value="0"/>
         <item name="On" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>RestoreNVFactoryDefaults</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Restores NonVolatile Memory to Factory Defaults</help>
      <group>System | NonVolatile Storage</group>
      <struct>VolatileWork_BSS.RestoreNVFactoryDefaults</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Run" value="0"/>
         <item name="Restore To Defaults" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>StoreNV</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Stores RAM-Shadowed memory to serial EEPROM</help>
      <group>System | NonVolatile Storage</group>
      <struct>VolatileWork_BSS.StoreNV</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Run" value="0"/>
         <item name="Store To EEPROM" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MPRD</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Indicates whether the main power relay is active</help>
      <group>System | Main Power Relay</group>
      <struct>VolatileWork_BSS.MPRD</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MPRD_KeepAlive</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>When enabled, keeps the MPRD output on and keeps the processor alive</help>
      <group>System | Main Power Relay</group>
      <struct>VolatileWork_BSS.MPRD_KeepAlive</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disable on low ECUP" value="0"/>
         <item name="Keep alive" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Shutdown_Req</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>System | Main Power Relay</group>
      <struct>VolatileWork_BSS.Shutdown_Req</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>hsc_bcm_enable_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | BCM | hsc_bcm_enable Override</group>
      <struct>VolatileWork_BSS.hsc_bcm_enable_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>hsc_bcm_enable_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | BCM | hsc_bcm_enable Override</group>
      <struct>VolatileWork_BSS.hsc_bcm_enable_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>hsc_bcm_epo_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | BCM | hsc_bcm_epo Override</group>
      <struct>VolatileWork_BSS.hsc_bcm_epo_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>hsc_bcm_epo_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | BCM | hsc_bcm_epo Override</group>
      <struct>VolatileWork_BSS.hsc_bcm_epo_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>hsc_bcm_leakage_enable_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | BCM | hsc_bcm_leakage_enable Override</group>
      <struct>VolatileWork_BSS.hsc_bcm_leakage_enable_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>GFD_Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Actuators|A123 Battery Controller|GFD Logic</group>
      <struct>ConstantWork.GFD_Enable</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>GFD_Torque_Off</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Actuators|A123 Battery Controller|GFD Logic</group>
      <struct>ConstantWork.GFD_Torque_Off</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>hsc_bcm_leakage_enable_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | BCM | hsc_bcm_leakage_enable Override</group>
      <struct>VolatileWork_BSS.hsc_bcm_leakage_enable_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>hsc_bcm_mainc_enable_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | BCM | hsc_bcm_mainc_enable Override</group>
      <struct>VolatileWork_BSS.hsc_bcm_mainc_enable_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>hsc_bcm_mainc_enable_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | BCM | hsc_bcm_mainc_enable Override</group>
      <struct>VolatileWork_BSS.hsc_bcm_mainc_enable_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>hsc_bcm_enable</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | BCM</group>
      <struct>VolatileWork_BSS.hsc_bcm_enable</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Flash_Reverse_Lights_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | Reverse | Flash_Reverse_Lights_Ovr Override</group>
      <struct>VolatileWork_BSS.Flash_Reverse_Lights_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Flash_Reverse_Lights_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | Reverse | Flash_Reverse_Lights_Ovr Override</group>
      <struct>VolatileWork_BSS.Flash_Reverse_Lights_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>cCInd_LongOff</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Long Off time in flash sequence.</help>
      <group>Actuators | Reverse</group>
      <struct>ConstantWork.cCInd_LongOff</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>cCInd_ShortTime</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Short Off time in sequence.</help>
      <group>Actuators | Reverse</group>
      <struct>ConstantWork.cCInd_ShortTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>cCInd_OnTime</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>On time in flash sequence.</help>
      <group>Actuators | Reverse</group>
      <struct>ConstantWork.cCInd_OnTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>RevOut__Polarity</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>const Constant_T</ctype>
      <help>Inverts the output of the actuator relative to the desired command - 0 = High True    1 = Low True</help>
      <group>Actuators | Reverse | ReverseOut | ReverseOut Config</group>
      <struct>ConstantWork.RevOut__Polarity</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>RevOut__ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | Reverse | ReverseOut | RevOut_ Override</group>
      <struct>VolatileWork_BSS.RevOut__ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>RevIndType</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Mode for Reverse Indicator</help>
      <group>BuckyWagon_01|Foreground|Actuators|Analog Out|ReverseInd</group>
      <struct>ConstantWork.RevIndType</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Flash" value="0"/>
         <item name="Solid" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ReverseIndFlash_Period</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Period for the flashing reverse indicator.</help>
      <group>BuckyWagon_01|Foreground|Actuators|Analog Out|ReverseInd</group>
      <struct>ConstantWork.ReverseIndFlash_Period</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
   </VarDec>
   <VarDec>
      <name>RevOut__new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override actuator, in engineering units</help>
      <group>Actuators | Reverse | ReverseOut | RevOut_ Override</group>
      <struct>VolatileWork_BSS.RevOut__new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>FanOut_Gain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%/%</units>
      <ctype>const Constant_T</ctype>
      <help>Scaling from engineering units to PWM duty cycle</help>
      <group>Actuators | Fan | FanOut | FanOut Config</group>
      <struct>ConstantWork.FanOut_Gain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FanOut_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | Fan | FanOut | FanOut Override</group>
      <struct>VolatileWork_BSS.FanOut_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FanOut_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>Actuators | Fan | FanOut | FanOut Override</group>
      <struct>VolatileWork_BSS.FanOut_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FanOut_Offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Offset from engineering units to PWM duty cycle</help>
      <group>Actuators | Fan | FanOut | FanOut Config</group>
      <struct>ConstantWork.FanOut_Offset</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FanOut_MinLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum limit of PWM signal.</help>
      <group>Actuators | Fan | FanOut | FanOut Config</group>
      <struct>ConstantWork.FanOut_MinLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FanOut_MaxLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum limit of PWM signal.</help>
      <group>Actuators | Fan | FanOut | FanOut Config</group>
      <struct>ConstantWork.FanOut_MaxLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FanOut_Frequency</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Hz</units>
      <ctype>const Constant_T</ctype>
      <help>Frequency of PWM output</help>
      <group>Actuators | Fan | FanOut | FanOut Config</group>
      <struct>ConstantWork.FanOut_Frequency</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InhibitDCDC_Out__Polarity</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>const Constant_T</ctype>
      <help>Inverts the output of the actuator relative to the desired command - 0 = High True    1 = Low True</help>
      <group>Actuators | DC/DC | InhibitDCDC_Out | InhibitDCDC_Out Config</group>
      <struct>ConstantWork.InhibitDCDC_Out__Polarity</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>InhibitDCDC_Out__ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | DC/DC | InhibitDCDC_Out | InhibitDCDC_Out_ Override</group>
      <struct>VolatileWork_BSS.InhibitDCDC_Out__ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>InhibitDCDC_Out__new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override actuator, in engineering units</help>
      <group>Actuators | DC/DC | InhibitDCDC_Out | InhibitDCDC_Out_ Override</group>
      <struct>VolatileWork_BSS.InhibitDCDC_Out__new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Brake_light_On_Setpoint</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>This is to change how far down on the peddle you need to push before the brake lights come on</help>
      <group>BuckyWagon_01|Foreground|Actuators|Analog Out</group>
      <struct>ConstantWork.Brake_light_On_Setpoint</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Enable_Brake_Light_Out</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Actuators|Analog Out</group>
      <struct>ConstantWork.Enable_Brake_Light_Out</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_Performance_Limit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | EHPAS</group>
      <struct>ConstantWork.EHPAS_Performance_Limit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_Operating_Mode_Cmd_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EHPAS | EHPAS_Operating_Mode_Cmd Override</group>
      <struct>VolatileWork_BSS.EHPAS_Operating_Mode_Cmd_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EHPAS_Operating_Mode_Cmd_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EHPAS | EHPAS_Operating_Mode_Cmd Override</group>
      <struct>VolatileWork_BSS.EHPAS_Operating_Mode_Cmd_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>EMP_Speed_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EMP Coolant Pump | EMP_Speed Override</group>
      <struct>VolatileWork_BSS.EMP_Speed_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Speed_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EMP Coolant Pump | EMP_Speed Override</group>
      <struct>VolatileWork_BSS.EMP_Speed_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Mode_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EMP Coolant Pump | EMP_Mode Override</group>
      <struct>VolatileWork_BSS.EMP_Mode_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Mode_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EMP Coolant Pump | EMP_Mode Override</group>
      <struct>VolatileWork_BSS.EMP_Mode_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Fan_Mode</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | EMP Cooling Fan</group>
      <struct>ConstantWork.Fan_Mode</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Off" value="0"/>
         <item name="Normal" value="1"/>
         <item name="Reverse" value="2"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fan_Hold_Mode</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | EMP Cooling Fan</group>
      <struct>ConstantWork.Fan_Hold_Mode</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Power_Off" value="0"/>
         <item name="Power_On" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Fan_Speed_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EMP Cooling Fan | EMP_Fan_Speed Override</group>
      <struct>VolatileWork_BSS.EMP_Fan_Speed_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Fan_Speed_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EMP Cooling Fan | EMP_Fan_Speed Override</group>
      <struct>VolatileWork_BSS.EMP_Fan_Speed_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Counter_Multiplier</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.5</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM | Counter</group>
      <struct>ConstantWork.Counter_Multiplier</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Command_Counter</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM | Counter</group>
      <struct>ConstantWork.Command_Counter</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AccelRstSpd</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Rate at which fault is cleared when accel is below thres.</units>
      <ctype>const Constant_T</ctype>
      <help>%</help>
      <group>Diagnostics and Protection</group>
      <struct>ConstantWork.AccelRstSpd</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Charger_Fan_Speed</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Charger_Fan_Speed</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Charger_Pump_Speed</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Charger_Pump_Speed</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Max_Slect_Tq_drive</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving</group>
      <struct>ConstantWork.Max_Slect_Tq_drive</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Max_Regen_Tq</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1000</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>nM</units>
      <ctype>const Constant_T</ctype>
      <help>Max tq regen can apply WARNING: CHECK PEDAL AT MAX TQ</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>ConstantWork.Max_Regen_Tq</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Regen_Start</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>AKA deadband, Pedal Position where regen is at min</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>ConstantWork.Regen_Start</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Regen_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Pedal Position where regen is Full (WARNING:CHECK WHAT THE MAX REGEN IS)</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>ConstantWork.Regen_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Enable_Regen</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0x000000FF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Pedal Position where regen is Full</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>ConstantWork.Enable_Regen</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Enable_Coast_Neg_Torque</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>This allows neg. torque to be applied, depending on vehcild speed, when going from gas to brake</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>ConstantWork.Enable_Coast_Neg_Torque</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Min_Speed_Allow_Coast_NegT</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>MPH</units>
      <ctype>const Constant_T</ctype>
      <help>Below this speed, negative torque will not be allowed to cause vehicle drag</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>ConstantWork.Min_Speed_Allow_Coast_NegT</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Max_Coast_Tq</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1000</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>NM</units>
      <ctype>const Constant_T</ctype>
      <help>Changing this will change the amount of drag on the vehile when coasting</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>ConstantWork.Max_Coast_Tq</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Max_SOC_For_Coast_Tq_EN</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>240</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Above this SOC, vehcile will not allow negative torque to be applied when coasting</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>ConstantWork.Max_SOC_For_Coast_Tq_EN</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Regen_SOC_Speed_Ramp_ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen | Regen_SOC_Speed_Ramp_ovr Override</group>
      <struct>VolatileWork_BSS.Regen_SOC_Speed_Ramp_ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Regen_SOC_Speed_Ramp_ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen | Regen_SOC_Speed_Ramp_ovr Override</group>
      <struct>VolatileWork_BSS.Regen_SOC_Speed_Ramp_ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Temp_ped_switchOver</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving</group>
      <struct>ConstantWork.Temp_ped_switchOver</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Veh_Speed_Regen_Filter</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving</group>
      <struct>ConstantWork.Veh_Speed_Regen_Filter</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Reverse_TQ_Negative_Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive</group>
      <struct>ConstantWork.Reverse_TQ_Negative_Enable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disable" value="0"/>
         <item name="Enable" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EHPAS_stoppingEn</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Percent Duty cycle for pump under given condition</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.EHPAS_stoppingEn</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_slowingEn</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Percent Duty cycle for pump under given condition</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.EHPAS_slowingEn</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_driveNbrakeEn</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Percent Duty cycle for pump under given condition</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.EHPAS_driveNbrakeEn</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_keyUpEn</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Percent Duty cycle for pump under given condition</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.EHPAS_keyUpEn</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_brakeEn</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Percent Duty cycle for pump under given condition</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.EHPAS_brakeEn</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_driveEn</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Percent Duty cycle for pump under given condition</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.EHPAS_driveEn</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_lowSpeedEn</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Percent Duty cycle for pump under given condition</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.EHPAS_lowSpeedEn</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_IdleEn</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Percent Duty cycle for pump under given condition</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.EHPAS_IdleEn</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Contactor_Shutdown_Test_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01 | Strategy | Control Strategy | HV Controller | Contactor_Shutdown_Test Override</group>
      <struct>VolatileWork_BSS.Contactor_Shutdown_Test_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Contactor_Shutdown_Test_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01 | Strategy | Control Strategy | HV Controller | Contactor_Shutdown_Test Override</group>
      <struct>VolatileWork_BSS.Contactor_Shutdown_Test_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Load_Enable_Delay</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>10</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|HV Controller|Contacter Controller</group>
      <struct>ConstantWork.Load_Enable_Delay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Contactor_Disable_Delay</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>10</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|HV Controller|Contacter Controller</group>
      <struct>ConstantWork.Contactor_Disable_Delay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Allow_MainContactor_Close</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>flag</units>
      <ctype>const Constant_T</ctype>
      <help>1=normal mode, 0=prevent main contactors from closing</help>
      <group>Actuators | BCM</group>
      <struct>ConstantWork.Allow_MainContactor_Close</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Batt_Load_Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|HV Controller</group>
      <struct>VolatileWork_BSS.Batt_Load_Enable</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>In_Reverse_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Reverse | In_Reverse Override</group>
      <struct>VolatileWork_BSS.In_Reverse_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>fwdAccThres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Accelerator must be below this to switch Rev-&gt;Fwd</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Reverse</group>
      <struct>ConstantWork.fwdAccThres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>fwdSpdThres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mph</units>
      <ctype>const Constant_T</ctype>
      <help>Must be below this speed to switch Rev-&gt;Fwd</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Reverse</group>
      <struct>ConstantWork.fwdSpdThres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>offTime</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5.0E14</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Switch must be released this long to press again.</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Reverse</group>
      <struct>ConstantWork.offTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>revAccThres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Accelerator must be below this to switch Fwd-&gt;Rev</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Reverse</group>
      <struct>ConstantWork.revAccThres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>revSpdThres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mph</units>
      <ctype>const Constant_T</ctype>
      <help>Must be below this speed to switch Fwd-&gt;Rev.</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Reverse</group>
      <struct>ConstantWork.revSpdThres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>onTime</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5.0E14</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Switch must be pressed this long.</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|Reverse</group>
      <struct>ConstantWork.onTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>In_Reverse_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Reverse | In_Reverse Override</group>
      <struct>VolatileWork_BSS.In_Reverse_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>bcm_mainc_stat_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | BCM | bcm_mainc_stat Override</group>
      <struct>VolatileWork_BSS.bcm_mainc_stat_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>bcm_mainc_stat_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | BCM | bcm_mainc_stat Override</group>
      <struct>VolatileWork_BSS.bcm_mainc_stat_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>bcm_ready_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | BCM | bcm_ready Override</group>
      <struct>VolatileWork_BSS.bcm_ready_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>bcm_ready_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | BCM | bcm_ready Override</group>
      <struct>VolatileWork_BSS.bcm_ready_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>bcm_chargec_stat_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | BCM | bcm_chargec_stat Override</group>
      <struct>VolatileWork_BSS.bcm_chargec_stat_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>bcm_chargec_stat_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | BCM | bcm_chargec_stat Override</group>
      <struct>VolatileWork_BSS.bcm_chargec_stat_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>SOC_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | BCM | SOC Override</group>
      <struct>VolatileWork_BSS.SOC_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SOC_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_T</ctype>
      <group>Sensors | BCM | SOC Override</group>
      <struct>VolatileWork.SOC_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>bcm_cell_overvolt_ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | BCM | bcm_cell_overvolt_ovr Override</group>
      <struct>VolatileWork_BSS.bcm_cell_overvolt_ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>bcm_cell_overvolt_ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | BCM | bcm_cell_overvolt_ovr Override</group>
      <struct>VolatileWork_BSS.bcm_cell_overvolt_ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_Pump_Speed_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_Pump_Speed Override</group>
      <struct>VolatileWork_BSS.EHPAS_Pump_Speed_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EHPAS_Pump_Speed_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_Pump_Speed Override</group>
      <struct>VolatileWork_BSS.EHPAS_Pump_Speed_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_Op_State_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_Op_State Override</group>
      <struct>VolatileWork_BSS.EHPAS_Op_State_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EHPAS_Op_State_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_Op_State Override</group>
      <struct>VolatileWork_BSS.EHPAS_Op_State_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_Input_Current_NA_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_Input_Current_NA Override</group>
      <struct>VolatileWork_BSS.EHPAS_Input_Current_NA_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EHPAS_Input_Current_NA_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_Input_Current_NA Override</group>
      <struct>VolatileWork_BSS.EHPAS_Input_Current_NA_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_Input_Voltage_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_Input_Voltage Override</group>
      <struct>VolatileWork_BSS.EHPAS_Input_Voltage_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EHPAS_Input_Voltage_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_Input_Voltage Override</group>
      <struct>VolatileWork_BSS.EHPAS_Input_Voltage_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_Fault_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_Fault Override</group>
      <struct>VolatileWork_BSS.EHPAS_Fault_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EHPAS_Fault_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_Fault Override</group>
      <struct>VolatileWork_BSS.EHPAS_Fault_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_TempMax_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_TempMax Override</group>
      <struct>VolatileWork_BSS.EHPAS_TempMax_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EHPAS_TempMax_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_TempMax Override</group>
      <struct>VolatileWork_BSS.EHPAS_TempMax_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_TempCur_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_TempCur Override</group>
      <struct>VolatileWork_BSS.EHPAS_TempCur_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EHPAS_TempCur_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors|EHPAS Power Steering Pump Inputs | EHPAS_TempCur Override</group>
      <struct>VolatileWork_BSS.EHPAS_TempCur_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_CAN_MaxAge</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100000</max>
      <min>0</min>
      <format>2.1</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>counts before EMP Coolant Pump faults out</help>
      <group>Sensors | EMP Coolant Pump</group>
      <struct>ConstantWork.EMP_CAN_MaxAge</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Pump_Speed_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Coolant Pump | EMP_Pump_Speed Override</group>
      <struct>VolatileWork_BSS.EMP_Pump_Speed_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Pump_Speed_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Coolant Pump | EMP_Pump_Speed Override</group>
      <struct>VolatileWork_BSS.EMP_Pump_Speed_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Speed_Percent_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Coolant Pump | EMP_Speed_Percent Override</group>
      <struct>VolatileWork_BSS.EMP_Speed_Percent_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Speed_Percent_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Coolant Pump | EMP_Speed_Percent Override</group>
      <struct>VolatileWork_BSS.EMP_Speed_Percent_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Pump_Mode_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Coolant Pump | EMP_Pump_Mode Override</group>
      <struct>VolatileWork_BSS.EMP_Pump_Mode_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Pump_Mode_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Coolant Pump | EMP_Pump_Mode Override</group>
      <struct>VolatileWork_BSS.EMP_Pump_Mode_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Pump_Status_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Coolant Pump | EMP_Pump_Status Override</group>
      <struct>VolatileWork_BSS.EMP_Pump_Status_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Pump_Status_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Coolant Pump | EMP_Pump_Status Override</group>
      <struct>VolatileWork_BSS.EMP_Pump_Status_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Board_Temp_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Coolant Pump | EMP_Board_Temp Override</group>
      <struct>VolatileWork_BSS.EMP_Board_Temp_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Board_Temp_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Coolant Pump | EMP_Board_Temp Override</group>
      <struct>VolatileWork_BSS.EMP_Board_Temp_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Pump_Power_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Coolant Pump | EMP_Pump_Power Override</group>
      <struct>VolatileWork_BSS.EMP_Pump_Power_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Pump_Power_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Coolant Pump | EMP_Pump_Power Override</group>
      <struct>VolatileWork_BSS.EMP_Pump_Power_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMPFan_CAN_MaxAge</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100000</max>
      <min>0</min>
      <format>2.1</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>counts before EMP Cooling fan faults out</help>
      <group>Sensors | EMP Cooling Fan</group>
      <struct>ConstantWork.EMPFan_CAN_MaxAge</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Cooling_Fan_Speed_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Cooling Fan | EMP_Cooling_Fan_Speed Override</group>
      <struct>VolatileWork_BSS.EMP_Cooling_Fan_Speed_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Cooling_Fan_Speed_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Cooling Fan | EMP_Cooling_Fan_Speed Override</group>
      <struct>VolatileWork_BSS.EMP_Cooling_Fan_Speed_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Cooling_Fan_Speed_Percent_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Cooling Fan | EMP_Cooling_Fan_Speed_Percent Override</group>
      <struct>VolatileWork_BSS.EMP_Cooling_Fan_Speed_Percent_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Cooling_Fan_Speed_Percent_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Cooling Fan | EMP_Cooling_Fan_Speed_Percent Override</group>
      <struct>VolatileWork_BSS.EMP_Cooling_Fan_Speed_Percent_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Cooling_Fan_Mode_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Cooling Fan | EMP_Cooling_Fan_Mode Override</group>
      <struct>VolatileWork_BSS.EMP_Cooling_Fan_Mode_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Cooling_Fan_Mode_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Cooling Fan | EMP_Cooling_Fan_Mode Override</group>
      <struct>VolatileWork_BSS.EMP_Cooling_Fan_Mode_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Cooling_Fan_Status_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Cooling Fan | EMP_Cooling_Fan_Status Override</group>
      <struct>VolatileWork_BSS.EMP_Cooling_Fan_Status_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Cooling_Fan_Status_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Cooling Fan | EMP_Cooling_Fan_Status Override</group>
      <struct>VolatileWork_BSS.EMP_Cooling_Fan_Status_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Cooling_Fan_Board_Temp_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Cooling Fan | EMP_Cooling_Fan_Board_Temp Override</group>
      <struct>VolatileWork_BSS.EMP_Cooling_Fan_Board_Temp_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Cooling_Fan_Board_Temp_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Cooling Fan | EMP_Cooling_Fan_Board_Temp Override</group>
      <struct>VolatileWork_BSS.EMP_Cooling_Fan_Board_Temp_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EMP_Cooling_Fan_Power_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Cooling Fan | EMP_Cooling_Fan_Power Override</group>
      <struct>VolatileWork_BSS.EMP_Cooling_Fan_Power_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EMP_Cooling_Fan_Power_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EMP Cooling Fan | EMP_Cooling_Fan_Power Override</group>
      <struct>VolatileWork_BSS.EMP_Cooling_Fan_Power_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Drive_Enable_Delay</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Sensors | UQMController</group>
      <struct>ConstantWork.Drive_Enable_Delay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>startupDelay</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>10</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Time to wait before drawing on the miniview.</help>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay</group>
      <struct>ConstantWork.startupDelay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>InvertMode</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Sets the background color for the text.</help>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay|GetFaultName</group>
      <struct>ConstantWork.InvertMode</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Normal" value="0"/>
         <item name="Inverted" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>noErrText</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Text to display if there are no faults.</help>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay|GetFaultName</group>
      <struct>ConstantWork.noErrText</struct>
      <class>text</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>char</type>
      <text_len>10</text_len>
   </VarDec>
   <VarDec>
      <name>dispLength</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>9</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Number of characters to display when scrolling fault name.</help>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay|GetFaultName</group>
      <struct>ConstantWork.dispLength</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>lastScrollTime</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Time to spend on the last view of the scroll</help>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay|GetFaultName</group>
      <struct>ConstantWork.lastScrollTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>scrollTime</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Time to spend on each view of the scroll</help>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay|GetFaultName</group>
      <struct>ConstantWork.scrollTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>firstScrollTime</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Time to spend on first view of the scroll</help>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay|GetFaultName</group>
      <struct>ConstantWork.firstScrollTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>DisplayFaults</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enable displaying faults when they are active.</help>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay|GetFaultName</group>
      <struct>ConstantWork.DisplayFaults</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>minTime</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum time to display each fault name.</help>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay|GetFaultName</group>
      <struct>ConstantWork.minTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>quadIndex</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay</group>
      <struct>NonVolatileWork.quadIndex</struct>
      <class>array</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <col_len>1</col_len>
      <row_len>4</row_len>
   </VarDec>
   <VarDec>
      <name>listIndex</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay</group>
      <struct>NonVolatileWork.listIndex</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>dualIndex</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay</group>
      <struct>NonVolatileWork.dualIndex</struct>
      <class>array</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <col_len>1</col_len>
      <row_len>2</row_len>
   </VarDec>
   <VarDec>
      <name>singleIndex</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay</group>
      <struct>NonVolatileWork.singleIndex</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>screen</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <group>BuckyWagon_01|Foreground|MiniViewDisplay</group>
      <struct>NonVolatileWork.screen</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>VDO_Gauge_Brightness</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>7</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Gauges</group>
      <struct>ConstantWork.VDO_Gauge_Brightness</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>VDO_Gauge_StartupDelay</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>7</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Gauges</group>
      <struct>ConstantWork.VDO_Gauge_StartupDelay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PluggedInHistTimeeaton</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5.0E14</max>
      <min>-5.0E14</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Historesis time for plugged in detection.</help>
      <group>Sensors | EatonCharger</group>
      <struct>ConstantWork.PluggedInHistTimeeaton</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PluggedInMainsThesEaton</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Above this mains voltage the charger is plugged in.</help>
      <group>Sensors | EatonCharger</group>
      <struct>ConstantWork.PluggedInMainsThesEaton</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InputVoltage_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | InputVoltage Override</group>
      <struct>VolatileWork_BSS.InputVoltage_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>InputVoltage_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | InputVoltage Override</group>
      <struct>VolatileWork_BSS.InputVoltage_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>motor_torque_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy | motor_torque_Ovr Override</group>
      <struct>VolatileWork_BSS.motor_torque_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Estop_switch_ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors | Estop_switch_ovr Override</group>
      <struct>VolatileWork_BSS.Estop_switch_ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>E_Stop_Invert</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors</group>
      <struct>ConstantWork.E_Stop_Invert</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Estop_switch_ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Sensors | Estop_switch_ovr Override</group>
      <struct>VolatileWork_BSS.Estop_switch_ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Vehicle_Speed_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | Vehicle Speed | Vehicle_Speed Override</group>
      <struct>VolatileWork_BSS.Vehicle_Speed_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TireSize</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>in</units>
      <ctype>const Constant_T</ctype>
      <help>Used to calculate vehicle speed from motor speed</help>
      <group>Sensors | Vehicle Speed</group>
      <struct>ConstantWork.TireSize</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RearDiffRatio</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Used to calculate vehicle speed from motor speed</help>
      <group>Sensors | Vehicle Speed</group>
      <struct>ConstantWork.RearDiffRatio</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IntermediaryGearRatio</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Used to calculate vehicle speed from motor speed</help>
      <group>Sensors | Vehicle Speed</group>
      <struct>ConstantWork.IntermediaryGearRatio</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Vehicle_Speed_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | Vehicle Speed | Vehicle_Speed Override</group>
      <struct>VolatileWork_BSS.Vehicle_Speed_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Reverse_Switch_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | Reverse | Reverse_Switch | Reverse_Switch Override</group>
      <struct>VolatileWork_BSS.Reverse_Switch_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Reverse_SwitchPt</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Defines switch point in ADC units boolean conversion</help>
      <group>Sensors | Reverse | Reverse_Switch | Reverse_Switch Config</group>
      <struct>ConstantWork.Reverse_SwitchPt</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Reverse_Polarity</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>const Constant_T</ctype>
      <help>0 = High True    1 = Low True</help>
      <group>Sensors | Reverse | Reverse_Switch | Reverse_Switch Config</group>
      <struct>ConstantWork.Reverse_Polarity</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Reverse_Switch_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>Boolean</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override actuator, in engineering units</help>
      <group>Sensors | Reverse | Reverse_Switch | Reverse_Switch Override</group>
      <struct>VolatileWork_BSS.Reverse_Switch_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Accel_Pedal_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | Accel | Accel_Pedal | Accel_Pedal Override</group>
      <struct>VolatileWork_BSS.Accel_Pedal_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Accel_FilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>Sensors | Accel | Accel_Pedal | Accel_Pedal Config</group>
      <struct>ConstantWork.Accel_FilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Accel_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Offset after gain in engineering units</help>
      <group>Sensors | Accel | Accel_Pedal | Accel_Pedal Config</group>
      <struct>ConstantWork.Accel_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Accel_Zero</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>%/ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Scaling from A/D counts to engineering units</help>
      <group>Sensors | Accel | Accel_Pedal | Accel_Pedal Config</group>
      <struct>ConstantWork.Accel_Zero</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Accel_DfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>Sensors | Accel | Accel_Pedal | Accel_Pedal Config</group>
      <struct>ConstantWork.Accel_DfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Accel_Pedal_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>Sensors | Accel | Accel_Pedal | Accel_Pedal Override</group>
      <struct>VolatileWork_BSS.Accel_Pedal_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Brake_Pedal_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | Brake | Brake_Pedal | Brake_Pedal Override</group>
      <struct>VolatileWork_BSS.Brake_Pedal_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Brake_FilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>Sensors | Brake | Brake_Pedal | Brake_Pedal Config</group>
      <struct>ConstantWork.Brake_FilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Brake_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Offset after gain in engineering units</help>
      <group>Sensors | Brake | Brake_Pedal | Brake_Pedal Config</group>
      <struct>ConstantWork.Brake_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Brake_Zero</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>%/ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Scaling from A/D counts to engineering units</help>
      <group>Sensors | Brake | Brake_Pedal | Brake_Pedal Config</group>
      <struct>ConstantWork.Brake_Zero</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Brake_DfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>Sensors | Brake | Brake_Pedal | Brake_Pedal Config</group>
      <struct>ConstantWork.Brake_DfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Brake_Pedal_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>Sensors | Brake | Brake_Pedal | Brake_Pedal Override</group>
      <struct>VolatileWork_BSS.Brake_Pedal_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TorqueRequestLP</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BuckyWagon_01|Foreground|Control Strategy</group>
      <struct>ConstantWork.TorqueRequestLP</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>motor_torque_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy | motor_torque_Ovr Override</group>
      <struct>VolatileWork_BSS.motor_torque_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Overheat_PumpFan_Speed</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Overheat_PumpFan_Speed</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Charger_Temp_Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Charger_Temp_Enable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Inverter_Temp_Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Inverter_Temp_Enable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Inverter_Temp_Offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Inverter_Temp_Offset</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Charger_Temp_Offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Charger_Temp_Offset</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Eaton_HV_Charger_Temperature_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | Eaton_HV_Charger_Temperature Override</group>
      <struct>VolatileWork_BSS.Eaton_HV_Charger_Temperature_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Eaton_HV_Charger_Temperature_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | Eaton_HV_Charger_Temperature Override</group>
      <struct>VolatileWork_BSS.Eaton_HV_Charger_Temperature_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Rotor_Temp_Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Rotor_Temp_Enable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Rotor_Temp_Offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Rotor_Temp_Offset</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Stator_Temp_Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Stator_Temp_Enable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Stator_Temp_Offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Stator_Temp_Offset</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_PumpStateEnable_ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl | EHPAS_PumpStateEnable_ovr Override</group>
      <struct>VolatileWork_BSS.EHPAS_PumpStateEnable_ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Brake_Active_Threshold</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Percent at which the brake is considered triggered for pump activation</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.Brake_Active_Threshold</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>KeyOnRuntime_Sec</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Time to run brake and power steering pump on key on</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.KeyOnRuntime_Sec</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>LowSpeedManeuverRuntime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>run time for pump after leaving reverse if still below creep speed</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.LowSpeedManeuverRuntime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>hardBrakeLev</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>brake position considered hard braking event</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.hardBrakeLev</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>stopSpeed</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mph</units>
      <ctype>const Constant_T</ctype>
      <help>speed at which vehicle is considered stopped</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.stopSpeed</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>minPumpRunTime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>min time pump should be on ever</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.minPumpRunTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>creepSpeed</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mph</units>
      <ctype>const Constant_T</ctype>
      <help>speed below which vehicle is considered in low speed manuevers</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.creepSpeed</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>brakeTime_sec</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Time to run brake and power steering pump after switching out of reverse</help>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl</group>
      <struct>ConstantWork.brakeTime_sec</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EHPAS_PumpStateEnable_ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|EHPAS_PercentControl | EHPAS_PumpStateEnable_ovr Override</group>
      <struct>VolatileWork_BSS.EHPAS_PumpStateEnable_ovr_new</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Off" value="0"/>
         <item name="Low_Speed_Maneuvering" value="1"/>
         <item name="Normal_Driving" value="2"/>
         <item name="Normal_DrivingWithBrake" value="3"/>
         <item name="KeyUpActive" value="4"/>
         <item name="ZeroSpeedBraking" value="5"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Enable_PowerSteering_CAN_Msg</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Actuators</group>
      <struct>ConstantWork.Enable_PowerSteering_CAN_Msg</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Current_Limit_Override_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EatonCharger | Current_Limit_Override Override</group>
      <struct>VolatileWork_BSS.Current_Limit_Override_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Current_Limit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | EatonCharger</group>
      <struct>ConstantWork.Current_Limit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Current_Limit_Override_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EatonCharger | Current_Limit_Override Override</group>
      <struct>VolatileWork_BSS.Current_Limit_Override_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Voltage_Limit_Override_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EatonCharger | Voltage_Limit_Override Override</group>
      <struct>VolatileWork_BSS.Voltage_Limit_Override_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Voltage_Limit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | EatonCharger</group>
      <struct>ConstantWork.Voltage_Limit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Voltage_Limit_Override_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EatonCharger | Voltage_Limit_Override Override</group>
      <struct>VolatileWork_BSS.Voltage_Limit_Override_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Charge_Falt_Override_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EatonCharger | Charge_Falt_Override Override</group>
      <struct>VolatileWork_BSS.Charge_Falt_Override_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Charge_Falt_Override_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>This tells the charger that there is a problem with the vehcile where the charger can not charge the vehicle.</help>
      <group>Actuators | EatonCharger | Charge_Falt_Override Override</group>
      <struct>VolatileWork_BSS.Charge_Falt_Override_new</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Charge_Complete_Override_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EatonCharger | Charge_Complete_Override Override</group>
      <struct>VolatileWork_BSS.Charge_Complete_Override_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ChargeComplete_SOC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Max SOC that causes charger shutdown</help>
      <group>Actuators | EatonCharger</group>
      <struct>ConstantWork.ChargeComplete_SOC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Charge_Complete_Override_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EatonCharger | Charge_Complete_Override Override</group>
      <struct>VolatileWork_BSS.Charge_Complete_Override_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Charge_Enable_Override_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EatonCharger | Charge_Enable_Override Override</group>
      <struct>VolatileWork_BSS.Charge_Enable_Override_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Charge_Enable_Override_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | EatonCharger | Charge_Enable_Override Override</group>
      <struct>VolatileWork_BSS.Charge_Enable_Override_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Control_Mode</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM</group>
      <struct>ConstantWork.Control_Mode</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="None" value="0"/>
         <item name="Torque" value="1"/>
         <item name="Speed" value="2"/>
         <item name="Voltage" value="3"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Counter_Mode_Select</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM | Counter</group>
      <struct>ConstantWork.Counter_Mode_Select</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Counter" value="0"/>
         <item name="None" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Use_Raw_Speed</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM</group>
      <struct>ConstantWork.Use_Raw_Speed</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Ignore_Accel_Limit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM</group>
      <struct>ConstantWork.Ignore_Accel_Limit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>UQM_TurboMode</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM</group>
      <struct>ConstantWork.UQM_TurboMode</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Default" value="0"/>
         <item name="Efficiency" value="1"/>
         <item name="Acoustic" value="2"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Forward_Speed_Limit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM</group>
      <struct>ConstantWork.Forward_Speed_Limit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Reverse_Speed_Limit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM</group>
      <struct>ConstantWork.Reverse_Speed_Limit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>UQM_Enable_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | UQM | UQM_Enable Override</group>
      <struct>VolatileWork_BSS.UQM_Enable_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>UQM_Enable_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | UQM | UQM_Enable Override</group>
      <struct>VolatileWork_BSS.UQM_Enable_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>UQM_Torque_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | UQM | UQM_Torque Override</group>
      <struct>VolatileWork_BSS.UQM_Torque_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>UQM_Torque_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | UQM | UQM_Torque Override</group>
      <struct>VolatileWork_BSS.UQM_Torque_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>UQM_Direction_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | UQM | UQM_Direction Override</group>
      <struct>VolatileWork_BSS.UQM_Direction_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>UQM_Direction_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | UQM | UQM_Direction Override</group>
      <struct>VolatileWork_BSS.UQM_Direction_new</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Reverse" value="0"/>
         <item name="Forward" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Heartbeat_Identifier_1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM</group>
      <struct>ConstantWork.Heartbeat_Identifier_1</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CAN_Watchdog_Reset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Actuators | UQM</group>
      <struct>VolatileWork_BSS.CAN_Watchdog_Reset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Watchdog_Reset_Num</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM</group>
      <struct>ConstantWork.Watchdog_Reset_Num</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Heartbeat_Identifier_2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM</group>
      <struct>ConstantWork.Heartbeat_Identifier_2</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Limits_Control_Mode</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM</group>
      <struct>ConstantWork.Limits_Control_Mode</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Acceleration_Limit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM</group>
      <struct>ConstantWork.Acceleration_Limit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Suge_Limit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>Actuators | UQM</group>
      <struct>ConstantWork.Suge_Limit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Under_SOC_Shutdown_Thresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Addl_Fault_Detection|Battery|Over_Under_SOC_Management|SOCShutdown</group>
      <struct>ConstantWork.Under_SOC_Shutdown_Thresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Over_SOC_Shutdown_Thresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Addl_Fault_Detection|Battery|Over_Under_SOC_Management|SOCShutdown</group>
      <struct>ConstantWork.Over_SOC_Shutdown_Thresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Under_SOCAlertThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Percent above or below the JCS specified limits that a warning will be issued</units>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Addl_Fault_Detection|Battery|Over_Under_SOC_Management|SOCAlert</group>
      <struct>ConstantWork.Under_SOCAlertThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Over_SOCAlertThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Addl_Fault_Detection|Battery|Over_Under_SOC_Management|SOCAlert</group>
      <struct>ConstantWork.Over_SOCAlertThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>HV_Bus_allowed_mismatch</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>this is the max difference allowed before battery shutdown</help>
      <group>BuckyWagon_01|Foreground|Addl_Fault_Detection|Battery</group>
      <struct>ConstantWork.HV_Bus_allowed_mismatch</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>HV_Bus_offline_delay</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>time (seconds), since vehicle enable</units>
      <ctype>const Constant_T</ctype>
      <help>This leads to hv buss ofline fault</help>
      <group>BuckyWagon_01|Foreground|Addl_Fault_Detection|Battery</group>
      <struct>ConstantWork.HV_Bus_offline_delay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Low12VThres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Voltage below with low 12V fault occurs.</help>
      <group>Diagnostics and Protection</group>
      <struct>ConstantWork.Low12VThres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>LVVolt_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | LVVolt | LVVolt | LVVolt Override</group>
      <struct>VolatileWork_BSS.LVVolt_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>LVVolt_FilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>Sensors | LVVolt | LVVolt | LVVolt Config</group>
      <struct>ConstantWork.LVVolt_FilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>LVVolt_Gain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>V/ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Scaling from A/D counts to engineering units</help>
      <group>Sensors | LVVolt | LVVolt | LVVolt Config</group>
      <struct>ConstantWork.LVVolt_Gain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>LVVolt_Ofst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Offset after gain in engineering units</help>
      <group>Sensors | LVVolt | LVVolt | LVVolt Config</group>
      <struct>ConstantWork.LVVolt_Ofst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>LVVolt_DfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>Sensors | LVVolt | LVVolt | LVVolt Config</group>
      <struct>ConstantWork.LVVolt_DfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>LVVolt_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>Sensors | LVVolt | LVVolt | LVVolt Override</group>
      <struct>VolatileWork_BSS.LVVolt_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>High12VThres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Voltage below with low 12V fault occurs.</help>
      <group>Diagnostics and Protection</group>
      <struct>ConstantWork.High12VThres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>StallTrqThres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>% s</units>
      <ctype>const Constant_T</ctype>
      <help>% seconds of torque allowed while speed is below thres.</help>
      <group>Diagnostics and Protection</group>
      <struct>ConstantWork.StallTrqThres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AccelRstThres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Below this accel position fault can reset.</help>
      <group>Diagnostics and Protection</group>
      <struct>ConstantWork.AccelRstThres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>StallSpd</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mph</units>
      <ctype>const Constant_T</ctype>
      <help>Below this vehicle speed is concidered locked rotor.</help>
      <group>Diagnostics and Protection</group>
      <struct>ConstantWork.StallSpd</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FaultSeverityIndicator_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | FaultSeverityIndicator Override</group>
      <struct>VolatileWork_BSS.FaultSeverityIndicator_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FaultSeverityIndicator_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | FaultSeverityIndicator Override</group>
      <struct>VolatileWork_BSS.FaultSeverityIndicator_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ChargerState_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | ChargerState Override</group>
      <struct>VolatileWork_BSS.ChargerState_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ChargerState_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | ChargerState Override</group>
      <struct>VolatileWork_BSS.ChargerState_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IgnitionStatus_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | IgnitionStatus Override</group>
      <struct>VolatileWork_BSS.IgnitionStatus_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>IgnitionStatus_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | IgnitionStatus Override</group>
      <struct>VolatileWork_BSS.IgnitionStatus_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>OutputCurrent_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | OutputCurrent Override</group>
      <struct>VolatileWork_BSS.OutputCurrent_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>OutputCurrent_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | OutputCurrent Override</group>
      <struct>VolatileWork_BSS.OutputCurrent_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>OutputVoltage_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | OutputVoltage Override</group>
      <struct>VolatileWork_BSS.OutputVoltage_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>OutputVoltage_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | OutputVoltage Override</group>
      <struct>VolatileWork_BSS.OutputVoltage_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InputCurrentLimitMax_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | InputCurrentLimitMax Override</group>
      <struct>VolatileWork_BSS.InputCurrentLimitMax_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>InputCurrentLimitMax_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | InputCurrentLimitMax Override</group>
      <struct>VolatileWork_BSS.InputCurrentLimitMax_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InputCurrent_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | InputCurrent Override</group>
      <struct>VolatileWork_BSS.InputCurrent_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>InputCurrent_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>Sensors | EatonCharger | InputCurrent Override</group>
      <struct>VolatileWork_BSS.InputCurrent_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InstDCDCWatts</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Calculations</group>
      <struct>VolatileWork_BSS.InstDCDCWatts</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Downsample</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5.0E14</max>
      <min>-5.0E14</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Sec</units>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Calculations|kW calculation1</group>
      <struct>ConstantWork.Downsample</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Overheat_Threshold</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Overheat_Threshold</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Battery_OverTemp_Threshold</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>C</units>
      <ctype>const Constant_T</ctype>
      <help>Temperature at which an overtemp fault occurs</help>
      <group>Diagnostics and Protection</group>
      <struct>ConstantWork.Battery_OverTemp_Threshold</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ChargeInterruptor_Voltage</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>VDC</units>
      <ctype>const Constant_T</ctype>
      <help>Voltage at which to terminate charging via an EPO</help>
      <group>Diagnostics and Protection</group>
      <struct>ConstantWork.ChargeInterruptor_Voltage</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Battery_UnderTemp_Threshold</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>C</units>
      <ctype>const Constant_T</ctype>
      <help>Temperature at which an undertemp fault occurs</help>
      <group>Diagnostics and Protection</group>
      <struct>ConstantWork.Battery_UnderTemp_Threshold</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>A123_Isolation_Monitor_Ground_Fault_Threshold</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>counts</units>
      <ctype>const Constant_T</ctype>
      <help>gfi monitor threshold below which ground fault will be triggered</help>
      <group>Diagnostics and Protection</group>
      <struct>ConstantWork.A123_Isolation_Monitor_Ground_Fault_Threshold</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>HV_GFI_Check</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>time (seconds), since vehicle enable</units>
      <ctype>const Constant_T</ctype>
      <help>This leads to hv buss ofline fault</help>
      <group>BuckyWagon_01|Foreground|Sensors</group>
      <struct>ConstantWork.HV_GFI_Check</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InverterTemp_Overheat</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>5.1</format>
      <mask>0xFFFFFFFF</mask>
      <units>degC</units>
      <ctype>const Constant_T</ctype>
      <help>Temperature at which "Temp" warning light comes on</help>
      <group>Diagnostics and Protection</group>
      <struct>ConstantWork.InverterTemp_Overheat</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Accel_InputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>Sensors | Accel | Accel_Pedal | Accel_Pedal Config</group>
      <struct>ConstantWork.Accel_InputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Accel_InputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>Sensors | Accel | Accel_Pedal | Accel_Pedal Config</group>
      <struct>ConstantWork.Accel_InputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>LVVolt_InputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>Sensors | LVVolt | LVVolt | LVVolt Config</group>
      <struct>ConstantWork.LVVolt_InputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>LVVolt_InputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>Sensors | LVVolt | LVVolt | LVVolt Config</group>
      <struct>ConstantWork.LVVolt_InputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Brake_InputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>Sensors | Brake | Brake_Pedal | Brake_Pedal Config</group>
      <struct>ConstantWork.Brake_InputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Brake_InputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>Sensors | Brake | Brake_Pedal | Brake_Pedal Config</group>
      <struct>ConstantWork.Brake_InputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>startupCount</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>NonVolatile_T</ctype>
      <group>BuckyWagon_01|startup</group>
      <struct>NonVolatileWork.startupCount</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>totalOnTime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>NonVolatile_T</ctype>
      <group>BuckyWagon_01|onTimeCount</group>
      <struct>NonVolatileWork.totalOnTime</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CityID_CAN_1</name>
      <access>NA NA NA RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <help>City ID for CAN bus CAN_1</help>
      <group>System | System Config | Communication Config</group>
      <struct>NonVolatileWork.CityID_CAN_1</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>StateOfChargePctIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>ConstantWork.StateOfChargePctIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>4</len>
      <input>StateOfChargePctIn</input>
      <index>StateOfChargePctIdx</index>
   </VarDec>
   <VarDec>
      <name>StateOfChargePctIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>VolatileWork_BSS.StateOfChargePctIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>StateOfChargePctIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>VolatileWork_BSS.StateOfChargePctIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MotorSpdIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>ConstantWork.MotorSpdIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>8</len>
      <input>MotorSpdIn</input>
      <index>MotorSpdIdx</index>
   </VarDec>
   <VarDec>
      <name>MotorSpdIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>VolatileWork_BSS.MotorSpdIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>MotorSpdIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>VolatileWork_BSS.MotorSpdIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RegenBatteryLimitsMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>ConstantWork.RegenBatteryLimitsMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>RegenBatteryLimits</output>
      <col_prelookup>MotorSpdIdxArr</col_prelookup>
      <col_len>8</col_len>
      <row_prelookup>StateOfChargePctIdxArr</row_prelookup>
      <row_len>4</row_len>
   </VarDec>
   <VarDec>
      <name>RegenBatteryLimits</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving|Regen</group>
      <struct>VolatileWork_BSS.RegenBatteryLimits</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AccelPedalMap_v2IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving</group>
      <struct>ConstantWork.AccelPedalMap_v2IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>13</len>
      <input>AccelPedalMap_v2In</input>
      <index>AccelPedalMap_v2Idx</index>
   </VarDec>
   <VarDec>
      <name>AccelPedalMap_v2Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving</group>
      <struct>VolatileWork_BSS.AccelPedalMap_v2Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>AccelPedalMap_v2In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving</group>
      <struct>VolatileWork_BSS.AccelPedalMap_v2In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AccelPedalMap_v2Tbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving</group>
      <struct>ConstantWork.AccelPedalMap_v2Tbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>13</len>
      <output>AccelPedalMap_v2</output>
      <prelookup>AccelPedalMap_v2IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>AccelPedalMap_v2</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Drive|Normal Driving</group>
      <struct>VolatileWork_BSS.AccelPedalMap_v2</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Coolant_FanIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Coolant_FanIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>10</len>
      <input>Coolant_FanIn</input>
      <index>Coolant_FanIdx</index>
   </VarDec>
   <VarDec>
      <name>Coolant_FanIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>VolatileWork_BSS.Coolant_FanIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Coolant_FanIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>VolatileWork_BSS.Coolant_FanIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Coolant_FanTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Coolant_FanTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>10</len>
      <output>Coolant_Fan</output>
      <prelookup>Coolant_FanIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>Coolant_Fan</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>VolatileWork_BSS.Coolant_Fan</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Coolant_PumpIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Coolant_PumpIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>10</len>
      <input>Coolant_PumpIn</input>
      <index>Coolant_PumpIdx</index>
   </VarDec>
   <VarDec>
      <name>Coolant_PumpIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>VolatileWork_BSS.Coolant_PumpIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Coolant_PumpIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>VolatileWork_BSS.Coolant_PumpIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Coolant_PumpTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>ConstantWork.Coolant_PumpTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>10</len>
      <output>Coolant_Pump</output>
      <prelookup>Coolant_PumpIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>Coolant_Pump</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BuckyWagon_01|Foreground|Control Strategy|Cooling</group>
      <struct>VolatileWork_BSS.Coolant_Pump</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FaultManager</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <struct>ConstantWork.FaultManager[0]</struct>
      <help>Fault manager configuration.  Select up to 4 actions for each fault.</help>
      <group>Faults</group>
      <class>enumarr</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
      <col_enum column="0">
         <enum>
            <item name="Disabled" value="0"/>
            <item name="Enabled" value="1"/>
            <item name="Sticky" value="2"/>
            <item name="Enabled - Persistent" value="3"/>
            <item name="Sticky - Persistent" value="4"/>
            <item name="Save Occurred" value="5"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="2">
         <enum>
            <item name="-" value="0"/>
            <item name="Test" value="1"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="5">
         <enum>
            <item name="Bat_limit_high" value="0"/>
            <item name="Bat_limit_low" value="1"/>
            <item name="Battery_Warning" value="2"/>
            <item name="DisableDrive" value="3"/>
            <item name="EmergencyPowerOff" value="4"/>
            <item name="OpenContactors" value="5"/>
            <item name="PumpFan_Full" value="6"/>
            <item name="(None)" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="6">
         <enum>
            <item name="(None)" value="0"/>
            <item name="Suspected" value="1"/>
            <item name="Active" value="2"/>
            <item name="Suspected or Active" value="3"/>
            <item name="Occurred" value="4"/>
            <item name="Suspected or Occurred" value="5"/>
            <item name="Active or Occurred" value="6"/>
            <item name="Suspected or Active or Occurred" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="7">
         <enum>
            <item name="Bat_limit_high" value="0"/>
            <item name="Bat_limit_low" value="1"/>
            <item name="Battery_Warning" value="2"/>
            <item name="DisableDrive" value="3"/>
            <item name="EmergencyPowerOff" value="4"/>
            <item name="OpenContactors" value="5"/>
            <item name="PumpFan_Full" value="6"/>
            <item name="(None)" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="8">
         <enum>
            <item name="(None)" value="0"/>
            <item name="Suspected" value="1"/>
            <item name="Active" value="2"/>
            <item name="Suspected or Active" value="3"/>
            <item name="Occurred" value="4"/>
            <item name="Suspected or Occurred" value="5"/>
            <item name="Active or Occurred" value="6"/>
            <item name="Suspected or Active or Occurred" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="9">
         <enum>
            <item name="Bat_limit_high" value="0"/>
            <item name="Bat_limit_low" value="1"/>
            <item name="Battery_Warning" value="2"/>
            <item name="DisableDrive" value="3"/>
            <item name="EmergencyPowerOff" value="4"/>
            <item name="OpenContactors" value="5"/>
            <item name="PumpFan_Full" value="6"/>
            <item name="(None)" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="10">
         <enum>
            <item name="(None)" value="0"/>
            <item name="Suspected" value="1"/>
            <item name="Active" value="2"/>
            <item name="Suspected or Active" value="3"/>
            <item name="Occurred" value="4"/>
            <item name="Suspected or Occurred" value="5"/>
            <item name="Active or Occurred" value="6"/>
            <item name="Suspected or Active or Occurred" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="11">
         <enum>
            <item name="Bat_limit_high" value="0"/>
            <item name="Bat_limit_low" value="1"/>
            <item name="Battery_Warning" value="2"/>
            <item name="DisableDrive" value="3"/>
            <item name="EmergencyPowerOff" value="4"/>
            <item name="OpenContactors" value="5"/>
            <item name="PumpFan_Full" value="6"/>
            <item name="(None)" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="12">
         <enum>
            <item name="(None)" value="0"/>
            <item name="Suspected" value="1"/>
            <item name="Active" value="2"/>
            <item name="Suspected or Active" value="3"/>
            <item name="Occurred" value="4"/>
            <item name="Suspected or Occurred" value="5"/>
            <item name="Active or Occurred" value="6"/>
            <item name="Suspected or Active or Occurred" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_header>
         <enum>
            <item name="Mode" value="0"/>
            <item name="ID" value="1"/>
            <item name="Action 3 Condition" value="10"/>
            <item name="Action 4" value="11"/>
            <item name="Action 4 Condition" value="12"/>
            <item name="Test" value="2"/>
            <item name="Faulty Samples (X)" value="3"/>
            <item name="Total Samples (Y)" value="4"/>
            <item name="Action 1" value="5"/>
            <item name="Action 1 Condition" value="6"/>
            <item name="Action 2" value="7"/>
            <item name="Action 2 Condition" value="8"/>
            <item name="Action 3" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_header>
      <row_header>
         <enum>
            <item name="Accel_NeverZeroed" value="0"/>
            <item name="Accel_RangeHigh" value="1"/>
            <item name="Accel_RangeLow" value="2"/>
            <item name="Battery_OverTemp" value="3"/>
            <item name="Battery_UnderTemp" value="4"/>
            <item name="Brake_RangeHigh" value="5"/>
            <item name="Brake_RangeLow" value="6"/>
            <item name="ChargeComplete" value="7"/>
            <item name="CoolingOverheat" value="8"/>
            <item name="ESTOPped" value="9"/>
            <item name="Eaton_CAN_Timeout" value="10"/>
            <item name="GroundFault" value="11"/>
            <item name="HV_BUS_OFFLINE_check_fuse" value="12"/>
            <item name="High_Cell_Voltage_Shutdown" value="13"/>
            <item name="High_SOC_Alert" value="14"/>
            <item name="High_SOC_Shutdown" value="15"/>
            <item name="Inverter_OverTemp" value="16"/>
            <item name="LVVoltHigh" value="17"/>
            <item name="LVVoltLow" value="18"/>
            <item name="LVVolt_RangeHigh" value="19"/>
            <item name="LVVolt_RangeLow" value="20"/>
            <item name="LockedRotor" value="21"/>
            <item name="Low_SOC_Alert" value="22"/>
            <item name="Low_SOC_Shutdown" value="23"/>
            <item name="NoCAN_BCM_410" value="24"/>
            <item name="NoCAN_BCM_420" value="25"/>
            <item name="NoCAN_BCM_430" value="26"/>
            <item name="NoCAN_CoolantPump" value="27"/>
            <item name="NoCAN_CoolingFan" value="28"/>
            <item name="NoCAN_PowerSteering" value="29"/>
            <item name="NoCAN_UQM_04EF" value="30"/>
            <item name="NoCAN_UQM_14EF" value="31"/>
            <item name="NoCAN_UQM_18EF" value="32"/>
         </enum>
      </row_header>
      <col_len>13</col_len>
      <row_len>33</row_len>
   </VarDec>
   <VarDec>
      <name>FaultMarquees</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <struct>NonVolatileWork.FaultMarquees[0]</struct>
      <help>Displays a rolling marquee for suspected, active and occurred faults.</help>
      <group>Faults</group>
      <class>enumarr</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <col_enum column="0">
         <enum>
            <item name="Accel_NeverZeroed" value="0"/>
            <item name="Accel_RangeHigh" value="1"/>
            <item name="Eaton_CAN_Timeout" value="10"/>
            <item name="GroundFault" value="11"/>
            <item name="HV_BUS_OFFLINE_check_fuse" value="12"/>
            <item name="High_Cell_Voltage_Shutdown" value="13"/>
            <item name="High_SOC_Alert" value="14"/>
            <item name="High_SOC_Shutdown" value="15"/>
            <item name="Inverter_OverTemp" value="16"/>
            <item name="LVVoltHigh" value="17"/>
            <item name="LVVoltLow" value="18"/>
            <item name="LVVolt_RangeHigh" value="19"/>
            <item name="Accel_RangeLow" value="2"/>
            <item name="LVVolt_RangeLow" value="20"/>
            <item name="LockedRotor" value="21"/>
            <item name="Low_SOC_Alert" value="22"/>
            <item name="Low_SOC_Shutdown" value="23"/>
            <item name="NoCAN_BCM_410" value="24"/>
            <item name="NoCAN_BCM_420" value="25"/>
            <item name="NoCAN_BCM_430" value="26"/>
            <item name="NoCAN_CoolantPump" value="27"/>
            <item name="NoCAN_CoolingFan" value="28"/>
            <item name="NoCAN_PowerSteering" value="29"/>
            <item name="Battery_OverTemp" value="3"/>
            <item name="NoCAN_UQM_04EF" value="30"/>
            <item name="NoCAN_UQM_14EF" value="31"/>
            <item name="NoCAN_UQM_18EF" value="32"/>
            <item name="(None)" value="33"/>
            <item name="Battery_UnderTemp" value="4"/>
            <item name="Brake_RangeHigh" value="5"/>
            <item name="Brake_RangeLow" value="6"/>
            <item name="ChargeComplete" value="7"/>
            <item name="CoolingOverheat" value="8"/>
            <item name="ESTOPped" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="1">
         <enum>
            <item name="Accel_NeverZeroed" value="0"/>
            <item name="Accel_RangeHigh" value="1"/>
            <item name="Eaton_CAN_Timeout" value="10"/>
            <item name="GroundFault" value="11"/>
            <item name="HV_BUS_OFFLINE_check_fuse" value="12"/>
            <item name="High_Cell_Voltage_Shutdown" value="13"/>
            <item name="High_SOC_Alert" value="14"/>
            <item name="High_SOC_Shutdown" value="15"/>
            <item name="Inverter_OverTemp" value="16"/>
            <item name="LVVoltHigh" value="17"/>
            <item name="LVVoltLow" value="18"/>
            <item name="LVVolt_RangeHigh" value="19"/>
            <item name="Accel_RangeLow" value="2"/>
            <item name="LVVolt_RangeLow" value="20"/>
            <item name="LockedRotor" value="21"/>
            <item name="Low_SOC_Alert" value="22"/>
            <item name="Low_SOC_Shutdown" value="23"/>
            <item name="NoCAN_BCM_410" value="24"/>
            <item name="NoCAN_BCM_420" value="25"/>
            <item name="NoCAN_BCM_430" value="26"/>
            <item name="NoCAN_CoolantPump" value="27"/>
            <item name="NoCAN_CoolingFan" value="28"/>
            <item name="NoCAN_PowerSteering" value="29"/>
            <item name="Battery_OverTemp" value="3"/>
            <item name="NoCAN_UQM_04EF" value="30"/>
            <item name="NoCAN_UQM_14EF" value="31"/>
            <item name="NoCAN_UQM_18EF" value="32"/>
            <item name="(None)" value="33"/>
            <item name="Battery_UnderTemp" value="4"/>
            <item name="Brake_RangeHigh" value="5"/>
            <item name="Brake_RangeLow" value="6"/>
            <item name="ChargeComplete" value="7"/>
            <item name="CoolingOverheat" value="8"/>
            <item name="ESTOPped" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="2">
         <enum>
            <item name="Accel_NeverZeroed" value="0"/>
            <item name="Accel_RangeHigh" value="1"/>
            <item name="Eaton_CAN_Timeout" value="10"/>
            <item name="GroundFault" value="11"/>
            <item name="HV_BUS_OFFLINE_check_fuse" value="12"/>
            <item name="High_Cell_Voltage_Shutdown" value="13"/>
            <item name="High_SOC_Alert" value="14"/>
            <item name="High_SOC_Shutdown" value="15"/>
            <item name="Inverter_OverTemp" value="16"/>
            <item name="LVVoltHigh" value="17"/>
            <item name="LVVoltLow" value="18"/>
            <item name="LVVolt_RangeHigh" value="19"/>
            <item name="Accel_RangeLow" value="2"/>
            <item name="LVVolt_RangeLow" value="20"/>
            <item name="LockedRotor" value="21"/>
            <item name="Low_SOC_Alert" value="22"/>
            <item name="Low_SOC_Shutdown" value="23"/>
            <item name="NoCAN_BCM_410" value="24"/>
            <item name="NoCAN_BCM_420" value="25"/>
            <item name="NoCAN_BCM_430" value="26"/>
            <item name="NoCAN_CoolantPump" value="27"/>
            <item name="NoCAN_CoolingFan" value="28"/>
            <item name="NoCAN_PowerSteering" value="29"/>
            <item name="Battery_OverTemp" value="3"/>
            <item name="NoCAN_UQM_04EF" value="30"/>
            <item name="NoCAN_UQM_14EF" value="31"/>
            <item name="NoCAN_UQM_18EF" value="32"/>
            <item name="(None)" value="33"/>
            <item name="Battery_UnderTemp" value="4"/>
            <item name="Brake_RangeHigh" value="5"/>
            <item name="Brake_RangeLow" value="6"/>
            <item name="ChargeComplete" value="7"/>
            <item name="CoolingOverheat" value="8"/>
            <item name="ESTOPped" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_header>
         <enum>
            <item name="Current Suspected" value="0"/>
            <item name="Current Active" value="1"/>
            <item name="Current Occurred" value="2"/>
            <default>Unknown</default>
         </enum>
      </col_header>
      <row_header>
         <enum>
            <item name="FaultMarquees" value="0"/>
         </enum>
      </row_header>
      <col_len>3</col_len>
      <row_len>1</row_len>
   </VarDec>
   <VarDec>
      <name>FaultCommand</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <help>Select a command to control the fault manager.</help>
      <group>Faults</group>
      <struct>NonVolatileWork.FaultCommand</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="-" value="0"/>
         <item name="Clear All Faults" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FaultActionReason</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <help>Displays a rolling marquee of the reasons for fault action: FaultActionReason.</help>
      <group>Faults | Action Reasons</group>
      <struct>VolatileWork.FaultActionReason</struct>
      <class>enumarr</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <col_enum column="0">
         <enum>
            <item name="Accel_NeverZeroed" value="0"/>
            <item name="Accel_RangeHigh" value="1"/>
            <item name="Eaton_CAN_Timeout" value="10"/>
            <item name="GroundFault" value="11"/>
            <item name="HV_BUS_OFFLINE_check_fuse" value="12"/>
            <item name="High_Cell_Voltage_Shutdown" value="13"/>
            <item name="High_SOC_Alert" value="14"/>
            <item name="High_SOC_Shutdown" value="15"/>
            <item name="Inverter_OverTemp" value="16"/>
            <item name="LVVoltHigh" value="17"/>
            <item name="LVVoltLow" value="18"/>
            <item name="LVVolt_RangeHigh" value="19"/>
            <item name="Accel_RangeLow" value="2"/>
            <item name="LVVolt_RangeLow" value="20"/>
            <item name="LockedRotor" value="21"/>
            <item name="Low_SOC_Alert" value="22"/>
            <item name="Low_SOC_Shutdown" value="23"/>
            <item name="NoCAN_BCM_410" value="24"/>
            <item name="NoCAN_BCM_420" value="25"/>
            <item name="NoCAN_BCM_430" value="26"/>
            <item name="NoCAN_CoolantPump" value="27"/>
            <item name="NoCAN_CoolingFan" value="28"/>
            <item name="NoCAN_PowerSteering" value="29"/>
            <item name="Battery_OverTemp" value="3"/>
            <item name="NoCAN_UQM_04EF" value="30"/>
            <item name="NoCAN_UQM_14EF" value="31"/>
            <item name="NoCAN_UQM_18EF" value="32"/>
            <item name="(None)" value="33"/>
            <item name="Battery_UnderTemp" value="4"/>
            <item name="Brake_RangeHigh" value="5"/>
            <item name="Brake_RangeLow" value="6"/>
            <item name="ChargeComplete" value="7"/>
            <item name="CoolingOverheat" value="8"/>
            <item name="ESTOPped" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="1">
         <enum>
            <item name="Accel_NeverZeroed" value="0"/>
            <item name="Accel_RangeHigh" value="1"/>
            <item name="Eaton_CAN_Timeout" value="10"/>
            <item name="GroundFault" value="11"/>
            <item name="HV_BUS_OFFLINE_check_fuse" value="12"/>
            <item name="High_Cell_Voltage_Shutdown" value="13"/>
            <item name="High_SOC_Alert" value="14"/>
            <item name="High_SOC_Shutdown" value="15"/>
            <item name="Inverter_OverTemp" value="16"/>
            <item name="LVVoltHigh" value="17"/>
            <item name="LVVoltLow" value="18"/>
            <item name="LVVolt_RangeHigh" value="19"/>
            <item name="Accel_RangeLow" value="2"/>
            <item name="LVVolt_RangeLow" value="20"/>
            <item name="LockedRotor" value="21"/>
            <item name="Low_SOC_Alert" value="22"/>
            <item name="Low_SOC_Shutdown" value="23"/>
            <item name="NoCAN_BCM_410" value="24"/>
            <item name="NoCAN_BCM_420" value="25"/>
            <item name="NoCAN_BCM_430" value="26"/>
            <item name="NoCAN_CoolantPump" value="27"/>
            <item name="NoCAN_CoolingFan" value="28"/>
            <item name="NoCAN_PowerSteering" value="29"/>
            <item name="Battery_OverTemp" value="3"/>
            <item name="NoCAN_UQM_04EF" value="30"/>
            <item name="NoCAN_UQM_14EF" value="31"/>
            <item name="NoCAN_UQM_18EF" value="32"/>
            <item name="(None)" value="33"/>
            <item name="Battery_UnderTemp" value="4"/>
            <item name="Brake_RangeHigh" value="5"/>
            <item name="Brake_RangeLow" value="6"/>
            <item name="ChargeComplete" value="7"/>
            <item name="CoolingOverheat" value="8"/>
            <item name="ESTOPped" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="2">
         <enum>
            <item name="Accel_NeverZeroed" value="0"/>
            <item name="Accel_RangeHigh" value="1"/>
            <item name="Eaton_CAN_Timeout" value="10"/>
            <item name="GroundFault" value="11"/>
            <item name="HV_BUS_OFFLINE_check_fuse" value="12"/>
            <item name="High_Cell_Voltage_Shutdown" value="13"/>
            <item name="High_SOC_Alert" value="14"/>
            <item name="High_SOC_Shutdown" value="15"/>
            <item name="Inverter_OverTemp" value="16"/>
            <item name="LVVoltHigh" value="17"/>
            <item name="LVVoltLow" value="18"/>
            <item name="LVVolt_RangeHigh" value="19"/>
            <item name="Accel_RangeLow" value="2"/>
            <item name="LVVolt_RangeLow" value="20"/>
            <item name="LockedRotor" value="21"/>
            <item name="Low_SOC_Alert" value="22"/>
            <item name="Low_SOC_Shutdown" value="23"/>
            <item name="NoCAN_BCM_410" value="24"/>
            <item name="NoCAN_BCM_420" value="25"/>
            <item name="NoCAN_BCM_430" value="26"/>
            <item name="NoCAN_CoolantPump" value="27"/>
            <item name="NoCAN_CoolingFan" value="28"/>
            <item name="NoCAN_PowerSteering" value="29"/>
            <item name="Battery_OverTemp" value="3"/>
            <item name="NoCAN_UQM_04EF" value="30"/>
            <item name="NoCAN_UQM_14EF" value="31"/>
            <item name="NoCAN_UQM_18EF" value="32"/>
            <item name="(None)" value="33"/>
            <item name="Battery_UnderTemp" value="4"/>
            <item name="Brake_RangeHigh" value="5"/>
            <item name="Brake_RangeLow" value="6"/>
            <item name="ChargeComplete" value="7"/>
            <item name="CoolingOverheat" value="8"/>
            <item name="ESTOPped" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="3">
         <enum>
            <item name="Accel_NeverZeroed" value="0"/>
            <item name="Accel_RangeHigh" value="1"/>
            <item name="Eaton_CAN_Timeout" value="10"/>
            <item name="GroundFault" value="11"/>
            <item name="HV_BUS_OFFLINE_check_fuse" value="12"/>
            <item name="High_Cell_Voltage_Shutdown" value="13"/>
            <item name="High_SOC_Alert" value="14"/>
            <item name="High_SOC_Shutdown" value="15"/>
            <item name="Inverter_OverTemp" value="16"/>
            <item name="LVVoltHigh" value="17"/>
            <item name="LVVoltLow" value="18"/>
            <item name="LVVolt_RangeHigh" value="19"/>
            <item name="Accel_RangeLow" value="2"/>
            <item name="LVVolt_RangeLow" value="20"/>
            <item name="LockedRotor" value="21"/>
            <item name="Low_SOC_Alert" value="22"/>
            <item name="Low_SOC_Shutdown" value="23"/>
            <item name="NoCAN_BCM_410" value="24"/>
            <item name="NoCAN_BCM_420" value="25"/>
            <item name="NoCAN_BCM_430" value="26"/>
            <item name="NoCAN_CoolantPump" value="27"/>
            <item name="NoCAN_CoolingFan" value="28"/>
            <item name="NoCAN_PowerSteering" value="29"/>
            <item name="Battery_OverTemp" value="3"/>
            <item name="NoCAN_UQM_04EF" value="30"/>
            <item name="NoCAN_UQM_14EF" value="31"/>
            <item name="NoCAN_UQM_18EF" value="32"/>
            <item name="(None)" value="33"/>
            <item name="Battery_UnderTemp" value="4"/>
            <item name="Brake_RangeHigh" value="5"/>
            <item name="Brake_RangeLow" value="6"/>
            <item name="ChargeComplete" value="7"/>
            <item name="CoolingOverheat" value="8"/>
            <item name="ESTOPped" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="4">
         <enum>
            <item name="Accel_NeverZeroed" value="0"/>
            <item name="Accel_RangeHigh" value="1"/>
            <item name="Eaton_CAN_Timeout" value="10"/>
            <item name="GroundFault" value="11"/>
            <item name="HV_BUS_OFFLINE_check_fuse" value="12"/>
            <item name="High_Cell_Voltage_Shutdown" value="13"/>
            <item name="High_SOC_Alert" value="14"/>
            <item name="High_SOC_Shutdown" value="15"/>
            <item name="Inverter_OverTemp" value="16"/>
            <item name="LVVoltHigh" value="17"/>
            <item name="LVVoltLow" value="18"/>
            <item name="LVVolt_RangeHigh" value="19"/>
            <item name="Accel_RangeLow" value="2"/>
            <item name="LVVolt_RangeLow" value="20"/>
            <item name="LockedRotor" value="21"/>
            <item name="Low_SOC_Alert" value="22"/>
            <item name="Low_SOC_Shutdown" value="23"/>
            <item name="NoCAN_BCM_410" value="24"/>
            <item name="NoCAN_BCM_420" value="25"/>
            <item name="NoCAN_BCM_430" value="26"/>
            <item name="NoCAN_CoolantPump" value="27"/>
            <item name="NoCAN_CoolingFan" value="28"/>
            <item name="NoCAN_PowerSteering" value="29"/>
            <item name="Battery_OverTemp" value="3"/>
            <item name="NoCAN_UQM_04EF" value="30"/>
            <item name="NoCAN_UQM_14EF" value="31"/>
            <item name="NoCAN_UQM_18EF" value="32"/>
            <item name="(None)" value="33"/>
            <item name="Battery_UnderTemp" value="4"/>
            <item name="Brake_RangeHigh" value="5"/>
            <item name="Brake_RangeLow" value="6"/>
            <item name="ChargeComplete" value="7"/>
            <item name="CoolingOverheat" value="8"/>
            <item name="ESTOPped" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="5">
         <enum>
            <item name="Accel_NeverZeroed" value="0"/>
            <item name="Accel_RangeHigh" value="1"/>
            <item name="Eaton_CAN_Timeout" value="10"/>
            <item name="GroundFault" value="11"/>
            <item name="HV_BUS_OFFLINE_check_fuse" value="12"/>
            <item name="High_Cell_Voltage_Shutdown" value="13"/>
            <item name="High_SOC_Alert" value="14"/>
            <item name="High_SOC_Shutdown" value="15"/>
            <item name="Inverter_OverTemp" value="16"/>
            <item name="LVVoltHigh" value="17"/>
            <item name="LVVoltLow" value="18"/>
            <item name="LVVolt_RangeHigh" value="19"/>
            <item name="Accel_RangeLow" value="2"/>
            <item name="LVVolt_RangeLow" value="20"/>
            <item name="LockedRotor" value="21"/>
            <item name="Low_SOC_Alert" value="22"/>
            <item name="Low_SOC_Shutdown" value="23"/>
            <item name="NoCAN_BCM_410" value="24"/>
            <item name="NoCAN_BCM_420" value="25"/>
            <item name="NoCAN_BCM_430" value="26"/>
            <item name="NoCAN_CoolantPump" value="27"/>
            <item name="NoCAN_CoolingFan" value="28"/>
            <item name="NoCAN_PowerSteering" value="29"/>
            <item name="Battery_OverTemp" value="3"/>
            <item name="NoCAN_UQM_04EF" value="30"/>
            <item name="NoCAN_UQM_14EF" value="31"/>
            <item name="NoCAN_UQM_18EF" value="32"/>
            <item name="(None)" value="33"/>
            <item name="Battery_UnderTemp" value="4"/>
            <item name="Brake_RangeHigh" value="5"/>
            <item name="Brake_RangeLow" value="6"/>
            <item name="ChargeComplete" value="7"/>
            <item name="CoolingOverheat" value="8"/>
            <item name="ESTOPped" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="6">
         <enum>
            <item name="Accel_NeverZeroed" value="0"/>
            <item name="Accel_RangeHigh" value="1"/>
            <item name="Eaton_CAN_Timeout" value="10"/>
            <item name="GroundFault" value="11"/>
            <item name="HV_BUS_OFFLINE_check_fuse" value="12"/>
            <item name="High_Cell_Voltage_Shutdown" value="13"/>
            <item name="High_SOC_Alert" value="14"/>
            <item name="High_SOC_Shutdown" value="15"/>
            <item name="Inverter_OverTemp" value="16"/>
            <item name="LVVoltHigh" value="17"/>
            <item name="LVVoltLow" value="18"/>
            <item name="LVVolt_RangeHigh" value="19"/>
            <item name="Accel_RangeLow" value="2"/>
            <item name="LVVolt_RangeLow" value="20"/>
            <item name="LockedRotor" value="21"/>
            <item name="Low_SOC_Alert" value="22"/>
            <item name="Low_SOC_Shutdown" value="23"/>
            <item name="NoCAN_BCM_410" value="24"/>
            <item name="NoCAN_BCM_420" value="25"/>
            <item name="NoCAN_BCM_430" value="26"/>
            <item name="NoCAN_CoolantPump" value="27"/>
            <item name="NoCAN_CoolingFan" value="28"/>
            <item name="NoCAN_PowerSteering" value="29"/>
            <item name="Battery_OverTemp" value="3"/>
            <item name="NoCAN_UQM_04EF" value="30"/>
            <item name="NoCAN_UQM_14EF" value="31"/>
            <item name="NoCAN_UQM_18EF" value="32"/>
            <item name="(None)" value="33"/>
            <item name="Battery_UnderTemp" value="4"/>
            <item name="Brake_RangeHigh" value="5"/>
            <item name="Brake_RangeLow" value="6"/>
            <item name="ChargeComplete" value="7"/>
            <item name="CoolingOverheat" value="8"/>
            <item name="ESTOPped" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_header>
         <enum>
            <item name="Bat_limit_high" value="0"/>
            <item name="Bat_limit_low" value="1"/>
            <item name="Battery_Warning" value="2"/>
            <item name="DisableDrive" value="3"/>
            <item name="EmergencyPowerOff" value="4"/>
            <item name="OpenContactors" value="5"/>
            <item name="PumpFan_Full" value="6"/>
            <default>Unknown</default>
         </enum>
      </col_header>
      <row_header>
         <enum>
            <item name="-" value="0"/>
            <default>Unknown</default>
         </enum>
      </row_header>
      <col_len>7</col_len>
      <row_len>1</row_len>
   </VarDec>
   <VarDec>
      <name>ReverseOut_Pin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Digital output pin selection for DOut178p0011</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.ReverseOut_Pin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="FINJ1" value="12"/>
         <item name="FINJ10" value="21"/>
         <item name="FINJ11" value="22"/>
         <item name="FINJ12" value="23"/>
         <item name="TACH" value="24"/>
         <item name="LSD1" value="25"/>
         <item name="LSD2" value="26"/>
         <item name="LSD3" value="27"/>
         <item name="LSD4" value="28"/>
         <item name="LSD5" value="29"/>
         <item name="LSD6" value="30"/>
         <item name="FINJ2" value="13"/>
         <item name="LSD7" value="31"/>
         <item name="LSD8" value="32"/>
         <item name="LSD9" value="33"/>
         <item name="LSD10" value="34"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="FINJ3" value="14"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="EST 9" value="44"/>
         <item name="EST 10" value="45"/>
         <item name="EST 11" value="46"/>
         <item name="EST 12" value="47"/>
         <item name="EST 13" value="48"/>
         <item name="EST 14" value="49"/>
         <item name="EST 15" value="50"/>
         <item name="EST 16" value="51"/>
         <item name="FINJ4" value="15"/>
         <item name="MPRD" value="52"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="FINJ7" value="18"/>
         <item name="FINJ8" value="19"/>
         <item name="FINJ9" value="20"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fan_Pin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>PWM output pin selection for Fan_Pin</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.Fan_Pin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="H1" value="1"/>
         <item name="FINJ8" value="19"/>
         <item name="FINJ9" value="20"/>
         <item name="FINJ10" value="21"/>
         <item name="FINJ11" value="22"/>
         <item name="FINJ12" value="23"/>
         <item name="TACH" value="24"/>
         <item name="LSD1" value="25"/>
         <item name="LSD2" value="26"/>
         <item name="LSD3" value="27"/>
         <item name="LSD4" value="28"/>
         <item name="H2" value="10"/>
         <item name="LSD5" value="29"/>
         <item name="LSD6" value="30"/>
         <item name="LSD7" value="31"/>
         <item name="LSD8" value="32"/>
         <item name="LSD9" value="33"/>
         <item name="LSD10" value="34"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="FINJ1" value="12"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="EST 9" value="44"/>
         <item name="EST 10" value="45"/>
         <item name="EST 11" value="46"/>
         <item name="EST 12" value="47"/>
         <item name="EST 13" value="48"/>
         <item name="EST 14" value="49"/>
         <item name="FINJ2" value="13"/>
         <item name="EST 15" value="50"/>
         <item name="EST 16" value="51"/>
         <item name="H3" value="107"/>
         <item name="FINJ3" value="14"/>
         <item name="FINJ4" value="15"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="FINJ7" value="18"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>DCDCInhibit_Out_Pin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Digital output pin selection for DOut179p0011</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.DCDCInhibit_Out_Pin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="FINJ1" value="12"/>
         <item name="FINJ10" value="21"/>
         <item name="FINJ11" value="22"/>
         <item name="FINJ12" value="23"/>
         <item name="TACH" value="24"/>
         <item name="LSD1" value="25"/>
         <item name="LSD2" value="26"/>
         <item name="LSD3" value="27"/>
         <item name="LSD4" value="28"/>
         <item name="LSD5" value="29"/>
         <item name="LSD6" value="30"/>
         <item name="FINJ2" value="13"/>
         <item name="LSD7" value="31"/>
         <item name="LSD8" value="32"/>
         <item name="LSD9" value="33"/>
         <item name="LSD10" value="34"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="FINJ3" value="14"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="EST 9" value="44"/>
         <item name="EST 10" value="45"/>
         <item name="EST 11" value="46"/>
         <item name="EST 12" value="47"/>
         <item name="EST 13" value="48"/>
         <item name="EST 14" value="49"/>
         <item name="EST 15" value="50"/>
         <item name="EST 16" value="51"/>
         <item name="FINJ4" value="15"/>
         <item name="MPRD" value="52"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="FINJ7" value="18"/>
         <item name="FINJ8" value="19"/>
         <item name="FINJ9" value="20"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Brake_Light_Out</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Digital output pin selection for DOut180p0011</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.Brake_Light_Out</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="FINJ1" value="12"/>
         <item name="FINJ10" value="21"/>
         <item name="FINJ11" value="22"/>
         <item name="FINJ12" value="23"/>
         <item name="TACH" value="24"/>
         <item name="LSD1" value="25"/>
         <item name="LSD2" value="26"/>
         <item name="LSD3" value="27"/>
         <item name="LSD4" value="28"/>
         <item name="LSD5" value="29"/>
         <item name="LSD6" value="30"/>
         <item name="FINJ2" value="13"/>
         <item name="LSD7" value="31"/>
         <item name="LSD8" value="32"/>
         <item name="LSD9" value="33"/>
         <item name="LSD10" value="34"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="FINJ3" value="14"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="EST 9" value="44"/>
         <item name="EST 10" value="45"/>
         <item name="EST 11" value="46"/>
         <item name="EST 12" value="47"/>
         <item name="EST 13" value="48"/>
         <item name="EST 14" value="49"/>
         <item name="EST 15" value="50"/>
         <item name="EST 16" value="51"/>
         <item name="FINJ4" value="15"/>
         <item name="MPRD" value="52"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="FINJ7" value="18"/>
         <item name="FINJ8" value="19"/>
         <item name="FINJ9" value="20"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EStop_Switch_Pin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Digital input pin selection for EStop_Switch_Pin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.EStop_Switch_Pin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="AN1M" value="56"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="AN2M" value="57"/>
         <item name="AN20M" value="75"/>
         <item name="AN21M" value="76"/>
         <item name="AN22M" value="77"/>
         <item name="AN23M" value="78"/>
         <item name="AN24M" value="79"/>
         <item name="AN25M" value="80"/>
         <item name="AN26M" value="81"/>
         <item name="AN27M" value="82"/>
         <item name="AN28M" value="83"/>
         <item name="AN29M" value="84"/>
         <item name="AN3M" value="58"/>
         <item name="AN30M" value="85"/>
         <item name="AN31M" value="86"/>
         <item name="AN32M" value="87"/>
         <item name="AN33M" value="88"/>
         <item name="AN34M" value="89"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="DG1M" value="93"/>
         <item name="DG2M" value="94"/>
         <item name="DG3M" value="95"/>
         <item name="AN4M" value="59"/>
         <item name="DG4M" value="96"/>
         <item name="DG5M" value="102"/>
         <item name="DG6M" value="103"/>
         <item name="DG7M" value="104"/>
         <item name="SPD1" value="105"/>
         <item name="SPD2" value="106"/>
         <item name="DG8M" value="111"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Reverse_Switch_Pin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for Reverse_Switch_Pin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Reverse_Switch_Pin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="AN20M" value="75"/>
         <item name="AN21M" value="76"/>
         <item name="AN22M" value="77"/>
         <item name="AN23M" value="78"/>
         <item name="AN24M" value="79"/>
         <item name="AN25M" value="80"/>
         <item name="AN26M" value="81"/>
         <item name="XDRP" value="55"/>
         <item name="AN27M" value="82"/>
         <item name="AN28M" value="83"/>
         <item name="AN29M" value="84"/>
         <item name="AN30M" value="85"/>
         <item name="AN31M" value="86"/>
         <item name="AN32M" value="87"/>
         <item name="AN33M" value="88"/>
         <item name="AN34M" value="89"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="AN1M" value="56"/>
         <item name="XDRP_B" value="92"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Reverse_Switch_Pin_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Reverse_Switch_Pin_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Accel_Pedal_Pin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for Accel_Pedal_Pin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Accel_Pedal_Pin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="AN20M" value="75"/>
         <item name="AN21M" value="76"/>
         <item name="AN22M" value="77"/>
         <item name="AN23M" value="78"/>
         <item name="AN24M" value="79"/>
         <item name="AN25M" value="80"/>
         <item name="AN26M" value="81"/>
         <item name="XDRP" value="55"/>
         <item name="AN27M" value="82"/>
         <item name="AN28M" value="83"/>
         <item name="AN29M" value="84"/>
         <item name="AN30M" value="85"/>
         <item name="AN31M" value="86"/>
         <item name="AN32M" value="87"/>
         <item name="AN33M" value="88"/>
         <item name="AN34M" value="89"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="AN1M" value="56"/>
         <item name="XDRP_B" value="92"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Accel_Pedal_Pin_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Accel_Pedal_Pin_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Brake_Pedal_Pin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for Brake_Pedal_Pin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Brake_Pedal_Pin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="AN20M" value="75"/>
         <item name="AN21M" value="76"/>
         <item name="AN22M" value="77"/>
         <item name="AN23M" value="78"/>
         <item name="AN24M" value="79"/>
         <item name="AN25M" value="80"/>
         <item name="AN26M" value="81"/>
         <item name="XDRP" value="55"/>
         <item name="AN27M" value="82"/>
         <item name="AN28M" value="83"/>
         <item name="AN29M" value="84"/>
         <item name="AN30M" value="85"/>
         <item name="AN31M" value="86"/>
         <item name="AN32M" value="87"/>
         <item name="AN33M" value="88"/>
         <item name="AN34M" value="89"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="AN1M" value="56"/>
         <item name="XDRP_B" value="92"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Brake_Pedal_Pin_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Brake_Pedal_Pin_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>LV_Voltage_Pin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for LV_Voltage_Pin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.LV_Voltage_Pin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="AN20M" value="75"/>
         <item name="AN21M" value="76"/>
         <item name="AN22M" value="77"/>
         <item name="AN23M" value="78"/>
         <item name="AN24M" value="79"/>
         <item name="AN25M" value="80"/>
         <item name="AN26M" value="81"/>
         <item name="XDRP" value="55"/>
         <item name="AN27M" value="82"/>
         <item name="AN28M" value="83"/>
         <item name="AN29M" value="84"/>
         <item name="AN30M" value="85"/>
         <item name="AN31M" value="86"/>
         <item name="AN32M" value="87"/>
         <item name="AN33M" value="88"/>
         <item name="AN34M" value="89"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="AN1M" value="56"/>
         <item name="XDRP_B" value="92"/>
         <item name="REF_14V" value="143"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>LV_Voltage_Pin_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.LV_Voltage_Pin_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>CAN_1_std_receive_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of received std CAN messages on bus CAN_1</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_1_std_receive_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_1_std_handled_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of handled std CAN messages on bus CAN_1</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_1_std_handled_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_1_std_last_unhandled_id</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Last received std CAN message on bus CAN_1, which was unhandled</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_1_std_last_unhandled_id</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_1_ext_receive_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of received ext CAN messages on bus CAN_1</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_1_ext_receive_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_1_ext_handled_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of handled ext CAN messages on bus CAN_1</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_1_ext_handled_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_1_ext_last_unhandled_id</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Last received ext CAN message on bus CAN_1, which was unhandled</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_1_ext_last_unhandled_id</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_2_std_receive_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of received std CAN messages on bus CAN_2</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_2_std_receive_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_2_std_handled_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of handled std CAN messages on bus CAN_2</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_2_std_handled_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_2_std_last_unhandled_id</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Last received std CAN message on bus CAN_2, which was unhandled</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_2_std_last_unhandled_id</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_2_ext_receive_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of received ext CAN messages on bus CAN_2</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_2_ext_receive_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_2_ext_handled_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of handled ext CAN messages on bus CAN_2</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_2_ext_handled_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_2_ext_last_unhandled_id</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Last received ext CAN message on bus CAN_2, which was unhandled</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_2_ext_last_unhandled_id</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>MotoHawkModelSecondsInUse</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <units>seconds</units>
      <ctype>NonVolatile_T</ctype>
      <help>Total runtime of this MotoHawk software model</help>
      <group>System | Version</group>
      <struct>NonVolatileWork.MotoHawkModelSecondsInUse</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
</VarDecs>