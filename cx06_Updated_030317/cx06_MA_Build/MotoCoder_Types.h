
/* MotoCoder_Types.h */
/* Generated by MotoCoder */
/* Version: 0.10.7 */
/* At: 2017-03-08 22:42:23 */
/* Copyright: 2017 Woodward. */


#ifndef MOTOCODER_TYPES_H
#define MOTOCODER_TYPES_H



	


/* reference_T used as a pointer to DataStorage */
#ifndef defined_reference_T
#define defined_reference_T
typedef void * reference_T;
#endif

/* struct_reference_T used as a pointer to Structure DataStorage */
#ifndef defined_struct_reference_T
#define defined_struct_reference_T
typedef void * struct_reference_T;
#endif

#ifndef defined_char_T
#define defined_char_T
typedef char                   char_T;
#endif

#ifndef defined_boolean_T
#define defined_boolean_T
typedef unsigned char          boolean_T;
#endif

#ifndef defined_int8_T
#define defined_int8_T
typedef signed char            int8_T;
#endif

#ifndef defined_uint8_T
#define defined_uint8_T
typedef unsigned char          uint8_T;
#endif

#ifndef defined_int16_T
#define defined_int16_T
typedef short                  int16_T;
#endif

#ifndef defined_uint16_T
#define defined_uint16_T
typedef unsigned short         uint16_T;
#endif

#ifndef defined_int32_T
#define defined_int32_T
typedef int                    int32_T;
#endif

#ifndef defined_uint32_T
#define defined_uint32_T
typedef unsigned int           uint32_T;
#endif

#ifndef defined_int64_T
#define defined_int64_T
typedef long long              int64_T;
#endif

#ifndef defined_uint64_T
#define defined_uint64_T
typedef unsigned long long     uint64_T;
#endif

#ifndef defined_real32_T
#define defined_real32_T
typedef float                  real32_T;
#endif

#ifndef defined_real64_T
#define defined_real64_T
typedef double                 real64_T;
#endif

#define Interrupt_Disable() DISABLE()
#define Interrupt_Enable() UNDISABLE()
    /* S_ConstFault structure */
typedef struct {
    uint8_T   mode;
    uint8_T   id;
    uint8_T   test;
    uint8_T   xlim;
    uint8_T   ylim;
    uint8_T   action1;
    uint8_T   action1_condition;
    uint8_T   action2;
    uint8_T   action2_condition;
    uint8_T   action3;
    uint8_T   action3_condition;
    uint8_T   action4;
    uint8_T   action4_condition;
} S_ConstFault_T;

/* S_Fault structure */
typedef struct {
    uint8_T   x;
    uint8_T   y;
} S_Fault_T;

/* S_FaultAction structure */
typedef struct {
    uint8_T   reference_count;
} S_FaultAction_T;

/* S_FaultManager structure */
typedef struct {
    uint8_T   suspected[4];
    uint8_T   active[4];
    uint8_T   occurred[4];
    uint8_T   last_suspected_fault;
    uint8_T   last_unsuspected_fault;
    uint8_T   last_active_fault;
    uint8_T   last_inactive_fault;
    uint8_T   last_occurred_fault;
} S_FaultManager_T;

/* S_DispFaultManager structure */
typedef struct {
    uint8_T   current_suspected_vardec;
    uint8_T   current_active_vardec;
    uint8_T   current_occurred_vardec;
} S_DispFaultManager_T;

/* S_ConstFaultManager structure */
typedef struct {
    uint8_T   num_faults;
    uint8_T   num_actions;
} S_ConstFaultManager_T;

/* FaultActions Enumeration */
typedef enum {
    FAULTACTIONS_CLUTCH=0,
    FAULTACTIONS_UREALEANRICH=1,
    FAULTACTIONS_UREA_INJECT=2,
    FAULTACTIONS_INHIBITAC=3,
    FAULTACTIONS_INHIBITASSISTTAKEOFF=4,
    FAULTACTIONS_INHIBITDIESEL=5,
    FAULTACTIONS_INHIBITEV=6,
    FAULTACTIONS_INHIBITENGINESS=7,
    FAULTACTIONS_INHIBITREGEN=8,
    FAULTACTIONS_OPENPARENNONECLOSEPAREN=9,
} E_FaultActions;

/* FaultDisp Enumeration */
typedef enum {
    FAULTDISP_CURRENTSUSPECTED=0,
    FAULTDISP_CURRENTACTIVE=1,
    FAULTDISP_CURRENTOCCURRED=2,
} E_FaultDisp;

/* Fault_Cols Enumeration */
typedef enum {
    FAULT_COLS_MODE=0,
    FAULT_COLS_ID=1,
    FAULT_COLS_ACTION3CONDITION=10,
    FAULT_COLS_ACTION4=11,
    FAULT_COLS_ACTION4CONDITION=12,
    FAULT_COLS_TEST=2,
    FAULT_COLS_FAULTYSAMPLESOPENPARENXCLOSEPAREN=3,
    FAULT_COLS_TOTALSAMPLESOPENPARENYCLOSEPAREN=4,
    FAULT_COLS_ACTION1=5,
    FAULT_COLS_ACTION1CONDITION=6,
    FAULT_COLS_ACTION2=7,
    FAULT_COLS_ACTION2CONDITION=8,
    FAULT_COLS_ACTION3=9,
} E_Fault_Cols;

/* Fault_Command Enumeration */
typedef enum {
    FAULT_COMMAND_DASH=0,
    FAULT_COMMAND_CLEARALLFAULTS=1,
} E_Fault_Command;

/* Fault_Cond Enumeration */
typedef enum {
    FAULT_COND_OPENPARENNONECLOSEPAREN=0,
    FAULT_COND_SUSPECTED=1,
    FAULT_COND_ACTIVE=2,
    FAULT_COND_SUSPECTEDORACTIVE=3,
    FAULT_COND_OCCURRED=4,
    FAULT_COND_SUSPECTEDOROCCURRED=5,
    FAULT_COND_ACTIVEOROCCURRED=6,
    FAULT_COND_SUSPECTEDORACTIVEOROCCURRED=7,
} E_Fault_Cond;

/* Fault_Mode Enumeration */
typedef enum {
    FAULT_MODE_DISABLED=0,
    FAULT_MODE_ENABLED=1,
    FAULT_MODE_STICKY=2,
    FAULT_MODE_ENABLEDDASHPERSISTENT=3,
    FAULT_MODE_STICKYDASHPERSISTENT=4,
    FAULT_MODE_SAVEOCCURRED=5,
} E_Fault_Mode;

/* Fault_Test Enumeration */
typedef enum {
    FAULT_TEST_DASH=0,
    FAULT_TEST_TEST=1,
} E_Fault_Test;

/* Faults Enumeration */
typedef enum {
    FAULTS_ACANALOGERR=0,
    FAULTS_ACLOWPRES=1,
    FAULTS_CLUTCHBACKUPRANGE=10,
    FAULTS_CLUTCHRANGE=11,
    FAULTS_CLUTCHREDUNDANT=12,
    FAULTS_FUELLEVELRANGE=13,
    FAULTS_GMLAN280=14,
    FAULTS_GMLAN380=15,
    FAULTS_IPT258=16,
    FAULTS_IPT278=17,
    FAULTS_IPT620=18,
    FAULTS_IPT638=19,
    FAULTS_ACCEL12SYNC=2,
    FAULTS_NOXMID_CAN=20,
    FAULTS_NOXPOST_CAN=21,
    FAULTS_NOXPRE_CAN=22,
    FAULTS_TEMP1A4=23,
    FAULTS_TEMP1A5=24,
    FAULTS_OPENPARENNONECLOSEPAREN=25,
    FAULTS_ACCEL1RANGE=3,
    FAULTS_ACCEL2RANGE=4,
    FAULTS_BRAKEBACKUPRANGE=5,
    FAULTS_BRAKERANGE=6,
    FAULTS_BRAKEREDUNDANT=7,
    FAULTS_CAN2AO369=8,
    FAULTS_CAN2AO370=9,
} E_Faults;

/* VarDecEnum_0 Enumeration */
typedef enum {
    VARDECENUM_0_FALSE=0,
    VARDECENUM_0_TRUE=1,
} E_VarDecEnum_0;

/* VarDecEnum_1 Enumeration */
typedef enum {
    VARDECENUM_1_VALID=0,
    VARDECENUM_1_INVALID=1,
} E_VarDecEnum_1;

/* VarDecEnum_13 Enumeration */
typedef enum {
    VARDECENUM_13_PASSDASHTHROUGH=0,
    VARDECENUM_13_OVERRIDE=1,
} E_VarDecEnum_13;

/* VarDecEnum_15 Enumeration */
typedef enum {
    VARDECENUM_15_BY_STATE=0,
    VARDECENUM_15_BY_TORQUE_DMD=1,
} E_VarDecEnum_15;

/* VarDecEnum_16 Enumeration */
typedef enum {
    VARDECENUM_16_BUCK=0,
    VARDECENUM_16_BOOST=1,
} E_VarDecEnum_16;

/* VarDecEnum_17 Enumeration */
typedef enum {
    VARDECENUM_17_OFF=0,
    VARDECENUM_17_ON=1,
} E_VarDecEnum_17;

/* VarDecEnum_18 Enumeration */
typedef enum {
    VARDECENUM_18_RUN=0,
    VARDECENUM_18_RESTORETODEFAULTS=1,
} E_VarDecEnum_18;

/* VarDecEnum_19 Enumeration */
typedef enum {
    VARDECENUM_19_RUN=0,
    VARDECENUM_19_STORETOEEPROM=1,
} E_VarDecEnum_19;

/* VarDecEnum_20 Enumeration */
typedef enum {
    VARDECENUM_20_POWERUP=0,
    VARDECENUM_20_RUN=1,
    VARDECENUM_20_ESTOP=2,
    VARDECENUM_20_POWERDOWN=3,
    VARDECENUM_20_SHUTDOWN=4,
} E_VarDecEnum_20;

/* VarDecEnum_21 Enumeration */
typedef enum {
    VARDECENUM_21_OPENPARENNONECLOSEPAREN=-1,
    VARDECENUM_21_FUELP=0,
    VARDECENUM_21_FINJ3=14,
    VARDECENUM_21_FINJ4=15,
    VARDECENUM_21_FINJ5=16,
    VARDECENUM_21_FINJ6=17,
    VARDECENUM_21_AINJ1=18,
    VARDECENUM_21_AINJ2=19,
    VARDECENUM_21_AINJ3=20,
    VARDECENUM_21_AINJ4=21,
    VARDECENUM_21_AINJ5=22,
    VARDECENUM_21_AINJ6=23,
    VARDECENUM_21_HSOL1=2,
    VARDECENUM_21_TACH=24,
    VARDECENUM_21_EST1=36,
    VARDECENUM_21_EST2=37,
    VARDECENUM_21_EST3=38,
    VARDECENUM_21_EST4=39,
    VARDECENUM_21_EST5=40,
    VARDECENUM_21_EST6=41,
    VARDECENUM_21_EST7=42,
    VARDECENUM_21_EST8=43,
    VARDECENUM_21_MPRD=52,
    VARDECENUM_21_HSOL2=3,
    VARDECENUM_21_HSOL3=4,
    VARDECENUM_21_HSOL4=5,
    VARDECENUM_21_START=6,
    VARDECENUM_21_OILP=11,
    VARDECENUM_21_FINJ1=12,
    VARDECENUM_21_FINJ2=13,
} E_VarDecEnum_21;

/* VarDecEnum_22 Enumeration */
typedef enum {
    VARDECENUM_22_CLUTCH=0,
    VARDECENUM_22_UREALEANRICH=1,
    VARDECENUM_22_UREA_INJECT=2,
    VARDECENUM_22_INHIBITAC=3,
    VARDECENUM_22_INHIBITASSISTTAKEOFF=4,
    VARDECENUM_22_INHIBITDIESEL=5,
    VARDECENUM_22_INHIBITEV=6,
    VARDECENUM_22_INHIBITENGINESS=7,
    VARDECENUM_22_INHIBITREGEN=8,
} E_VarDecEnum_22;

/* VarDecEnum_23 Enumeration */
typedef enum {
    VARDECENUM_23_DASH=0,
} E_VarDecEnum_23;

/* VarDecEnum_24 Enumeration */
typedef enum {
    VARDECENUM_24_OPENPARENNONECLOSEPAREN=-1,
    VARDECENUM_24_ECUP=53,
    VARDECENUM_24_AN7M=62,
    VARDECENUM_24_AN8M=63,
    VARDECENUM_24_AN9M=64,
    VARDECENUM_24_AN10M=65,
    VARDECENUM_24_AN11M=66,
    VARDECENUM_24_AN12M=67,
    VARDECENUM_24_AN13M=68,
    VARDECENUM_24_AN14M=69,
    VARDECENUM_24_AN15M=70,
    VARDECENUM_24_AN16M=71,
    VARDECENUM_24_DRVP=54,
    VARDECENUM_24_AN17M=72,
    VARDECENUM_24_AN18M=73,
    VARDECENUM_24_AN19M=74,
    VARDECENUM_24_O2A=90,
    VARDECENUM_24_O2B=91,
    VARDECENUM_24_XDRP_B=92,
    VARDECENUM_24_XDRP=55,
    VARDECENUM_24_AN1M=56,
    VARDECENUM_24_AN2M=57,
    VARDECENUM_24_AN3M=58,
    VARDECENUM_24_AN4M=59,
    VARDECENUM_24_AN5M=60,
    VARDECENUM_24_AN6M=61,
} E_VarDecEnum_24;

/* VarDecEnum_25 Enumeration */
typedef enum {
    VARDECENUM_25_5V=0,
    VARDECENUM_25_2POINT7V=1,
} E_VarDecEnum_25;

/* VarDecEnum_26 Enumeration */
typedef enum {
    VARDECENUM_26_OPENPARENNONECLOSEPAREN=-1,
    VARDECENUM_26_DG1M=93,
    VARDECENUM_26_DG2M=94,
    VARDECENUM_26_DG4M=96,
    VARDECENUM_26_CNK=100,
} E_VarDecEnum_26;

/* VarDecEnum_27 Enumeration */
typedef enum {
    VARDECENUM_27_RISINGEDGE=0,
    VARDECENUM_27_FALLINGEDGE=1,
} E_VarDecEnum_27;

/* VarDecEnum_28 Enumeration */
typedef enum {
    VARDECENUM_28_NOALIASPROTECT=0,
    VARDECENUM_28_USEALIASPROTECT=1,
} E_VarDecEnum_28;

/* VarDecEnum_29 Enumeration */
typedef enum {
    VARDECENUM_29_DIGITALINPUT=0,
    VARDECENUM_29_VRINPUT=1,
} E_VarDecEnum_29;

/* VarDecEnum_30 Enumeration */
typedef enum {
    VARDECENUM_30_OPENPARENNONECLOSEPAREN=-1,
    VARDECENUM_30_AN1M=56,
    VARDECENUM_30_AN10M=65,
    VARDECENUM_30_AN11M=66,
    VARDECENUM_30_AN12M=67,
    VARDECENUM_30_AN13M=68,
    VARDECENUM_30_AN14M=69,
    VARDECENUM_30_AN15M=70,
    VARDECENUM_30_AN16M=71,
    VARDECENUM_30_AN17M=72,
    VARDECENUM_30_AN18M=73,
    VARDECENUM_30_AN19M=74,
    VARDECENUM_30_AN2M=57,
    VARDECENUM_30_O2A=90,
    VARDECENUM_30_O2B=91,
    VARDECENUM_30_DG1M=93,
    VARDECENUM_30_DG2M=94,
    VARDECENUM_30_DG4M=96,
    VARDECENUM_30_ESTOP=97,
    VARDECENUM_30_AN3M=58,
    VARDECENUM_30_AN4M=59,
    VARDECENUM_30_AN5M=60,
    VARDECENUM_30_AN6M=61,
    VARDECENUM_30_AN7M=62,
    VARDECENUM_30_AN8M=63,
    VARDECENUM_30_AN9M=64,
} E_VarDecEnum_30;

/* VarDecEnum_31 Enumeration */
typedef enum {
    VARDECENUM_31_OPENPARENNONECLOSEPAREN=-1,
    VARDECENUM_31_FUELP=0,
    VARDECENUM_31_FINJ2=13,
    VARDECENUM_31_FINJ3=14,
    VARDECENUM_31_FINJ4=15,
    VARDECENUM_31_FINJ5=16,
    VARDECENUM_31_FINJ6=17,
    VARDECENUM_31_AINJ1=18,
    VARDECENUM_31_AINJ2=19,
    VARDECENUM_31_AINJ3=20,
    VARDECENUM_31_AINJ4=21,
    VARDECENUM_31_AINJ5=22,
    VARDECENUM_31_ETC=1,
    VARDECENUM_31_AINJ6=23,
    VARDECENUM_31_TACH=24,
    VARDECENUM_31_EST1=36,
    VARDECENUM_31_EST2=37,
    VARDECENUM_31_EST3=38,
    VARDECENUM_31_EST4=39,
    VARDECENUM_31_EST5=40,
    VARDECENUM_31_EST6=41,
    VARDECENUM_31_EST7=42,
    VARDECENUM_31_EST8=43,
    VARDECENUM_31_HSOL1=2,
    VARDECENUM_31_HSOL2=3,
    VARDECENUM_31_HSOL3=4,
    VARDECENUM_31_HSOL4=5,
    VARDECENUM_31_START=6,
    VARDECENUM_31_OILP=11,
    VARDECENUM_31_FINJ1=12,
} E_VarDecEnum_31;

/* VarDecEnum_32 Enumeration */
typedef enum {
    VARDECENUM_32_OPENPARENNONECLOSEPAREN=-1,
    VARDECENUM_32_HSOL1=2,
    VARDECENUM_32_EST3=38,
    VARDECENUM_32_EST4=39,
    VARDECENUM_32_EST5=40,
    VARDECENUM_32_EST6=41,
    VARDECENUM_32_EST7=42,
    VARDECENUM_32_EST8=43,
    VARDECENUM_32_HSOL2=3,
    VARDECENUM_32_HSOL3=4,
    VARDECENUM_32_HSOL4=5,
    VARDECENUM_32_START=6,
    VARDECENUM_32_OILP=11,
    VARDECENUM_32_ESC=35,
    VARDECENUM_32_EST1=36,
    VARDECENUM_32_EST2=37,
} E_VarDecEnum_32;

/* VarDecEnum_6 Enumeration */
typedef enum {
    VARDECENUM_6_DISABLED=0,
    VARDECENUM_6_ENABLED=1,
} E_VarDecEnum_6;

/* VarDecEnum_8 Enumeration */
typedef enum {
    VARDECENUM_8_CLUTCHCONTROL=0,
    VARDECENUM_8_NEUTRALCONTROL=1,
} E_VarDecEnum_8;

/* VarDecEnum_9 Enumeration */
typedef enum {
    VARDECENUM_9_AUTOMATIC=0,
    VARDECENUM_9_MANUAL=1,
} E_VarDecEnum_9;



#endif

