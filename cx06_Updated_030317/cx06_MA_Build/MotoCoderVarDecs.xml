<?xml version="1.0" encoding="UTF-8"?>
<VarDecs>
   <VarDec>
      <name>min_Press_Thres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|AC_Pres</group>
      <struct>ConstantWork.min_Press_Thres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Cruise_Main_Tres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Cruise Buttons</group>
      <struct>ConstantWork.Cruise_Main_Tres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Cruise_Up_Tres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Cruise Buttons</group>
      <struct>ConstantWork.Cruise_Up_Tres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Cruise_Down_Tres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Cruise Buttons</group>
      <struct>ConstantWork.Cruise_Down_Tres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Accel1_Zero</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Accel</group>
      <struct>ConstantWork.Accel1_Zero</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Accel1_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Accel</group>
      <struct>ConstantWork.Accel1_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Accel2_Zero</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Accel</group>
      <struct>ConstantWork.Accel2_Zero</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Accel2_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Accel</group>
      <struct>ConstantWork.Accel2_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Acell_Max_Diff</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>2 Accel pots must be this close together</help>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Accel</group>
      <struct>ConstantWork.Acell_Max_Diff</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Brake_Zero</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Brake</group>
      <struct>ConstantWork.Brake_Zero</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Brake_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Brake</group>
      <struct>ConstantWork.Brake_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BrakeBackup_Zero</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Brake</group>
      <struct>ConstantWork.BrakeBackup_Zero</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BrakeBackup_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Brake</group>
      <struct>ConstantWork.BrakeBackup_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Brake_Redun_Err</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.2</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Brake sensors must be within this error else Redundante Fault</help>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Brake</group>
      <struct>ConstantWork.Brake_Redun_Err</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Clutch_Zero</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Clutch</group>
      <struct>ConstantWork.Clutch_Zero</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Clutch_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Clutch</group>
      <struct>ConstantWork.Clutch_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ClutchBackup_Zero</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Clutch</group>
      <struct>ConstantWork.ClutchBackup_Zero</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ClutchBackup_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Clutch</group>
      <struct>ConstantWork.ClutchBackup_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Clutch_Redun_Err</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Brake sensors must be within this error else Redundante Fault</help>
      <group>cx06_MA|Inputs|Analog Inputs|Driver Inputs|Clutch</group>
      <struct>ConstantWork.Clutch_Redun_Err</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FeulLevel_Zero</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Fuel Level</group>
      <struct>ConstantWork.FeulLevel_Zero</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelLevel_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Fuel Level</group>
      <struct>ConstantWork.FuelLevel_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Neutral_Invert</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Trans Inputs</group>
      <struct>ConstantWork.Neutral_Invert</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Reverse_Invert</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|Trans Inputs</group>
      <struct>ConstantWork.Reverse_Invert</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Tire_Size</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>2.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>in</units>
      <ctype>const Constant_T</ctype>
      <help>Tire Diameter (used to calculate vehicle speed</help>
      <group>cx06_MA|Inputs|IPT CAN Input|speed_calc</group>
      <struct>ConstantWork.Tire_Size</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>cuurentPlusMinus</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|JCI CAN Input</group>
      <struct>ConstantWork.cuurentPlusMinus</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>lowV</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|JCI CAN Input</group>
      <struct>ConstantWork.lowV</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>highV</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|JCI CAN Input</group>
      <struct>ConstantWork.highV</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TC_Slip_Thres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>rpm</units>
      <ctype>const Constant_T</ctype>
      <help>max allowable wheel spd difference before TC become active</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Activation of Traction Control|RRef_Wheel Diff</group>
      <struct>ConstantWork.TC_Slip_Thres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Age_Count_Comparison</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>value that age_count must equal before wheel derivative is calculated</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Activation of Traction Control|Wheel_Acceleration</group>
      <struct>ConstantWork.Age_Count_Comparison</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Filt_Wheel_Derv_K</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Activation of Traction Control|Wheel_Acceleration</group>
      <struct>ConstantWork.Filt_Wheel_Derv_K</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TC_Accel_Thres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>delta_rpm</units>
      <ctype>const Constant_T</ctype>
      <help>wheel acceleration threshold for determining slip</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Activation of Traction Control|Wheel_Acceleration</group>
      <struct>ConstantWork.TC_Accel_Thres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Clutch_Thres_Take_Off</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Rev_Limiter</group>
      <struct>ConstantWork.Clutch_Thres_Take_Off</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Clutch_Thres_Shifts</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Rev_Limiter</group>
      <struct>ConstantWork.Clutch_Thres_Shifts</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Eng_Torq_Take_Off</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.1</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Rev_Limiter</group>
      <struct>ConstantWork.Eng_Torq_Take_Off</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Eng_Torq_Shifts</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.1</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Rev_Limiter</group>
      <struct>ConstantWork.Eng_Torq_Shifts</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RegenSOCRampWidth</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Regen ramps out this fast over max SOC</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Regen|SOC_RampOut</group>
      <struct>ConstantWork.RegenSOCRampWidth</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Regen_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>2</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Pedal Position where regen is Full</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Regen</group>
      <struct>ConstantWork.Regen_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RegenMaxSOC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Max SOC to Regen At</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Regen|SOC_RampOut</group>
      <struct>ConstantWork.RegenMaxSOC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RegenSpdRampStop</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mph</units>
      <ctype>NonVolatile_T</ctype>
      <help>Speed at which regen is ramped out</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Regen|speed_RampOut</group>
      <struct>NonVolatileWork.RegenSpdRampStop</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RegenSpdRampStart</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mph</units>
      <ctype>NonVolatile_T</ctype>
      <help>Speed at which regen starts to ramp out</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Regen|speed_RampOut</group>
      <struct>NonVolatileWork.RegenSpdRampStart</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Regen_Start</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>NonVolatile_T</ctype>
      <help>Regen Starts above this position</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Regen</group>
      <struct>NonVolatileWork.Regen_Start</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AssistSOCRampWidth</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Assist ramps out this fast below min</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|HEV|SOC_RampOut</group>
      <struct>ConstantWork.AssistSOCRampWidth</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AT_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Clutch Position where full assist is reached</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|HEV|AssistedTakeOff</group>
      <struct>ConstantWork.AT_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AT_Ramp</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Clutch Position where assist starts to ramp out</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|HEV|AssistedTakeOff</group>
      <struct>ConstantWork.AT_Ramp</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AT_Stop</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Clutch Position where assist is gone</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|HEV|AssistedTakeOff</group>
      <struct>ConstantWork.AT_Stop</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AT_Level</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Max Assist Level</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|HEV|AssistedTakeOff</group>
      <struct>ConstantWork.AT_Level</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AT_Start</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>NonVolatile_T</ctype>
      <help>AT Torque starts ramping in here</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|HEV|AssistedTakeOff</group>
      <struct>NonVolatileWork.AT_Start</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AssistMinSOC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum SOC to assist</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|HEV|SOC_RampOut</group>
      <struct>ConstantWork.AssistMinSOC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ZEVSOCRampWidth</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Assist ramps out this fast below min</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|ZEV|SOC_RampOut</group>
      <struct>ConstantWork.ZEVSOCRampWidth</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ZEVMinSOC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum SOC to assist</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|ZEV|SOC_RampOut</group>
      <struct>ConstantWork.ZEVMinSOC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>R_rmp_out_rate</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0.001</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>time to ramp up max torque available from 0 to 1</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Traction Control</group>
      <struct>ConstantWork.R_rmp_out_rate</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>R_rmp_in_rate</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0.001</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>time it takes to ramp down max torque available from 1 to 0</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Traction Control</group>
      <struct>ConstantWork.R_rmp_in_rate</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>R_low_bound</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Low Bound for Torque Limit to Rear</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Traction Control</group>
      <struct>ConstantWork.R_low_bound</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>R_Torque_Allowed</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Max Torque allowed for Fiat, decimal from 0.0 -&gt; 1.0</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Traction Control|Manual Torque Override</group>
      <struct>ConstantWork.R_Torque_Allowed</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>F_rmp_out_rate</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0.001</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>time to ramp up max torque available from 0 to 1</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Traction Control</group>
      <struct>ConstantWork.F_rmp_out_rate</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>F_rmp_in_rate</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0.001</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>time it takes to ramp down max torque available from 1 to 0</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Traction Control</group>
      <struct>ConstantWork.F_rmp_in_rate</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>F_low_bound</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Low Bound for Torque Limit to Front</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Traction Control</group>
      <struct>ConstantWork.F_low_bound</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>F_Torque_Allowed</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Max Torque allowed for Fiat, decimal from 0.0 -&gt; 1.0</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Traction Control|Manual Torque Override</group>
      <struct>ConstantWork.F_Torque_Allowed</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Urea_PurgeLevel</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.1</format>
      <mask>0xFFFFFFFF</mask>
      <units>Hz</units>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>ConstantWork.Urea_PurgeLevel</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Dose_Freq</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>40</max>
      <min>0</min>
      <format>1.1</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code|Dosing_Alg</group>
      <struct>ConstantWork.Dose_Freq</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>off_Pres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|A/C Control Code</group>
      <struct>ConstantWork.off_Pres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>on_Pres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|A/C Control Code</group>
      <struct>ConstantWork.on_Pres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Enable_AC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|A/C Control Code</group>
      <struct>ConstantWork.Enable_AC</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Diff_Ratio</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>50</max>
      <min>0</min>
      <format>2.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Fiat/GMLAN Control Code|Gear_Estimation</group>
      <struct>ConstantWork.Diff_Ratio</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Gear_Ratio_1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>50</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Fiat/GMLAN Control Code|Gear_Estimation</group>
      <struct>ConstantWork.Gear_Ratio_1</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Gear_Ratio_2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>50</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Fiat/GMLAN Control Code|Gear_Estimation</group>
      <struct>ConstantWork.Gear_Ratio_2</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Gear_Ratio_3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>50</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Fiat/GMLAN Control Code|Gear_Estimation</group>
      <struct>ConstantWork.Gear_Ratio_3</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Gear_Ratio_4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>50</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Fiat/GMLAN Control Code|Gear_Estimation</group>
      <struct>ConstantWork.Gear_Ratio_4</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Gear_Ratio_5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>50</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Fiat/GMLAN Control Code|Gear_Estimation</group>
      <struct>ConstantWork.Gear_Ratio_5</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Gear_Ratio_6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>50</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Fiat/GMLAN Control Code|Gear_Estimation</group>
      <struct>ConstantWork.Gear_Ratio_6</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Clutch_Mech_Engage_in_Accel_Through_Shifts</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Activation of Accel Through Shifts</group>
      <struct>ConstantWork.Clutch_Mech_Engage_in_Accel_Through_Shifts</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Accel_Pedal_Pos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Activation of Accel Through Shifts</group>
      <struct>ConstantWork.Accel_Pedal_Pos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Activation_Spd</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Activation of Accel Through Shifts</group>
      <struct>ConstantWork.Activation_Spd</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EnableSport</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Activation of Accel Through Shifts</group>
      <struct>ConstantWork.EnableSport</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>InhibitAssist</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Hybrid state limits</group>
      <struct>ConstantWork.InhibitAssist</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>InhibitZEV</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Hybrid state limits</group>
      <struct>ConstantWork.InhibitZEV</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Preload_Value</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|EBrake Disable</group>
      <struct>ConstantWork.Preload_Value</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SB_Level</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>0</max>
      <min>-1</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Sustain Brake Regen Level</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|sustain Brake</group>
      <struct>ConstantWork.SB_Level</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SB_Off</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Above this SOC sustain brake turns off</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|sustain Brake</group>
      <struct>ConstantWork.SB_Off</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SB_On</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Below this SOC, sustain brake turns on</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|sustain Brake</group>
      <struct>ConstantWork.SB_On</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SB_Ramp_Time</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>60</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>SB ramps in over this amount of time</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|sustain Brake</group>
      <struct>ConstantWork.SB_Ramp_Time</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Filt_Accel_K</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>new*K+old*(1-K)</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Ramp_In_Pt</group>
      <struct>ConstantWork.Filt_Accel_K</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Slip_Determine_Mode</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Activation of Traction Control</group>
      <struct>ConstantWork.Slip_Determine_Mode</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TC_Rmp_Adjust_Rate</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0.001</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>time it takes to ramp down max torque available from 1 to 0</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Ramp_In_Pt</group>
      <struct>ConstantWork.TC_Rmp_Adjust_Rate</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AT_Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enables Assisted Takeoff</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Activation of Assisted Take-off</group>
      <struct>ConstantWork.AT_Enable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Speed_Threshold</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>60</max>
      <min>0</min>
      <format>1</format>
      <mask>0xFFFFFFFF</mask>
      <units>mph</units>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Rev_Limiter</group>
      <struct>ConstantWork.Speed_Threshold</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Clutch_Mech_Engage_in_ESS</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Engine Start-Stop</group>
      <struct>ConstantWork.Clutch_Mech_Engage_in_ESS</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>KillDelay</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>50</max>
      <min>0</min>
      <format>1.1</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Must be in neutral this long to kill</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Engine Start-Stop</group>
      <struct>ConstantWork.KillDelay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Kill_Time</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>50</max>
      <min>0</min>
      <format>1.1</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Kill engine for this long</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Engine Start-Stop</group>
      <struct>ConstantWork.Kill_Time</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Max_StartRetry</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>After trying to start this many times, must put in neutral</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Engine Start-Stop</group>
      <struct>ConstantWork.Max_StartRetry</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>StartRetry_Delay</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>50</max>
      <min>0</min>
      <format>1.1</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Try to start again this long after failing</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Engine Start-Stop</group>
      <struct>ConstantWork.StartRetry_Delay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Start_Delay</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>50</max>
      <min>0</min>
      <format>1.1</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Must be out of neutral this long to start</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Engine Start-Stop</group>
      <struct>ConstantWork.Start_Delay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Start_Time</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>50</max>
      <min>0</min>
      <format>1.1</format>
      <mask>0x0000FFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Max time to crank before failing</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Engine Start-Stop</group>
      <struct>ConstantWork.Start_Time</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Engine_Start_RPM</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>rpm</units>
      <ctype>const Constant_T</ctype>
      <help>Engine is running above this speed</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Engine Start-Stop</group>
      <struct>ConstantWork.Engine_Start_RPM</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Engine_Stop_RPM</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>rpm</units>
      <ctype>const Constant_T</ctype>
      <help>Engine is not running below this speed</help>
      <group>cx06_MA|Strategy|Hybrid Control Code|Engine Start-Stop</group>
      <struct>ConstantWork.Engine_Stop_RPM</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EngineStopStartAlg</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Engine Start-Stop</group>
      <struct>ConstantWork.EngineStopStartAlg</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="ClutchControl" value="0"/>
         <item name="NeutralControl" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>inhibitTC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Activation of Traction Control</group>
      <struct>NonVolatileWork.inhibitTC</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TCVersion</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Activation of Traction Control</group>
      <struct>NonVolatileWork.TCVersion</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Automatic" value="0"/>
         <item name="Manual" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>inhibitRegen</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Hybrid state limits</group>
      <struct>NonVolatileWork.inhibitRegen</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>NOx_Offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>1.1</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Dilution multiplier ureaMass * Urea_Dilution = SolutionMass</help>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>ConstantWork.NOx_Offset</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>UreaAccel_Mult</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Multiplier to increase injection from NOx path</help>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>ConstantWork.UreaAccel_Mult</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Urea_Dilution</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Dilution multiplier ureaMass * Urea_Dilution = SolutionMass</help>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>ConstantWork.Urea_Dilution</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>UreaNOx_Mult</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Multiplier to increase injection from NOx path</help>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>ConstantWork.UreaNOx_Mult</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>LeanMult</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>10</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Multiplier to Apply for Lean Operation</help>
      <group>cx06_MA|Strategy|Urea Control Code|LeanRich</group>
      <struct>ConstantWork.LeanMult</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>LeanTime</name>
      <access>RW RW RW RW</access>
      <gain>0.05</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>300</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>No Ammonia this long to go Rich</help>
      <group>cx06_MA|Strategy|Urea Control Code|LeanRich</group>
      <struct>ConstantWork.LeanTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RichMult</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>10</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Multiplier to Apply for Rich Operation</help>
      <group>cx06_MA|Strategy|Urea Control Code|LeanRich</group>
      <struct>ConstantWork.RichMult</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RichTime</name>
      <access>RW RW RW RW</access>
      <gain>0.05</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>300</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Ammonia this long to go Lean</help>
      <group>cx06_MA|Strategy|Urea Control Code|LeanRich</group>
      <struct>ConstantWork.RichTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>NOxThres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ppm</units>
      <ctype>const Constant_T</ctype>
      <help>Threshold level for ammonia present</help>
      <group>cx06_MA|Strategy|Urea Control Code|LeanRich</group>
      <struct>ConstantWork.NOxThres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AmmoniaMinTemp</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>C</units>
      <ctype>const Constant_T</ctype>
      <help>Below this temp Cats not active and ammonia detection disabled</help>
      <group>cx06_MA|Strategy|Urea Control Code|LeanRich</group>
      <struct>ConstantWork.AmmoniaMinTemp</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>LeanRichEnable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enables the Lean/Rich Strategy</help>
      <group>cx06_MA|Strategy|Urea Control Code|LeanRich</group>
      <struct>ConstantWork.LeanRichEnable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Urea_Purge</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Set Injection to a fixed rate</help>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>ConstantWork.Urea_Purge</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Urea_Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>ConstantWork.Urea_Enable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Dosing_Time</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>6000</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Time to Dose when engine starts</help>
      <group>cx06_MA|Strategy|Urea Control Code|Dosing_Alg</group>
      <struct>ConstantWork.Dosing_Time</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>UreaMin_Temp</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Exhaust must be this hot to inject</help>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>ConstantWork.UreaMin_Temp</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Nav_DVD_Unsafe_Value</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-10</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs</group>
      <struct>ConstantWork.Nav_DVD_Unsafe_Value</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
   </VarDec>
   <VarDec>
      <name>Gage_Delay</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs|Fuel/SOC_Gage_Conditioning</group>
      <struct>ConstantWork.Gage_Delay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TransGoToPoint</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs|Fuel/SOC_Gage_Conditioning</group>
      <struct>ConstantWork.TransGoToPoint</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fuel_Filter_K</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs|Fuel/SOC_Gage_Conditioning|Fuel_Signal_Conditioning</group>
      <struct>ConstantWork.Fuel_Filter_K</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Disable_MCU_Delay</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>6000</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>time which requested IPT Torque has to be below Zero_Threshold before disabling MCU</help>
      <group>cx06_MA|Outputs|IPT CAN Output|MCU_Management</group>
      <struct>ConstantWork.Disable_MCU_Delay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>H2_Tank_Pres_Cal</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|ARDAQ Outputs</group>
      <struct>ConstantWork.H2_Tank_Pres_Cal</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
   </VarDec>
   <VarDec>
      <name>ARDAQ_Fuel_Used_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|ARDAQ Outputs | ARDAQ_Fuel_Used Override</group>
      <struct>VolatileWork_BSS.ARDAQ_Fuel_Used_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ARDAQ_Fuel_Used_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|ARDAQ Outputs | ARDAQ_Fuel_Used Override</group>
      <struct>VolatileWork_BSS.ARDAQ_Fuel_Used_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fuel_Consumption_Adjustment</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|ARDAQ Outputs</group>
      <struct>ConstantWork.Fuel_Consumption_Adjustment</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ARDAQ_Engine_Torque_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|ARDAQ Outputs | ARDAQ_Engine_Torque Override</group>
      <struct>VolatileWork_BSS.ARDAQ_Engine_Torque_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ARDAQ_Engine_Torque_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|ARDAQ Outputs | ARDAQ_Engine_Torque Override</group>
      <struct>VolatileWork_BSS.ARDAQ_Engine_Torque_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Urea_PulseW</name>
      <access>RW RW RW RW</access>
      <gain>0.001</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>2.147483647E6</max>
      <min>-2.147483647E6</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms</units>
      <ctype>const Constant_T</ctype>
      <help>Length of time the injector is on</help>
      <group>cx06_MA|Outputs|Analog Outputs</group>
      <struct>ConstantWork.Urea_PulseW</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int32</type>
   </VarDec>
   <VarDec>
      <name>engineKill_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | engineKill Override</group>
      <struct>VolatileWork_BSS.engineKill_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>engineKill_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | engineKill Override</group>
      <struct>VolatileWork_BSS.engineKill_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EngineKill_Invert</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Invert the output</help>
      <group>cx06_MA|Outputs|Analog Outputs</group>
      <struct>ConstantWork.EngineKill_Invert</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>engineStart_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | engineStart Override</group>
      <struct>VolatileWork_BSS.engineStart_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>engineStart_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | engineStart Override</group>
      <struct>VolatileWork_BSS.engineStart_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EngineStart_Invert</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Invert the Output</help>
      <group>cx06_MA|Outputs|Analog Outputs</group>
      <struct>ConstantWork.EngineStart_Invert</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>AC_Clutch_On_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | AC_Clutch_On Override</group>
      <struct>VolatileWork_BSS.AC_Clutch_On_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>AC_Clutch_On_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | AC_Clutch_On Override</group>
      <struct>VolatileWork_BSS.AC_Clutch_On_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>AC_Fan_On_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | AC_Fan_On Override</group>
      <struct>VolatileWork_BSS.AC_Fan_On_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>AC_Fan_On_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | AC_Fan_On Override</group>
      <struct>VolatileWork_BSS.AC_Fan_On_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EngineStart_Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Invert the Output</help>
      <group>cx06_MA|Outputs|Analog Outputs</group>
      <struct>ConstantWork.EngineStart_Enable</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Idle_to_Crank_Delay</name>
      <access>RW RW RW RW</access>
      <gain>0.2</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1000</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>ms</units>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs|Backup_Relay_Control</group>
      <struct>ConstantWork.Idle_to_Crank_Delay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Crank_to_Idle_Delay</name>
      <access>RW RW RW RW</access>
      <gain>0.2</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1000</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>ms</units>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs|Backup_Relay_Control</group>
      <struct>ConstantWork.Crank_to_Idle_Delay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>EngineKill_Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Invert the output</help>
      <group>cx06_MA|Outputs|Analog Outputs</group>
      <struct>ConstantWork.EngineKill_Enable</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Urea_Pump_On_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | Urea_Pump_On Override</group>
      <struct>VolatileWork_BSS.Urea_Pump_On_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Urea_Pump_On_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | Urea_Pump_On Override</group>
      <struct>VolatileWork_BSS.Urea_Pump_On_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Nav_Veh_Spd_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | Nav_Veh_Spd Override</group>
      <struct>VolatileWork_BSS.Nav_Veh_Spd_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Nav_Veh_Spd_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | Nav_Veh_Spd Override</group>
      <struct>VolatileWork_BSS.Nav_Veh_Spd_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Nav_Ft_per_Pulse</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0.1</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs</group>
      <struct>ConstantWork.Nav_Ft_per_Pulse</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Nav_DVD_Safety</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs</group>
      <struct>ConstantWork.Nav_DVD_Safety</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Disable_Nav_Safety_Delay</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>6000</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>time which requested IPT Torque has to be below Zero_Threshold before disabling MCU</help>
      <group>cx06_MA|Outputs|Analog Outputs|Nav Sys Timer</group>
      <struct>ConstantWork.Disable_Nav_Safety_Delay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Nav_Spd_Freq_100_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | Nav_Spd_Freq_100 Override</group>
      <struct>VolatileWork_BSS.Nav_Spd_Freq_100_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Nav_Spd_Freq_100_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | Nav_Spd_Freq_100 Override</group>
      <struct>VolatileWork.Nav_Spd_Freq_100_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>Nav_Park_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | Nav_Park Override</group>
      <struct>VolatileWork_BSS.Nav_Park_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Nav_Park_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | Nav_Park Override</group>
      <struct>VolatileWork_BSS.Nav_Park_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>ISO_Fault_LED_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | ISO_Fault_LED Override</group>
      <struct>VolatileWork_BSS.ISO_Fault_LED_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ISO_Fault_LED_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | ISO_Fault_LED Override</group>
      <struct>VolatileWork_BSS.ISO_Fault_LED_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Batt_Fan_Circuit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-10</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs</group>
      <struct>ConstantWork.Batt_Fan_Circuit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
   </VarDec>
   <VarDec>
      <name>Batt_Fan_Relay_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | Batt_Fan_Relay Override</group>
      <struct>VolatileWork_BSS.Batt_Fan_Relay_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Batt_Fan_Relay_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Analog Outputs | Batt_Fan_Relay Override</group>
      <struct>VolatileWork_BSS.Batt_Fan_Relay_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>int8</type>
   </VarDec>
   <VarDec>
      <name>Reset_AO1_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Drive-by-Wire CAN Output | Reset_AO1 Override</group>
      <struct>VolatileWork_BSS.Reset_AO1_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Reset_AO1_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Drive-by-Wire CAN Output | Reset_AO1 Override</group>
      <struct>VolatileWork_BSS.Reset_AO1_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Output_1_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Drive-by-Wire CAN Output | Output_1 Override</group>
      <struct>VolatileWork_BSS.Output_1_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Output_1_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Drive-by-Wire CAN Output | Output_1 Override</group>
      <struct>VolatileWork_BSS.Output_1_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Out1_Zero</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Output 0% Voltage</help>
      <group>cx06_MA|Outputs|Drive-by-Wire CAN Output</group>
      <struct>ConstantWork.Out1_Zero</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Out1_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Output 100% Voltage</help>
      <group>cx06_MA|Outputs|Drive-by-Wire CAN Output</group>
      <struct>ConstantWork.Out1_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Reset_AO2_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Drive-by-Wire CAN Output | Reset_AO2 Override</group>
      <struct>VolatileWork_BSS.Reset_AO2_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Reset_AO2_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Drive-by-Wire CAN Output | Reset_AO2 Override</group>
      <struct>VolatileWork_BSS.Reset_AO2_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Output_2_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Drive-by-Wire CAN Output | Output_2 Override</group>
      <struct>VolatileWork_BSS.Output_2_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Output_2_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Drive-by-Wire CAN Output | Output_2 Override</group>
      <struct>VolatileWork_BSS.Output_2_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Out2_Zero</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Output1 0 Voltage</help>
      <group>cx06_MA|Outputs|Drive-by-Wire CAN Output</group>
      <struct>ConstantWork.Out2_Zero</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Out2_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Output 100% Voltage</help>
      <group>cx06_MA|Outputs|Drive-by-Wire CAN Output</group>
      <struct>ConstantWork.Out2_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_FL_V_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_FL_V Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_FL_V_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_FL_V_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_FL_V Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_FL_V_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Wheel_Speed_Validities</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Sets Validity bit for each wheels output on CAN</help>
      <group>cx06_MA|Outputs|Fiat CAN Output</group>
      <struct>ConstantWork.Wheel_Speed_Validities</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Valid" value="0"/>
         <item name="Invalid" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_FL_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_FL Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_FL_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_FL_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_FL Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_FL_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Min_Wheel_Vel</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>3.1</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>prevents ECU derating in first gear</help>
      <group>cx06_MA|Outputs|Fiat CAN Output</group>
      <struct>ConstantWork.Min_Wheel_Vel</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_FR_V_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_FR_V Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_FR_V_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_FR_V_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_FR_V Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_FR_V_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_FR_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_FR Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_FR_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_FR_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_FR Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_FR_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_RL_V_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_RL_V Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_RL_V_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_RL_V_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_RL_V Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_RL_V_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_RL_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_RL Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_RL_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_RL_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_RL Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_RL_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_RR_V_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_RR_V Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_RR_V_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_RR_V_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_RR_V Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_RR_V_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_RR_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_RR Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_RR_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Wheel_Ang_Vel_RR_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|Fiat CAN Output | Wheel_Ang_Vel_RR Override</group>
      <struct>VolatileWork_BSS.Wheel_Ang_Vel_RR_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Validity_110_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_110 Override</group>
      <struct>VolatileWork_BSS.Validity_110_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Validity_110_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_110 Override</group>
      <struct>VolatileWork_BSS.Validity_110_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Cruise_Active_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Cruise_Active Override</group>
      <struct>VolatileWork_BSS.Cruise_Active_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Cruise_Active_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Cruise_Active Override</group>
      <struct>VolatileWork_BSS.Cruise_Active_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Engine_Speed_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Engine_Speed Override</group>
      <struct>VolatileWork_BSS.Engine_Speed_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Engine_Speed_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Engine_Speed Override</group>
      <struct>VolatileWork_BSS.Engine_Speed_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Acc_Eff_Pos_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Acc_Eff_Pos Override</group>
      <struct>VolatileWork_BSS.Acc_Eff_Pos_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Acc_Eff_Pos_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Acc_Eff_Pos Override</group>
      <struct>VolatileWork_BSS.Acc_Eff_Pos_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Acc_Act_Pos_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Acc_Act_Pos Override</group>
      <struct>VolatileWork_BSS.Acc_Act_Pos_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Acc_Act_Pos_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Acc_Act_Pos Override</group>
      <struct>VolatileWork_BSS.Acc_Act_Pos_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Throttle_Pos_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Throttle_Pos Override</group>
      <struct>VolatileWork_BSS.Throttle_Pos_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Throttle_Pos_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Throttle_Pos Override</group>
      <struct>VolatileWork_BSS.Throttle_Pos_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Throttle_Cmd_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Throttle_Cmd Override</group>
      <struct>VolatileWork_BSS.Throttle_Cmd_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Throttle_Cmd_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Throttle_Cmd Override</group>
      <struct>VolatileWork_BSS.Throttle_Cmd_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Validity_120_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_120 Override</group>
      <struct>VolatileWork_BSS.Validity_120_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Validity_120_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_120 Override</group>
      <struct>VolatileWork_BSS.Validity_120_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Torque_Act_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Torque_Act Override</group>
      <struct>VolatileWork_BSS.Torque_Act_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Torque_Act_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Torque_Act Override</group>
      <struct>VolatileWork_BSS.Torque_Act_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Trq_Reduce_Fail_Sts_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Trq_Reduce_Fail_Sts Override</group>
      <struct>VolatileWork_BSS.Trq_Reduce_Fail_Sts_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Trq_Reduce_Fail_Sts_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Trq_Reduce_Fail_Sts Override</group>
      <struct>VolatileWork_BSS.Trq_Reduce_Fail_Sts_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Trq_Reduce_Trac_Fail_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Trq_Reduce_Trac_Fail Override</group>
      <struct>VolatileWork_BSS.Trq_Reduce_Trac_Fail_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Trq_Reduce_Trac_Fail_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Trq_Reduce_Trac_Fail Override</group>
      <struct>VolatileWork_BSS.Trq_Reduce_Trac_Fail_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Torque_Req_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Torque_Req Override</group>
      <struct>VolatileWork_BSS.Torque_Req_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Torque_Req_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Torque_Req Override</group>
      <struct>VolatileWork_BSS.Torque_Req_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Torque_Max_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Torque_Max Override</group>
      <struct>VolatileWork_BSS.Torque_Max_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Torque_Max_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Torque_Max Override</group>
      <struct>VolatileWork_BSS.Torque_Max_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Torque_Min_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Torque_Min Override</group>
      <struct>VolatileWork_BSS.Torque_Min_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Torque_Min_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Torque_Min Override</group>
      <struct>VolatileWork_BSS.Torque_Min_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Limp_Home_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Limp_Home Override</group>
      <struct>VolatileWork_BSS.Limp_Home_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Limp_Home_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Limp_Home Override</group>
      <struct>VolatileWork_BSS.Limp_Home_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Gen_Failed_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Gen_Failed Override</group>
      <struct>VolatileWork_BSS.Gen_Failed_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Gen_Failed_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Gen_Failed Override</group>
      <struct>VolatileWork_BSS.Gen_Failed_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Eng_Run_Sts_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Eng_Run_Sts Override</group>
      <struct>VolatileWork_BSS.Eng_Run_Sts_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Eng_Run_Sts_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Eng_Run_Sts Override</group>
      <struct>VolatileWork_BSS.Eng_Run_Sts_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Oil_Pres_Low_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Oil_Pres_Low Override</group>
      <struct>VolatileWork_BSS.Oil_Pres_Low_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Oil_Pres_Low_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Oil_Pres_Low Override</group>
      <struct>VolatileWork_BSS.Oil_Pres_Low_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>CheckEngineLights</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs</group>
      <struct>ConstantWork.CheckEngineLights</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Svc_Eng_Non_Emis_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Svc_Eng_Non_Emis Override</group>
      <struct>VolatileWork_BSS.Svc_Eng_Non_Emis_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Svc_Eng_Non_Emis_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Svc_Eng_Non_Emis Override</group>
      <struct>VolatileWork_BSS.Svc_Eng_Non_Emis_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Validity_300_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_300 Override</group>
      <struct>VolatileWork_BSS.Validity_300_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Validity_300_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_300 Override</group>
      <struct>VolatileWork_BSS.Validity_300_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Brake_Pdl_Sw2_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Brake_Pdl_Sw2 Override</group>
      <struct>VolatileWork_BSS.Brake_Pdl_Sw2_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Brake_Pdl_Sw2_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Brake_Pdl_Sw2 Override</group>
      <struct>VolatileWork_BSS.Brake_Pdl_Sw2_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Validity_308_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_308 Override</group>
      <struct>VolatileWork_BSS.Validity_308_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Validity_308_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_308 Override</group>
      <struct>VolatileWork_BSS.Validity_308_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Clnt_Hot_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Clnt_Hot Override</group>
      <struct>VolatileWork_BSS.Clnt_Hot_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Clnt_Hot_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Clnt_Hot Override</group>
      <struct>VolatileWork_BSS.Clnt_Hot_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Coolant_Temp_Warning_Thres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs</group>
      <struct>ConstantWork.Coolant_Temp_Warning_Thres</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fuel_Level_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Fuel_Level Override</group>
      <struct>VolatileWork_BSS.Fuel_Level_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fuel_Level_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Fuel_Level Override</group>
      <struct>VolatileWork_BSS.Fuel_Level_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SOC_Lvl_Full</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs|Fuel/SOC_Gage_Conditioning</group>
      <struct>ConstantWork.SOC_Lvl_Full</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SOC_Lvl_Zero</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs|Fuel/SOC_Gage_Conditioning</group>
      <struct>ConstantWork.SOC_Lvl_Zero</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Bat_Lvl_Offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs|Fuel/SOC_Gage_Conditioning</group>
      <struct>ConstantWork.Bat_Lvl_Offset</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Oil_Life_Rst_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Oil_Life_Rst Override</group>
      <struct>VolatileWork_BSS.Oil_Life_Rst_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Oil_Life_Rst_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Oil_Life_Rst Override</group>
      <struct>VolatileWork_BSS.Oil_Life_Rst_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Validity_320_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_320 Override</group>
      <struct>VolatileWork_BSS.Validity_320_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Validity_320_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_320 Override</group>
      <struct>VolatileWork_BSS.Validity_320_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Shift_Dir_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Shift_Dir Override</group>
      <struct>VolatileWork_BSS.Shift_Dir_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Shift_Dir_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Shift_Dir Override</group>
      <struct>VolatileWork_BSS.Shift_Dir_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Actual_Gear_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Actual_Gear Override</group>
      <struct>VolatileWork_BSS.Actual_Gear_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Actual_Gear_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Actual_Gear Override</group>
      <struct>VolatileWork_BSS.Actual_Gear_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Cmd_Gear_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Cmd_Gear Override</group>
      <struct>VolatileWork_BSS.Cmd_Gear_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Cmd_Gear_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Cmd_Gear Override</group>
      <struct>VolatileWork_BSS.Cmd_Gear_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Gear_Sel_Pos_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Gear_Sel_Pos Override</group>
      <struct>VolatileWork_BSS.Gear_Sel_Pos_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Gear_Sel_Pos_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Gear_Sel_Pos Override</group>
      <struct>VolatileWork_BSS.Gear_Sel_Pos_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Validity_410_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_410 Override</group>
      <struct>VolatileWork_BSS.Validity_410_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Validity_410_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_410 Override</group>
      <struct>VolatileWork_BSS.Validity_410_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Roll_Cnt_Rst_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Roll_Cnt_Rst Override</group>
      <struct>VolatileWork_BSS.Roll_Cnt_Rst_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Roll_Cnt_Rst_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Roll_Cnt_Rst Override</group>
      <struct>VolatileWork_BSS.Roll_Cnt_Rst_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Veh_Speed_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Veh_Speed Override</group>
      <struct>VolatileWork_BSS.Veh_Speed_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Veh_Speed_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Veh_Speed Override</group>
      <struct>VolatileWork_BSS.Veh_Speed_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Roll_Cnt_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Roll_Cnt Override</group>
      <struct>VolatileWork_BSS.Roll_Cnt_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Roll_Cnt_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Roll_Cnt Override</group>
      <struct>VolatileWork_BSS.Roll_Cnt_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Validity_510_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_510 Override</group>
      <struct>VolatileWork_BSS.Validity_510_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Validity_510_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Validity_510 Override</group>
      <struct>VolatileWork_BSS.Validity_510_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Chng_Oil_Soon_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Chng_Oil_Soon Override</group>
      <struct>VolatileWork_BSS.Chng_Oil_Soon_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Chng_Oil_Soon_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Chng_Oil_Soon Override</group>
      <struct>VolatileWork_BSS.Chng_Oil_Soon_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Coolant_Temp_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Coolant_Temp Override</group>
      <struct>VolatileWork_BSS.Coolant_Temp_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Coolant_Temp_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Coolant_Temp Override</group>
      <struct>VolatileWork_BSS.Coolant_Temp_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Trans_Hot_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Trans_Hot Override</group>
      <struct>VolatileWork_BSS.Trans_Hot_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Trans_Hot_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|GMLAN Outputs | Trans_Hot Override</group>
      <struct>VolatileWork_BSS.Trans_Hot_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Filt_Torque_Request_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Filt_Torque_Request Override</group>
      <struct>VolatileWork_BSS.Filt_Torque_Request_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>int16</type>
   </VarDec>
   <VarDec>
      <name>Filt_Torque_Request_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Filt_Torque_Request Override</group>
      <struct>VolatileWork_BSS.Filt_Torque_Request_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Enable_MCU_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Enable_MCU Override</group>
      <struct>VolatileWork_BSS.Enable_MCU_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Enable_MCU_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Enable_MCU Override</group>
      <struct>VolatileWork_BSS.Enable_MCU_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>motor_Enable_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | motor_Enable Override</group>
      <struct>VolatileWork_BSS.motor_Enable_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>motor_Enable_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | motor_Enable Override</group>
      <struct>VolatileWork_BSS.motor_Enable_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Zero_Threshold</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output|MCU_Management</group>
      <struct>ConstantWork.Zero_Threshold</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MCU_Manage_Source</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output|MCU_Management</group>
      <struct>ConstantWork.MCU_Manage_Source</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="By_State" value="0"/>
         <item name="By_Torque_Dmd" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Inhibit_MCU_Management</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output|MCU_Management</group>
      <struct>ConstantWork.Inhibit_MCU_Management</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Enable_IPT</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enables the IPT Motor</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.Enable_IPT</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Disable_AntiShudder_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Disable_AntiShudder Override</group>
      <struct>VolatileWork_BSS.Disable_AntiShudder_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Disable_AntiShudder_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Disable_AntiShudder Override</group>
      <struct>VolatileWork_BSS.Disable_AntiShudder_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>DisableAntiShudder</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>This should really be run by the ABS</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.DisableAntiShudder</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>VCU_Off_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | VCU_Off Override</group>
      <struct>VolatileWork_BSS.VCU_Off_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>VCU_Off_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | VCU_Off Override</group>
      <struct>VolatileWork_BSS.VCU_Off_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>VCUOff</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>This should really be run by the ABS</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.VCUOff</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>In_Drive_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | In_Drive Override</group>
      <struct>VolatileWork_BSS.In_Drive_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>In_Drive_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | In_Drive Override</group>
      <struct>VolatileWork_BSS.In_Drive_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Buck_V_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Buck_V Override</group>
      <struct>VolatileWork_BSS.Buck_V_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Buck_V_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Buck_V Override</group>
      <struct>VolatileWork_BSS.Buck_V_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>DCDC_Buck_V</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>15</max>
      <min>0</min>
      <format>2.1</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Buck Converter Output V</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.DCDC_Buck_V</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Boost_V_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Boost_V Override</group>
      <struct>VolatileWork_BSS.Boost_V_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Boost_V_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Boost_V Override</group>
      <struct>VolatileWork_BSS.Boost_V_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>DCDC_Boost_V</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>400</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Boost Converter Output V</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.DCDC_Boost_V</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>DCDC_Enable_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | DCDC_Enable Override</group>
      <struct>VolatileWork_BSS.DCDC_Enable_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>DCDC_Enable_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | DCDC_Enable Override</group>
      <struct>VolatileWork_BSS.DCDC_Enable_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SOC_On_DCDC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>SOC threshold to Enable DCDC Converter</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.SOC_On_DCDC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>SOC_Off_DCDC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>SOC threshold to Enable DCDC Converter</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.SOC_Off_DCDC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>DCDC_En</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enable DCDC Converter</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.DCDC_En</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Boost_Mode_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Boost_Mode Override</group>
      <struct>VolatileWork_BSS.Boost_Mode_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Boost_Mode_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Boost_Mode Override</group>
      <struct>VolatileWork_BSS.Boost_Mode_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>DCDC_Mode</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enable DCDC Converter</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.DCDC_Mode</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Buck" value="0"/>
         <item name="Boost" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Max_DC_Voltage_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Max_DC_Voltage Override</group>
      <struct>VolatileWork_BSS.Max_DC_Voltage_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Max_DC_Voltage_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Max_DC_Voltage Override</group>
      <struct>VolatileWork_BSS.Max_DC_Voltage_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Max_Voltage</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>400</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Upper Voltage Limit</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.Max_Voltage</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Min_DC_Voltage_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Min_DC_Voltage Override</group>
      <struct>VolatileWork_BSS.Min_DC_Voltage_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Min_DC_Voltage_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Min_DC_Voltage Override</group>
      <struct>VolatileWork_BSS.Min_DC_Voltage_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Min_Voltage</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>400</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Upper Voltage Limit</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.Min_Voltage</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Max_DC_Motor_I_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Max_DC_Motor_I Override</group>
      <struct>VolatileWork_BSS.Max_DC_Motor_I_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Max_DC_Motor_I_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Max_DC_Motor_I Override</group>
      <struct>VolatileWork_BSS.Max_DC_Motor_I_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Max_Current</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>400</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Upper Voltage Limit</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.Max_Current</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Max_DC_Gen_I_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Max_DC_Gen_I Override</group>
      <struct>VolatileWork_BSS.Max_DC_Gen_I_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Max_DC_Gen_I_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|IPT CAN Output | Max_DC_Gen_I Override</group>
      <struct>VolatileWork_BSS.Max_DC_Gen_I_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Regen_Current</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>400</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Upper Voltage Limit</help>
      <group>cx06_MA|Outputs|IPT CAN Output</group>
      <struct>ConstantWork.Regen_Current</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Reguest_PGN_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Reguest_PGN Override</group>
      <struct>VolatileWork_BSS.Reguest_PGN_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Reguest_PGN_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Reguest_PGN Override</group>
      <struct>VolatileWork_BSS.Reguest_PGN_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Contactor_Enable_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Contactor_Enable Override</group>
      <struct>VolatileWork_BSS.Contactor_Enable_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Contactor_Enable_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Contactor_Enable Override</group>
      <struct>VolatileWork_BSS.Contactor_Enable_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Contactor_On_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Contactor_On Override</group>
      <struct>VolatileWork_BSS.Contactor_On_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Contactor_On_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Contactor_On Override</group>
      <struct>VolatileWork_BSS.Contactor_On_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>BMS_Standby_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | BMS_Standby Override</group>
      <struct>VolatileWork_BSS.BMS_Standby_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BMS_Standby_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | BMS_Standby Override</group>
      <struct>VolatileWork_BSS.BMS_Standby_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Charger_Ready_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Charger_Ready Override</group>
      <struct>VolatileWork_BSS.Charger_Ready_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Charger_Ready_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Charger_Ready Override</group>
      <struct>VolatileWork_BSS.Charger_Ready_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Emergency_Contactor_Off_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Emergency_Contactor_Off Override</group>
      <struct>VolatileWork_BSS.Emergency_Contactor_Off_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Emergency_Contactor_Off_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Emergency_Contactor_Off Override</group>
      <struct>VolatileWork_BSS.Emergency_Contactor_Off_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Quit_Batt_Locked_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Quit_Batt_Locked Override</group>
      <struct>VolatileWork_BSS.Quit_Batt_Locked_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Quit_Batt_Locked_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Quit_Batt_Locked Override</group>
      <struct>VolatileWork_BSS.Quit_Batt_Locked_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Ambient_Temp_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Ambient_Temp Override</group>
      <struct>VolatileWork_BSS.Ambient_Temp_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Ambient_Temp_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Ambient_Temp Override</group>
      <struct>VolatileWork_BSS.Ambient_Temp_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Air_Pres_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Air_Pres Override</group>
      <struct>VolatileWork_BSS.Air_Pres_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Air_Pres_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | Air_Pres Override</group>
      <struct>VolatileWork_BSS.Air_Pres_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ISO_On_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | ISO_On Override</group>
      <struct>VolatileWork_BSS.ISO_On_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>ISO_On_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Outputs|JCI CAN Output | ISO_On Override</group>
      <struct>VolatileWork_BSS.ISO_On_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ISO_Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enable Ground Fault Meter</help>
      <group>cx06_MA|Outputs|JCI CAN Output</group>
      <struct>ConstantWork.ISO_Enable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ESTOP_Invert</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|MainState</group>
      <struct>ConstantWork.ESTOP_Invert</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MPRD_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|MainState | MPRD Override</group>
      <struct>VolatileWork_BSS.MPRD_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MPRD_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Directly Override Main Power Relay</help>
      <group>cx06_MA|MainState | MPRD Override</group>
      <struct>VolatileWork_BSS.MPRD_new</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Off" value="0"/>
         <item name="On" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>RestoreNVFactoryDefaults</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Restores NonVolatile Memory to Factory Defaults</help>
      <group>System | NonVolatile Storage</group>
      <struct>VolatileWork_BSS.RestoreNVFactoryDefaults</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Run" value="0"/>
         <item name="Restore To Defaults" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>StoreNV</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Stores RAM-Shadowed memory to serial EEPROM</help>
      <group>System | NonVolatile Storage</group>
      <struct>VolatileWork_BSS.StoreNV</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Run" value="0"/>
         <item name="Store To EEPROM" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>mainState</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|MainState</group>
      <struct>VolatileWork_BSS.mainState</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="PowerUp" value="0"/>
         <item name="Run" value="1"/>
         <item name="EStop" value="2"/>
         <item name="PowerDown" value="3"/>
         <item name="Shutdown" value="4"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Ki</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Fiat Accel Control</group>
      <struct>ConstantWork.Ki</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>volt_out_1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Fiat Accel Control</group>
      <struct>ConstantWork.volt_out_1</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Kp</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Fiat Accel Control</group>
      <struct>ConstantWork.Kp</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>duty_override_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Fiat Accel Control | duty_override Override</group>
      <struct>VolatileWork_BSS.duty_override_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>int16</type>
   </VarDec>
   <VarDec>
      <name>duty_override_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Fiat Accel Control | duty_override Override</group>
      <struct>VolatileWork_BSS.duty_override_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>volt_out_2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Fiat Accel Control</group>
      <struct>ConstantWork.volt_out_2</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PWM_Freq</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>200000</max>
      <min>200</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Fiat Accel Control</group>
      <struct>ConstantWork.PWM_Freq</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CityID_CAN_1</name>
      <access>NA NA NA RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <help>City ID for CAN bus CAN_1</help>
      <group>System | System Config | Communication Config</group>
      <struct>NonVolatileWork.CityID_CAN_1</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>buildyear</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Build Time Date Stamp</group>
      <struct>VolatileWork_BSS.buildyear</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>buildmonth</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Build Time Date Stamp</group>
      <struct>VolatileWork_BSS.buildmonth</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>buildday</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Build Time Date Stamp</group>
      <struct>VolatileWork_BSS.buildday</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>buildhour</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Build Time Date Stamp</group>
      <struct>VolatileWork_BSS.buildhour</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>buildmin</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Build Time Date Stamp</group>
      <struct>VolatileWork_BSS.buildmin</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>buildsec</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Build Time Date Stamp</group>
      <struct>VolatileWork_BSS.buildsec</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>AC_Cal_OrdIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|AC_Pres</group>
      <struct>ConstantWork.AC_Cal_OrdIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
      <len>9</len>
      <input>AC_Cal_OrdIn</input>
      <index>AC_Cal_OrdIdx</index>
   </VarDec>
   <VarDec>
      <name>AC_Cal_OrdIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|AC_Pres</group>
      <struct>VolatileWork_BSS.AC_Cal_OrdIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>AC_Cal_OrdIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|AC_Pres</group>
      <struct>VolatileWork_BSS.AC_Cal_OrdIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>AC_Cal_TblTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|AC_Pres</group>
      <struct>ConstantWork.AC_Cal_TblTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>AC_Cal_Tbl</output>
      <prelookup>AC_Cal_OrdIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>AC_Cal_Tbl</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|AC_Pres</group>
      <struct>VolatileWork_BSS.AC_Cal_Tbl</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAF_Cal_OrdIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>0.01</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E15</max>
      <min>-1.0E15</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>NonVolatile_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|MAF</group>
      <struct>NonVolatileWork.MAF_Cal_OrdIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>17</len>
      <input>MAF_Cal_OrdIn</input>
      <index>MAF_Cal_OrdIdx</index>
   </VarDec>
   <VarDec>
      <name>MAF_Cal_OrdIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|MAF</group>
      <struct>VolatileWork_BSS.MAF_Cal_OrdIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>MAF_Cal_OrdIn</name>
      <access>RO RO RO RO</access>
      <gain>0.01</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E15</max>
      <min>-1.0E15</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|MAF</group>
      <struct>VolatileWork_BSS.MAF_Cal_OrdIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAF_Cal_TblTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|MAF</group>
      <struct>ConstantWork.MAF_Cal_TblTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>17</len>
      <output>MAF_Cal_Tbl</output>
      <prelookup>MAF_Cal_OrdIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>MAF_Cal_Tbl</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Inputs|Analog Inputs|MAF</group>
      <struct>VolatileWork_BSS.MAF_Cal_Tbl</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RampInPt_SOC_OrdIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>NonVolatile_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Ramp_In_Pt</group>
      <struct>NonVolatileWork.RampInPt_SOC_OrdIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>RampInPt_SOC_OrdIn</input>
      <index>RampInPt_SOC_OrdIdx</index>
   </VarDec>
   <VarDec>
      <name>RampInPt_SOC_OrdIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Ramp_In_Pt</group>
      <struct>VolatileWork_BSS.RampInPt_SOC_OrdIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>RampInPt_SOC_OrdIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Ramp_In_Pt</group>
      <struct>VolatileWork_BSS.RampInPt_SOC_OrdIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RampInPt_SOCTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Ramp_In_Pt</group>
      <struct>ConstantWork.RampInPt_SOCTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>RampInPt_SOC</output>
      <prelookup>RampInPt_SOC_OrdIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>RampInPt_SOC</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|Ramp_In_Pt</group>
      <struct>VolatileWork_BSS.RampInPt_SOC</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Diesel_Accel_OrdIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|diesel</group>
      <struct>ConstantWork.Diesel_Accel_OrdIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>11</len>
      <input>Diesel_Accel_OrdIn</input>
      <index>Diesel_Accel_OrdIdx</index>
   </VarDec>
   <VarDec>
      <name>Diesel_Accel_OrdIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|diesel</group>
      <struct>VolatileWork_BSS.Diesel_Accel_OrdIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Diesel_Accel_OrdIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|diesel</group>
      <struct>VolatileWork_BSS.Diesel_Accel_OrdIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Diesel_Accel_MapTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|diesel</group>
      <struct>ConstantWork.Diesel_Accel_MapTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>11</len>
      <output>Diesel_Accel_Map</output>
      <prelookup>Diesel_Accel_OrdIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>Diesel_Accel_Map</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|diesel</group>
      <struct>VolatileWork_BSS.Diesel_Accel_Map</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ZEV_Accel_OrdIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|ZEV</group>
      <struct>ConstantWork.ZEV_Accel_OrdIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>11</len>
      <input>ZEV_Accel_OrdIn</input>
      <index>ZEV_Accel_OrdIdx</index>
   </VarDec>
   <VarDec>
      <name>ZEV_Accel_OrdIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|ZEV</group>
      <struct>VolatileWork_BSS.ZEV_Accel_OrdIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>ZEV_Accel_OrdIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|ZEV</group>
      <struct>VolatileWork_BSS.ZEV_Accel_OrdIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ZEV_Accel_MapTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|ZEV</group>
      <struct>ConstantWork.ZEV_Accel_MapTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>11</len>
      <output>ZEV_Accel_Map</output>
      <prelookup>Diesel_Accel_OrdIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>ZEV_Accel_Map</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Hybrid Control Code|ZEV</group>
      <struct>VolatileWork_BSS.ZEV_Accel_Map</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Urea_Accel_OrdIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>ConstantWork.Urea_Accel_OrdIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>10</len>
      <input>Urea_Accel_OrdIn</input>
      <index>Urea_Accel_OrdIdx</index>
   </VarDec>
   <VarDec>
      <name>Urea_Accel_OrdIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>VolatileWork_BSS.Urea_Accel_OrdIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Urea_Accel_OrdIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>VolatileWork_BSS.Urea_Accel_OrdIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Urea_Accel_TblTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>ConstantWork.Urea_Accel_TblTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>10</len>
      <output>Urea_Accel_Tbl</output>
      <prelookup>Urea_Accel_OrdIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>Urea_Accel_Tbl</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>VolatileWork_BSS.Urea_Accel_Tbl</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Urea_Injection_OrdIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>ConstantWork.Urea_Injection_OrdIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>10</len>
      <input>Urea_Injection_OrdIn</input>
      <index>Urea_Injection_OrdIdx</index>
   </VarDec>
   <VarDec>
      <name>Urea_Injection_OrdIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>VolatileWork_BSS.Urea_Injection_OrdIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>Urea_Injection_OrdIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>VolatileWork_BSS.Urea_Injection_OrdIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Urea_Injection_TblTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>ConstantWork.Urea_Injection_TblTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>10</len>
      <output>Urea_Injection_Tbl</output>
      <prelookup>Urea_Injection_OrdIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>Urea_Injection_Tbl</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>cx06_MA|Strategy|Urea Control Code</group>
      <struct>VolatileWork_BSS.Urea_Injection_Tbl</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AC_Clutch</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Discrete output pin selection for AC_Clutch</help>
      <group>I/O Pins | Outputs Config</group>
      <struct>ConstantWork.AC_Clutch</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="FUELP" value="0"/>
         <item name="FINJ3" value="14"/>
         <item name="FINJ4" value="15"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="AINJ1" value="18"/>
         <item name="AINJ2" value="19"/>
         <item name="AINJ3" value="20"/>
         <item name="AINJ4" value="21"/>
         <item name="AINJ5" value="22"/>
         <item name="AINJ6" value="23"/>
         <item name="HSOL1" value="2"/>
         <item name="TACH" value="24"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="MPRD" value="52"/>
         <item name="HSOL2" value="3"/>
         <item name="HSOL3" value="4"/>
         <item name="HSOL4" value="5"/>
         <item name="START" value="6"/>
         <item name="OILP" value="11"/>
         <item name="FINJ1" value="12"/>
         <item name="FINJ2" value="13"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>AC_Fan</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Discrete output pin selection for AC_Fan</help>
      <group>I/O Pins | Outputs Config</group>
      <struct>ConstantWork.AC_Fan</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="FUELP" value="0"/>
         <item name="FINJ3" value="14"/>
         <item name="FINJ4" value="15"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="AINJ1" value="18"/>
         <item name="AINJ2" value="19"/>
         <item name="AINJ3" value="20"/>
         <item name="AINJ4" value="21"/>
         <item name="AINJ5" value="22"/>
         <item name="AINJ6" value="23"/>
         <item name="HSOL1" value="2"/>
         <item name="TACH" value="24"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="MPRD" value="52"/>
         <item name="HSOL2" value="3"/>
         <item name="HSOL3" value="4"/>
         <item name="HSOL4" value="5"/>
         <item name="START" value="6"/>
         <item name="OILP" value="11"/>
         <item name="FINJ1" value="12"/>
         <item name="FINJ2" value="13"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Urea_Power</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Discrete output pin selection for Urea_Power</help>
      <group>I/O Pins | Outputs Config</group>
      <struct>ConstantWork.Urea_Power</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="FUELP" value="0"/>
         <item name="FINJ3" value="14"/>
         <item name="FINJ4" value="15"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="AINJ1" value="18"/>
         <item name="AINJ2" value="19"/>
         <item name="AINJ3" value="20"/>
         <item name="AINJ4" value="21"/>
         <item name="AINJ5" value="22"/>
         <item name="AINJ6" value="23"/>
         <item name="HSOL1" value="2"/>
         <item name="TACH" value="24"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="MPRD" value="52"/>
         <item name="HSOL2" value="3"/>
         <item name="HSOL3" value="4"/>
         <item name="HSOL4" value="5"/>
         <item name="START" value="6"/>
         <item name="OILP" value="11"/>
         <item name="FINJ1" value="12"/>
         <item name="FINJ2" value="13"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FaultManager</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <struct>ConstantWork.FaultManager[0]</struct>
      <help>Fault manager configuration.  Select up to 4 actions for each fault.</help>
      <group>Faults</group>
      <class>enumarr</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <col_enum column="0">
         <enum>
            <item name="Disabled" value="0"/>
            <item name="Enabled" value="1"/>
            <item name="Sticky" value="2"/>
            <item name="Enabled - Persistent" value="3"/>
            <item name="Sticky - Persistent" value="4"/>
            <item name="Save Occurred" value="5"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="2">
         <enum>
            <item name="-" value="0"/>
            <item name="Test" value="1"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="5">
         <enum>
            <item name="Clutch" value="0"/>
            <item name="UreaLeanRich" value="1"/>
            <item name="Urea_Inject" value="2"/>
            <item name="inhibitAC" value="3"/>
            <item name="inhibitAssistTakeoff" value="4"/>
            <item name="inhibitDiesel" value="5"/>
            <item name="inhibitEV" value="6"/>
            <item name="inhibitEngineSS" value="7"/>
            <item name="inhibitRegen" value="8"/>
            <item name="(None)" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="6">
         <enum>
            <item name="(None)" value="0"/>
            <item name="Suspected" value="1"/>
            <item name="Active" value="2"/>
            <item name="Suspected or Active" value="3"/>
            <item name="Occurred" value="4"/>
            <item name="Suspected or Occurred" value="5"/>
            <item name="Active or Occurred" value="6"/>
            <item name="Suspected or Active or Occurred" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="7">
         <enum>
            <item name="Clutch" value="0"/>
            <item name="UreaLeanRich" value="1"/>
            <item name="Urea_Inject" value="2"/>
            <item name="inhibitAC" value="3"/>
            <item name="inhibitAssistTakeoff" value="4"/>
            <item name="inhibitDiesel" value="5"/>
            <item name="inhibitEV" value="6"/>
            <item name="inhibitEngineSS" value="7"/>
            <item name="inhibitRegen" value="8"/>
            <item name="(None)" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="8">
         <enum>
            <item name="(None)" value="0"/>
            <item name="Suspected" value="1"/>
            <item name="Active" value="2"/>
            <item name="Suspected or Active" value="3"/>
            <item name="Occurred" value="4"/>
            <item name="Suspected or Occurred" value="5"/>
            <item name="Active or Occurred" value="6"/>
            <item name="Suspected or Active or Occurred" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="9">
         <enum>
            <item name="Clutch" value="0"/>
            <item name="UreaLeanRich" value="1"/>
            <item name="Urea_Inject" value="2"/>
            <item name="inhibitAC" value="3"/>
            <item name="inhibitAssistTakeoff" value="4"/>
            <item name="inhibitDiesel" value="5"/>
            <item name="inhibitEV" value="6"/>
            <item name="inhibitEngineSS" value="7"/>
            <item name="inhibitRegen" value="8"/>
            <item name="(None)" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="10">
         <enum>
            <item name="(None)" value="0"/>
            <item name="Suspected" value="1"/>
            <item name="Active" value="2"/>
            <item name="Suspected or Active" value="3"/>
            <item name="Occurred" value="4"/>
            <item name="Suspected or Occurred" value="5"/>
            <item name="Active or Occurred" value="6"/>
            <item name="Suspected or Active or Occurred" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="11">
         <enum>
            <item name="Clutch" value="0"/>
            <item name="UreaLeanRich" value="1"/>
            <item name="Urea_Inject" value="2"/>
            <item name="inhibitAC" value="3"/>
            <item name="inhibitAssistTakeoff" value="4"/>
            <item name="inhibitDiesel" value="5"/>
            <item name="inhibitEV" value="6"/>
            <item name="inhibitEngineSS" value="7"/>
            <item name="inhibitRegen" value="8"/>
            <item name="(None)" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="12">
         <enum>
            <item name="(None)" value="0"/>
            <item name="Suspected" value="1"/>
            <item name="Active" value="2"/>
            <item name="Suspected or Active" value="3"/>
            <item name="Occurred" value="4"/>
            <item name="Suspected or Occurred" value="5"/>
            <item name="Active or Occurred" value="6"/>
            <item name="Suspected or Active or Occurred" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_header>
         <enum>
            <item name="Mode" value="0"/>
            <item name="ID" value="1"/>
            <item name="Action 3 Condition" value="10"/>
            <item name="Action 4" value="11"/>
            <item name="Action 4 Condition" value="12"/>
            <item name="Test" value="2"/>
            <item name="Faulty Samples (X)" value="3"/>
            <item name="Total Samples (Y)" value="4"/>
            <item name="Action 1" value="5"/>
            <item name="Action 1 Condition" value="6"/>
            <item name="Action 2" value="7"/>
            <item name="Action 2 Condition" value="8"/>
            <item name="Action 3" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_header>
      <row_header>
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="Accel12Sync" value="2"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
         </enum>
      </row_header>
      <col_len>13</col_len>
      <row_len>25</row_len>
   </VarDec>
   <VarDec>
      <name>FaultMarquees</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <struct>NonVolatileWork.FaultMarquees[0]</struct>
      <help>Displays a rolling marquee for suspected, active and occurred faults.</help>
      <group>Faults</group>
      <class>enumarr</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <col_enum column="0">
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="Accel12Sync" value="2"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
            <item name="(None)" value="25"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="1">
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="Accel12Sync" value="2"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
            <item name="(None)" value="25"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="2">
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="Accel12Sync" value="2"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
            <item name="(None)" value="25"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_header>
         <enum>
            <item name="Current Suspected" value="0"/>
            <item name="Current Active" value="1"/>
            <item name="Current Occurred" value="2"/>
            <default>Unknown</default>
         </enum>
      </col_header>
      <row_header>
         <enum>
            <item name="FaultMarquees" value="0"/>
         </enum>
      </row_header>
      <col_len>3</col_len>
      <row_len>1</row_len>
   </VarDec>
   <VarDec>
      <name>FaultCommand</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <help>Select a command to control the fault manager.</help>
      <group>Faults</group>
      <struct>NonVolatileWork.FaultCommand</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="-" value="0"/>
         <item name="Clear All Faults" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FaultActionReason</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <help>Displays a rolling marquee of the reasons for fault action: FaultActionReason.</help>
      <group>Faults | Action Reasons</group>
      <struct>VolatileWork.FaultActionReason</struct>
      <class>enumarr</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <col_enum column="0">
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="Accel12Sync" value="2"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
            <item name="(None)" value="25"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="1">
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="Accel12Sync" value="2"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
            <item name="(None)" value="25"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="2">
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="Accel12Sync" value="2"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
            <item name="(None)" value="25"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="3">
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="Accel12Sync" value="2"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
            <item name="(None)" value="25"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="4">
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="Accel12Sync" value="2"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
            <item name="(None)" value="25"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="5">
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="Accel12Sync" value="2"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
            <item name="(None)" value="25"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="6">
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="Accel12Sync" value="2"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
            <item name="(None)" value="25"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="7">
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="Accel12Sync" value="2"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
            <item name="(None)" value="25"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="8">
         <enum>
            <item name="ACAnalogErr" value="0"/>
            <item name="ACLowPres" value="1"/>
            <item name="ClutchBackupRange" value="10"/>
            <item name="ClutchRange" value="11"/>
            <item name="ClutchRedundant" value="12"/>
            <item name="FuelLevelRange" value="13"/>
            <item name="GMLAN280" value="14"/>
            <item name="GMLAN380" value="15"/>
            <item name="IPT258" value="16"/>
            <item name="IPT278" value="17"/>
            <item name="IPT620" value="18"/>
            <item name="IPT638" value="19"/>
            <item name="Accel12Sync" value="2"/>
            <item name="NOxMid_CAN" value="20"/>
            <item name="NOxPost_CAN" value="21"/>
            <item name="NOxPre_CAN" value="22"/>
            <item name="Temp1A4" value="23"/>
            <item name="Temp1A5" value="24"/>
            <item name="(None)" value="25"/>
            <item name="Accel1Range" value="3"/>
            <item name="Accel2Range" value="4"/>
            <item name="BrakeBackupRange" value="5"/>
            <item name="BrakeRange" value="6"/>
            <item name="BrakeRedundant" value="7"/>
            <item name="CAN2AO369" value="8"/>
            <item name="CAN2AO370" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_header>
         <enum>
            <item name="Clutch" value="0"/>
            <item name="UreaLeanRich" value="1"/>
            <item name="Urea_Inject" value="2"/>
            <item name="inhibitAC" value="3"/>
            <item name="inhibitAssistTakeoff" value="4"/>
            <item name="inhibitDiesel" value="5"/>
            <item name="inhibitEV" value="6"/>
            <item name="inhibitEngineSS" value="7"/>
            <item name="inhibitRegen" value="8"/>
            <default>Unknown</default>
         </enum>
      </col_header>
      <row_header>
         <enum>
            <item name="-" value="0"/>
            <default>Unknown</default>
         </enum>
      </row_header>
      <col_len>9</col_len>
      <row_len>1</row_len>
   </VarDec>
   <VarDec>
      <name>AC_Pres</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for AC_Pres</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.AC_Pres</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>AC_Pres_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.AC_Pres_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>CruiseButtons</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for CruiseButtons</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.CruiseButtons</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>CruiseButtons_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.CruiseButtons_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Accel1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for Accel1</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Accel1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Accel1_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Accel1_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Accel2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for Accel2</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Accel2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Accel2_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Accel2_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Brake</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for Brake</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Brake</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Brake_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Brake_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>BrakeBackUp</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for BrakeBackUp</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.BrakeBackUp</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>BrakeBackUp_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.BrakeBackUp_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Clutch</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for Clutch</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Clutch</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Clutch_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Clutch_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ClutchBackup</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for ClutchBackup</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.ClutchBackup</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ClutchBackup_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.ClutchBackup_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelLevel</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for FuelLevel</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.FuelLevel</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelLevel_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.FuelLevel_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MAF_Input</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Frequency input pin selection for MAF_Input</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.MAF_Input</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="DG1M" value="93"/>
         <item name="DG2M" value="94"/>
         <item name="DG4M" value="96"/>
         <item name="CNK" value="100"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MAF_Input_EdgeDetect</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Frequency input edge trigger for MAF_Input</help>
      <group>I/O Pins | Frequency In Config</group>
      <struct>ConstantWork.MAF_Input_EdgeDetect</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Rising Edge" value="0"/>
         <item name="Falling Edge" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MAF_Input_AliasProtect</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Frequency input alias detection for MAF_Input</help>
      <group>I/O Pins | Frequency In Config</group>
      <struct>ConstantWork.MAF_Input_AliasProtect</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="No Alias Protect" value="0"/>
         <item name="Use Alias Protect" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MAF_Input_MinFrequency</name>
      <access>RW RW RW RW</access>
      <gain>0.01</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>10000</max>
      <min>0.01</min>
      <format>5.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Hz</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum expected input frequency for MAF_Input</help>
      <group>I/O Pins | Frequency In Config</group>
      <struct>ConstantWork.MAF_Input_MinFrequency</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>MAF_Input_Interface</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Frequency input signal interface for MAF_Input</help>
      <group>I/O Pins | Frequency In Config</group>
      <struct>ConstantWork.MAF_Input_Interface</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Digital Input" value="0"/>
         <item name="VR Input" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Neutral</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Digital input pin selection for Neutral</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Neutral</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="AN1M" value="56"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="AN2M" value="57"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="DG1M" value="93"/>
         <item name="DG2M" value="94"/>
         <item name="DG4M" value="96"/>
         <item name="ESTOP" value="97"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Reverse</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Digital input pin selection for Reverse</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.Reverse</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="AN1M" value="56"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="AN2M" value="57"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="DG1M" value="93"/>
         <item name="DG2M" value="94"/>
         <item name="DG4M" value="96"/>
         <item name="ESTOP" value="97"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>IPT_EPO</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>PWM output pin selection for IPT_EPO</help>
      <group>I/O Pins | Outputs Config</group>
      <struct>ConstantWork.IPT_EPO</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="FUELP" value="0"/>
         <item name="FINJ2" value="13"/>
         <item name="FINJ3" value="14"/>
         <item name="FINJ4" value="15"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="AINJ1" value="18"/>
         <item name="AINJ2" value="19"/>
         <item name="AINJ3" value="20"/>
         <item name="AINJ4" value="21"/>
         <item name="AINJ5" value="22"/>
         <item name="ETC" value="1"/>
         <item name="AINJ6" value="23"/>
         <item name="TACH" value="24"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="HSOL1" value="2"/>
         <item name="HSOL2" value="3"/>
         <item name="HSOL3" value="4"/>
         <item name="HSOL4" value="5"/>
         <item name="START" value="6"/>
         <item name="OILP" value="11"/>
         <item name="FINJ1" value="12"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ESTOP</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Digital input pin selection for ESTOP</help>
      <group>I/O Pins | Inputs Config</group>
      <struct>ConstantWork.ESTOP</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="AN1M" value="56"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="AN2M" value="57"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="DG1M" value="93"/>
         <item name="DG2M" value="94"/>
         <item name="DG4M" value="96"/>
         <item name="ESTOP" value="97"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Urea_Injector</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>One Shot output pin selection for Urea_Injector</help>
      <group>I/O Pins | Outputs Config</group>
      <struct>ConstantWork.Urea_Injector</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="HSOL1" value="2"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="HSOL2" value="3"/>
         <item name="HSOL3" value="4"/>
         <item name="HSOL4" value="5"/>
         <item name="START" value="6"/>
         <item name="OILP" value="11"/>
         <item name="ESC" value="35"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>CAN_1_std_receive_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of received std CAN messages on bus CAN_1</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_1_std_receive_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_1_std_handled_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of handled std CAN messages on bus CAN_1</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_1_std_handled_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_1_std_last_unhandled_id</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Last received std CAN message on bus CAN_1, which was unhandled</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_1_std_last_unhandled_id</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_2_std_receive_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of received std CAN messages on bus CAN_2</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_2_std_receive_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_2_std_handled_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of handled std CAN messages on bus CAN_2</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_2_std_handled_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_2_std_last_unhandled_id</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Last received std CAN message on bus CAN_2, which was unhandled</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_2_std_last_unhandled_id</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>MotoHawkModelSecondsInUse</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <units>seconds</units>
      <ctype>NonVolatile_T</ctype>
      <help>Total runtime of this MotoHawk software model</help>
      <group>System | Version</group>
      <struct>NonVolatileWork.MotoHawkModelSecondsInUse</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
</VarDecs>