
/* MotoCoder_Types.h */
/* Generated by MotoCoder */
/* Version: 0.12.4 */
/* At: 2018-09-04 13:38:00 */
/* Copyright: 2018 Woodward. */


#ifndef MOTOCODER_TYPES_H
#define MOTOCODER_TYPES_H



#include <AtomicTypes.h>
#include <MTTypes.h>
#include <NativeError.h>
	


/* reference_T used as a pointer to DataStorage */
#ifndef defined_reference_T
#define defined_reference_T
typedef void * reference_T;
#endif

/* struct_reference_T used as a pointer to Structure DataStorage */
#ifndef defined_struct_reference_T
#define defined_struct_reference_T
typedef void * struct_reference_T;
#endif

/* S_CCPDAQ structure */
typedef struct {
    uint32_T   TxID;
    uint16_T   Prescaler;
    uint8_T   DAQStatus;
    uint8_T   LastODTNumber;
    uint8_T   EventChannelNumber;
} S_CCPDAQ_T;

/* S_CCPODTItem structure */
typedef struct {
    reference_T   pData;
    uint8_T   DataSize;
} S_CCPODTItem_T;

/* S_CCPODT structure */
typedef struct {
    uint8_T   ODTSize;
    S_CCPODTItem_T   ODTList[7];
} S_CCPODT_T;

/* S_ConstFault structure */
typedef struct {
    uint16_T   mode;
    uint16_T   id;
    uint16_T   test;
    uint16_T   xlim;
    uint16_T   ylim;
    uint16_T   action1;
    uint16_T   action1_condition;
    uint16_T   action2;
    uint16_T   action2_condition;
    uint16_T   action3;
    uint16_T   action3_condition;
    uint16_T   action4;
    uint16_T   action4_condition;
} S_ConstFault_T;

/* S_Fault structure */
typedef struct {
    uint16_T   x;
    uint16_T   y;
} S_Fault_T;

/* S_FaultAction structure */
typedef struct {
    uint8_T   reference_count;
} S_FaultAction_T;

/* S_FaultManager structure */
typedef struct {
    uint8_T   suspected[12];
    uint8_T   active[12];
    uint8_T   occurred[12];
    uint8_T   last_suspected_fault;
    uint8_T   last_unsuspected_fault;
    uint8_T   last_active_fault;
    uint8_T   last_inactive_fault;
    uint8_T   last_occurred_fault;
} S_FaultManager_T;

/* S_DispFaultManager structure */
typedef struct {
    uint8_T   current_suspected_vardec;
    uint8_T   current_active_vardec;
    uint8_T   current_occurred_vardec;
} S_DispFaultManager_T;

/* S_ConstFaultManager structure */
typedef struct {
    uint8_T   num_faults;
    uint16_T   num_actions;
} S_ConstFaultManager_T;

/* FaultActions Enumeration */
typedef enum {
    FAULTACTIONS_BATT_LIGHT=0,
    FAULTACTIONS_BATT_SHUTDOWN=1,
    FAULTACTIONS_PUMP_ON=10,
    FAULTACTIONS_REGEN_BRAKES_DISABLED=11,
    FAULTACTIONS_SET_CRAWL_HOME=12,
    FAULTACTIONS_TEMPERATURE_FLASH=13,
    FAULTACTIONS_TEMPERATURE_SOLID=14,
    FAULTACTIONS_WRENCH_LIGHT=15,
    FAULTACTIONS_OPENPARENNONECLOSEPAREN=16,
    FAULTACTIONS_CELL_VOLTAGE_MAX=2,
    FAULTACTIONS_CHECK_ENGINE_LIGHT=3,
    FAULTACTIONS_CHECK_ENGINE_LIGHT_FLASHING=4,
    FAULTACTIONS_COOLING_MAX=5,
    FAULTACTIONS_CRUISE=6,
    FAULTACTIONS_DYNO_SHUTDOWN=7,
    FAULTACTIONS_EATONCHARGERFAULT=8,
    FAULTACTIONS_HV_LIGHT=9,
} E_FaultActions;

/* FaultDisp Enumeration */
typedef enum {
    FAULTDISP_CURRENTSUSPECTED=0,
    FAULTDISP_CURRENTACTIVE=1,
    FAULTDISP_CURRENTOCCURRED=2,
} E_FaultDisp;

/* Fault_Cols Enumeration */
typedef enum {
    FAULT_COLS_MODE=0,
    FAULT_COLS_ID=1,
    FAULT_COLS_ACTION3CONDITION=10,
    FAULT_COLS_ACTION4=11,
    FAULT_COLS_ACTION4CONDITION=12,
    FAULT_COLS_TEST=2,
    FAULT_COLS_FAULTYSAMPLESOPENPARENXCLOSEPAREN=3,
    FAULT_COLS_TOTALSAMPLESOPENPARENYCLOSEPAREN=4,
    FAULT_COLS_ACTION1=5,
    FAULT_COLS_ACTION1CONDITION=6,
    FAULT_COLS_ACTION2=7,
    FAULT_COLS_ACTION2CONDITION=8,
    FAULT_COLS_ACTION3=9,
} E_Fault_Cols;

/* Fault_Command Enumeration */
typedef enum {
    FAULT_COMMAND_DASH=0,
    FAULT_COMMAND_CLEARALLFAULTS=1,
} E_Fault_Command;

/* Fault_Cond Enumeration */
typedef enum {
    FAULT_COND_OPENPARENNONECLOSEPAREN=0,
    FAULT_COND_SUSPECTED=1,
    FAULT_COND_ACTIVE=2,
    FAULT_COND_SUSPECTEDORACTIVE=3,
    FAULT_COND_OCCURRED=4,
    FAULT_COND_SUSPECTEDOROCCURRED=5,
    FAULT_COND_ACTIVEOROCCURRED=6,
    FAULT_COND_SUSPECTEDORACTIVEOROCCURRED=7,
} E_Fault_Cond;

/* Fault_Mode Enumeration */
typedef enum {
    FAULT_MODE_DISABLED=0,
    FAULT_MODE_ENABLED=1,
    FAULT_MODE_STICKY=2,
    FAULT_MODE_ENABLEDDASHPERSISTENT=3,
    FAULT_MODE_STICKYDASHPERSISTENT=4,
    FAULT_MODE_SAVEOCCURRED=5,
} E_Fault_Mode;

/* Fault_Test Enumeration */
typedef enum {
    FAULT_TEST_DASH=0,
    FAULT_TEST_TEST=1,
} E_Fault_Test;

/* Faults Enumeration */
typedef enum {
    FAULTS_ABS_TONERING_AGECOUNT=0,
    FAULTS_ABS_TRACTION_CONTROL_AGECOUNT=1,
    FAULTS_BLEND_VALVE_SENSOR_A_LOW_VOLTAGE=10,
    FAULTS_BLEND_VALVE_SENSOR_B_HIGH_VOLTAGE=11,
    FAULTS_BLEND_VALVE_SENSOR_B_INTERMITTENT=12,
    FAULTS_BLEND_VALVE_SENSOR_B_LOW_VOLTAGE=13,
    FAULTS_BRAKE_PEDAL_POSITION_COMMUNICATION_LOSS=14,
    FAULTS_BRAKE_PEDAL_POSITION_INTERMIITENT=15,
    FAULTS_BRAKE_PEDAL_POSITION_LOW=16,
    FAULTS_BRAKE_PEDAL_POSITION_SENSOR_A_CIRCUIT_HIGH=17,
    FAULTS_BRAKES_AGECOUNT=18,
    FAULTS_CHARGE_COMPLETE_CELL_MAX_VOLT=19,
    FAULTS_ABS_WHEELSPEED_AGECOUNT=2,
    FAULTS_CHARGER_AMPERAGE_DRAW_GREATER_THEN_SUPPLY=20,
    FAULTS_CHARGER_DERATED_OVER_TEMPERATURE=21,
    FAULTS_CHARGER_DERATED_UNDER_TEMPERATURE=22,
    FAULTS_CHARGER_INTERNAL_FAULT=23,
    FAULTS_CHARGER_LINE_VOLTAGE_TOO_LOW=24,
    FAULTS_CHARGER_LINE_VOTLAGE_TOO_HIGH=25,
    FAULTS_CHARGER_REQUESTED_BUT_NO_HIGH_VOLTAGE=26,
    FAULTS_CHARGER_REQUESTED_BUT_NO_KEY_SINGAL=27,
    FAULTS_CHARGER_REQUESTED_CURRENT_TOO_HIGH=28,
    FAULTS_CHARGER_REQUESTED_VOLTAGE_OUT_OF_BOUNDS=29,
    FAULTS_BATTERY_AGECOUNT=3,
    FAULTS_CRUISE_CONTROL_BRAKE_SWITCH_A_CIRCUIT_HIGH=30,
    FAULTS_CRUISE_CONTROL_BRAKE_SWITCH_A_CIRCUIT_LOW=31,
    FAULTS_CRUISE_CONTROL_BRAKE_SWITCH_A_CIRCUIT_MALFUNCTION=32,
    FAULTS_CRUISE_CONTROL_COAST_SIGNAL_MALFUNCTION=33,
    FAULTS_CRUISE_CONTROL_OFF_SIGNAL_MALFUNCTION=34,
    FAULTS_CRUISE_CONTROL_ON_SIGNAL_MALFUNCTION=35,
    FAULTS_CRUISE_CONTROL_RESUME_SIGNAL_MALFUNCTION=36,
    FAULTS_CRUISE_CONTROL_SET_SIGNAL_MALFUNCTION=37,
    FAULTS_DCDC_CONVERTER_NOT_RUNNING=38,
    FAULTS_DRIVE_SWITCH_INPUT_CIRCUIT=39,
    FAULTS_BATTERY_VOLTAGE_TOO_HIGH=4,
    FAULTS_DRIVE_SWITCH_INPUT_HIGH=40,
    FAULTS_DRIVE_SWITCH_INPUT_LOW=41,
    FAULTS_EATON_CHARGER_AGECOUNT=42,
    FAULTS_ELECTRIC_MOTOR_APPROACHING_OVER_TEMPERATURE=43,
    FAULTS_ELECTRIC_MOTOR_DERATED_OVER_TEMPERATURE=44,
    FAULTS_ELECTRIC_MOTOR_DERATED_OVER_VOLTAGE=45,
    FAULTS_ELECTRIC_MOTOR_DERATED_UNDER_TEMPERATURE=46,
    FAULTS_ELECTRIC_MOTOR_DERATED_UNDER_VOLTAGE=47,
    FAULTS_ELECTRIC_MOTOR_GENERAL_ERROR=48,
    FAULTS_ELECTRIC_MOTOR_OVER_SPEED_FORWARD=49,
    FAULTS_BATTERY_VOLTAGE_TOO_LOW=5,
    FAULTS_ELECTRIC_MOTOR_OVER_SPEED_REVERSE=50,
    FAULTS_ELECTRIC_MOTOR_SHUTODWN_ERROR=51,
    FAULTS_ELECTRIC_MOTOR_TORQUE_OUTPUT_FAULT=52,
    FAULTS_GEAR_SHIFT_COMMUNICATION_CIRCUIT=53,
    FAULTS_HV_BATTERY_2G_BMS_FAULT=54,
    FAULTS_HV_BATTERY_48_CONTROLLER_COMMUNICATION_FAULT=55,
    FAULTS_HV_BATTERY_ABOVE_SAFE_CHARGE_POINT=56,
    FAULTS_HV_BATTERY_CELL_BALANCING_REQUIRED_FAULT=57,
    FAULTS_HV_BATTERY_PACK_ABOVE_OPERATING_TEMPERATURE=58,
    FAULTS_HV_BATTERY_PACK_BELOW_OPERATING_TEMPERATURE=59,
    FAULTS_BLEND_VALVE_A_NO_RESPONSE=6,
    FAULTS_HV_BATTERY_PACK_HIGH_TEMPERATURE=60,
    FAULTS_HV_BATTERY_PACK_LOW_TEMPERATURE=61,
    FAULTS_HV_BATTERY_PRECHARGE_FAILURE=62,
    FAULTS_HV_BATTERY_TOO_LOW_FOR_LOAD=63,
    FAULTS_HV_BATTERY_TRY_TO_BALANCE_UNDER_LOAD=64,
    FAULTS_HV_HEATER_OVER_TEMPERATURE=65,
    FAULTS_HV_HEATER_POOR_PERFORMANCE=66,
    FAULTS_HV_HEATER_TEMPERATURE_SENSOR_A_HIGH_VOLTAGE=67,
    FAULTS_HV_HEATER_TEMPERATURE_SENSOR_A_INTERMITTENT=68,
    FAULTS_HV_HEATER_TEMPERATURE_SENSOR_A_LOW_VOLTAGE=69,
    FAULTS_BLEND_VALVE_B_NO_RESPONSE=7,
    FAULTS_IPT_DCDC_AGECOUNT=70,
    FAULTS_IPT_STATUS1_AGECOUNT=71,
    FAULTS_IPT_STATUS2_AGECOUNT=72,
    FAULTS_KEY_LINE_VOLTAGE=73,
    FAULTS_KEY_OFF_VOLTAGE_HIGH=74,
    FAULTS_PARK_NUETRAL_SWITCH_INPUT_CIRCUIT=75,
    FAULTS_PARK_NUETRAL_SWITCH_INPUT_HIGH=76,
    FAULTS_PARK_NUETRAL_SWITCH_INPUT_LOW=77,
    FAULTS_PEDAL_POSITION_SENSOR_A_CIRCUIT_HIGH=78,
    FAULTS_PEDAL_POSITION_SENSOR_A_CIRCUIT_INTERMITTENT=79,
    FAULTS_BLEND_VALVE_SENSOR_A_HIGH_VOLTAGE=8,
    FAULTS_PEDAL_POSITION_SENSOR_A_CIRCUIT_LOW=80,
    FAULTS_STEERING_WHEEL_AGECOUNT=81,
    FAULTS_SYSTEM_VOLTAGE_HIGH=82,
    FAULTS_SYSTEM_VOLTAGE_LOW=83,
    FAULTS_SYSTEM_VOLTAGE_MALFUNCTION=84,
    FAULTS_SYSTEM_VOLTAGE_UNSTABLE=85,
    FAULTS_TRACTION_CONTROL_GENERAL_FAULT=86,
    FAULTS_TRACTION_CONTROL_LEFTFRONT_MALFUNCTION=87,
    FAULTS_TRACTION_CONTROL_LEFTREAR_MALFUNCTION=88,
    FAULTS_TRACTION_CONTROL_RIGHTFRONT_MALFUNCTION=89,
    FAULTS_BLEND_VALVE_SENSOR_A_INTERMITTENT=9,
    FAULTS_TRACTION_CONTROL_RIGHTREAR_MALFUNCTION=90,
    FAULTS_TRANSMISSION_AGECOUNT=91,
    FAULTS_VEHCILE_SPEED_SENSOR_MALFUNCTION=92,
    FAULTS_VEHICLE_SPEED_SENSOR_CIRCUIT_LOW=93,
    FAULTS_VEHICLE_SPEED_SENSOR_ERRATIC=94,
    FAULTS_VEHICLE_SPEED_SENSOR_RANG_PERFORMANCE=95,
    FAULTS_OPENPARENNONECLOSEPAREN=96,
} E_Faults;

/* VarDecEnum_1 Enumeration */
typedef enum {
    VARDECENUM_1_RUN=0,
    VARDECENUM_1_REBOOT=1,
} E_VarDecEnum_1;

/* VarDecEnum_11 Enumeration */
typedef enum {
    VARDECENUM_11_BATT_LIGHT=0,
    VARDECENUM_11_BATT_SHUTDOWN=1,
    VARDECENUM_11_PUMP_ON=10,
    VARDECENUM_11_REGEN_BRAKES_DISABLED=11,
    VARDECENUM_11_SET_CRAWL_HOME=12,
    VARDECENUM_11_TEMPERATURE_FLASH=13,
    VARDECENUM_11_TEMPERATURE_SOLID=14,
    VARDECENUM_11_WRENCH_LIGHT=15,
    VARDECENUM_11_CELL_VOLTAGE_MAX=2,
    VARDECENUM_11_CHECK_ENGINE_LIGHT=3,
    VARDECENUM_11_CHECK_ENGINE_LIGHT_FLASHING=4,
    VARDECENUM_11_COOLING_MAX=5,
    VARDECENUM_11_CRUISE=6,
    VARDECENUM_11_DYNO_SHUTDOWN=7,
    VARDECENUM_11_EATONCHARGERFAULT=8,
    VARDECENUM_11_HV_LIGHT=9,
} E_VarDecEnum_11;

/* VarDecEnum_12 Enumeration */
typedef enum {
    VARDECENUM_12_DASH=0,
} E_VarDecEnum_12;

/* VarDecEnum_2 Enumeration */
typedef enum {
    VARDECENUM_2_PASSDASHTHROUGH=0,
    VARDECENUM_2_OVERRIDE=1,
} E_VarDecEnum_2;

/* VarDecEnum_3 Enumeration */
typedef enum {
    VARDECENUM_3_OFF=0,
    VARDECENUM_3_ON=1,
} E_VarDecEnum_3;

/* VarDecEnum_4 Enumeration */
typedef enum {
    VARDECENUM_4_RUN=0,
    VARDECENUM_4_RESTORETODEFAULTS=1,
} E_VarDecEnum_4;

/* VarDecEnum_5 Enumeration */
typedef enum {
    VARDECENUM_5_RUN=0,
    VARDECENUM_5_STORETOEEPROM=1,
} E_VarDecEnum_5;

/* VarDecEnum_6 Enumeration */
typedef enum {
    VARDECENUM_6_DISABLED=0,
    VARDECENUM_6_ENABLED=1,
} E_VarDecEnum_6;

/* VarDecEnum_7 Enumeration */
typedef enum {
    VARDECENUM_7_DISABLEONLOWECUP=0,
    VARDECENUM_7_KEEPALIVE=1,
} E_VarDecEnum_7;

/* VarDecEnum_8 Enumeration */
typedef enum {
    VARDECENUM_8_CALCULATED=0,
    VARDECENUM_8_ABS=1,
    VARDECENUM_8_NONE=2,
} E_VarDecEnum_8;

/* VarDecEnum_9 Enumeration */
typedef enum {
    VARDECENUM_9_SYS_TIME=0,
    VARDECENUM_9_VOLTAGE=1,
    VARDECENUM_9_SPEED=2,
    VARDECENUM_9_TORQUE_REQUEST=3,
    VARDECENUM_9_TORQUE_DELIVERED=4,
    VARDECENUM_9_COOLANT_TEMP=5,
} E_VarDecEnum_9;



#endif

