
/* MotoCoder_CAN.h */
/* Generated by MotoCoder */
/* Version: 0.12.4 */
/* At: 2017-11-29 16:59:11 */
/* Copyright: 2017 Woodward. */


#ifndef MOTOCODER_CAN_H
#define MOTOCODER_CAN_H



#include <MotoCoder_Types.h>
	
/* CAN Interface for CAN_1 */
extern void CAN_1_Error_Status_Get(boolean_T* inout_bBusPassivePtr, uint8_T* inout_uTXErrorCountPtr, uint8_T* inout_uRXErrorCountPtr);
extern boolean_T CAN_1_Transmit(boolean_T extended, uint32_T id, uint8_T length, const uint8_T data[]);
extern uint32_T CAN_1_TransmitQueueDepth(void);
extern boolean_T RxSlot_3820p0005_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3821p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3822p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4495p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4553p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4635p0005_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4636p0005_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4637p0005_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4638p0005_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4796p0005_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4843p0005_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CAN_1_KeySuite_SetIDFilter(uint32_T id, uint32_T id_mask);
extern boolean_T CAN_1_KeySuite_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CAN_1_Create(void);/* CAN Interface for CAN_2 */
extern void CAN_2_Error_Status_Get(boolean_T* inout_bBusPassivePtr, uint8_T* inout_uTXErrorCountPtr, uint8_T* inout_uRXErrorCountPtr);
extern boolean_T CAN_2_Transmit(boolean_T extended, uint32_T id, uint8_T length, const uint8_T data[]);
extern uint32_T CAN_2_TransmitQueueDepth(void);
extern boolean_T RxSlot_4497p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CAN_2_KeySuite_SetIDFilter(uint32_T id, uint32_T id_mask);
extern boolean_T CAN_2_KeySuite_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CAN_2_Create(void);/* CAN Interface for CAN_3 */
extern void CAN_3_Error_Status_Get(boolean_T* inout_bBusPassivePtr, uint8_T* inout_uTXErrorCountPtr, uint8_T* inout_uRXErrorCountPtr);
extern boolean_T CAN_3_Transmit(boolean_T extended, uint32_T id, uint8_T length, const uint8_T data[]);
extern uint32_T CAN_3_TransmitQueueDepth(void);
extern boolean_T RxSlot_4018p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4019p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4020p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4021p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4022p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4023p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4024p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4494p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4496p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CAN_3_KeySuite_SetIDFilter(uint32_T id, uint32_T id_mask);
extern boolean_T CAN_3_KeySuite_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CAN_3_Create(void);

#endif

