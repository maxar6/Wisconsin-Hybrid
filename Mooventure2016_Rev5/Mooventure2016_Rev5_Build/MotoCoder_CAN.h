
/* MotoCoder_CAN.h */
/* Generated by MotoCoder */
/* Version: 0.12.4 */
/* At: 2018-08-25 21:19:47 */
/* Copyright: 2018 Woodward. */


#ifndef MOTOCODER_CAN_H
#define MOTOCODER_CAN_H



#include <MotoCoder_Types.h>
	
/* CAN Interface for CAN_1 */
extern void CAN_1_Error_Status_Get(boolean_T* inout_bBusPassivePtr, uint8_T* inout_uTXErrorCountPtr, uint8_T* inout_uRXErrorCountPtr);
extern boolean_T CAN_1_Transmit(boolean_T extended, uint32_T id, uint8_T length, const uint8_T data[]);
extern uint32_T CAN_1_TransmitQueueDepth(void);
extern boolean_T RxSlot_3129p0005_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3130p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3131p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3553p0006_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3791p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3904p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4058p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4059p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4060p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4061p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4263p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CCP1_SetIDFilter(uint32_T id, uint32_T id_mask);
extern boolean_T CCP1_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CAN_1_KeySuite_SetIDFilter(uint32_T id, uint32_T id_mask);
extern boolean_T CAN_1_KeySuite_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CAN_1_Create(void);/* CAN Interface for CAN_2 */
extern void CAN_2_Error_Status_Get(boolean_T* inout_bBusPassivePtr, uint8_T* inout_uTXErrorCountPtr, uint8_T* inout_uRXErrorCountPtr);
extern boolean_T CAN_2_Transmit(boolean_T extended, uint32_T id, uint8_T length, const uint8_T data[]);
extern uint32_T CAN_2_TransmitQueueDepth(void);
extern boolean_T RxSlot_3793p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CAN_2_KeySuite_SetIDFilter(uint32_T id, uint32_T id_mask);
extern boolean_T CAN_2_KeySuite_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CAN_2_Create(void);/* CAN Interface for CAN_3 */
extern void CAN_3_Error_Status_Get(boolean_T* inout_bBusPassivePtr, uint8_T* inout_uTXErrorCountPtr, uint8_T* inout_uRXErrorCountPtr);
extern boolean_T CAN_3_Transmit(boolean_T extended, uint32_T id, uint8_T length, const uint8_T data[]);
extern uint32_T CAN_3_TransmitQueueDepth(void);
extern boolean_T RxSlot_3337p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3338p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3339p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3340p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3341p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3342p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3343p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3790p0004_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_3792p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern boolean_T RxSlot_4001p0001_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CAN_3_KeySuite_SetIDFilter(uint32_T id, uint32_T id_mask);
extern boolean_T CAN_3_KeySuite_Receive(boolean_T *extended, uint32_T *id, uint8_T *length, uint8_T data[]);
extern void CAN_3_Create(void);

#endif

