<?xml version="1.0" encoding="UTF-8"?>
<VarDecs>
   <VarDec>
      <name>ECUP_Threshold</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1023</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>ADC_counts</units>
      <ctype>const Constant_T</ctype>
      <help>ADC voltage threshold above which ECU is considered powered</help>
      <group>System | Main Power Relay | Main Power Relay Config</group>
      <struct>ConstantWork.ECUP_Threshold</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>ForcedShutDownTimerThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1023</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>If ECUP is off for this time and application has not turned off, then force a shutdown routine.</help>
      <group>System | Main Power Relay | Main Power Relay Config</group>
      <struct>ConstantWork.ForcedShutDownTimerThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MPRD_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>System | Main Power Relay | MPRD Override</group>
      <struct>VolatileWork_BSS.MPRD_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ProcessorReboot</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Reboots the processor when set.</help>
      <group>System | Main Power Relay</group>
      <struct>VolatileWork_BSS.ProcessorReboot</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Run" value="0"/>
         <item name="Reboot" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MPRD_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Directly Override Main Power Relay</help>
      <group>System | Main Power Relay | MPRD Override</group>
      <struct>VolatileWork_BSS.MPRD_new</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Off" value="0"/>
         <item name="On" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>RestoreNVFactoryDefaults</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Restores NonVolatile Memory to Factory Defaults</help>
      <group>System | NonVolatile Storage</group>
      <struct>VolatileWork_BSS.RestoreNVFactoryDefaults</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Run" value="0"/>
         <item name="Restore To Defaults" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>StoreNV</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Stores RAM-Shadowed memory to serial EEPROM</help>
      <group>System | NonVolatile Storage</group>
      <struct>VolatileWork_BSS.StoreNV</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Run" value="0"/>
         <item name="Store To EEPROM" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MPRD</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Indicates whether the main power relay is active</help>
      <group>System | Main Power Relay</group>
      <struct>VolatileWork_BSS.MPRD</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ShutDownTasksComplete</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>System | Main Power Relay</group>
      <struct>VolatileWork_BSS.ShutDownTasksComplete</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="False" value="0"/>
         <item name="True" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Default_PW</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>us</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization|Signal Generator</group>
      <struct>ConstantWork.Default_PW</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Default_DC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization|Signal Generator</group>
      <struct>ConstantWork.Default_DC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCDampGainDown</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>PID Damper Gain - Down Direction</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>ConstantWork.ETCDampGainDown</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCDampGainUp</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>PID Damper Gain - Up Direction</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>ConstantWork.ETCDampGainUp</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCTuneOffset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|Setpoint Manager|Tuning</group>
      <struct>VolatileWork_BSS.ETCTuneOffset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCTuneFreq</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Hz</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|Setpoint Manager|Tuning</group>
      <struct>VolatileWork_BSS.ETCTuneFreq</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCTuneAmp</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|Setpoint Manager|Tuning</group>
      <struct>VolatileWork_BSS.ETCTuneAmp</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_ShutdownLoAdaptError</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Drive ETC closed until this error has been achieved in order to catch lo side adapt point.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller</group>
      <struct>ConstantWork.ETC_ShutdownLoAdaptError</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_SpringTestHiThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Before initiating spring test during shutdown, open the ETC to this setpoint. When achieved, the ETC controller will release the ETC to have the spring close the valve.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller</group>
      <struct>ConstantWork.ETC_SpringTestHiThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_SpringTestLoThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Spring test timer will measure time of travel between ETC_SpringTestHiThresh and ETC_SpringTestLoThresh.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller</group>
      <struct>ConstantWork.ETC_SpringTestLoThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCTuneEnable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|Setpoint Manager|Tuning</group>
      <struct>VolatileWork_BSS.ETCTuneEnable</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ETCReq_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|Setpoint Manager|Tuning | ETCReq Override</group>
      <struct>VolatileWork_BSS.ETCReq_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ETCReq_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override the electronic throttle position</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|Setpoint Manager|Tuning | ETCReq Override</group>
      <struct>VolatileWork_BSS.ETCReq_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_LoAdaptRateLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%/s</units>
      <ctype>const Constant_T</ctype>
      <help>Dictates the rate at which the ETC setpoint is decreased during shutdown to perform a low TPS adapt.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|Setpoint Manager</group>
      <struct>ConstantWork.ETC_LoAdaptRateLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPSAdaptLoRequest</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|ETC Adapt Request</group>
      <struct>VolatileWork_BSS.TPSAdaptLoRequest</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>ETC_StickingThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Defines error limit between TPS_Request and TPS where ETC sticking fault will be set.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|ETC Sticking Fault</group>
      <struct>ConstantWork.ETC_StickingThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_SpringTestTimerThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>During spring test at shutdown, TPS must fall to 0% within this time to prevent fault.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller</group>
      <struct>ConstantWork.ETC_SpringTestTimerThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCShutdownTimerThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Time limit in Stall State after which ETC will shutdown.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|ETCStallShutDown</group>
      <struct>ConstantWork.ETCShutdownTimerThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCDamperTPSFilt</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller | ETC PID Config</group>
      <struct>ConstantWork.ETCDamperTPSFilt</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCDamperSwitchThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%/s</units>
      <ctype>const Constant_T</ctype>
      <help>When filtered derivative of TPS is greater than this threshold, Damper_Up gain will be used.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)|DamperSwitch</group>
      <struct>ConstantWork.ETCDamperSwitchThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCDamperSwitchHyst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%/s</units>
      <ctype>const Constant_T</ctype>
      <help>Hysterisis around the ThrPosDamperSwitchThresh.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)|DamperSwitch</group>
      <struct>ConstantWork.ETCDamperSwitchHyst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCDGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>PID Derivative Gain</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>ConstantWork.ETCDGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCErrorGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>PID Error Gain</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>ConstantWork.ETCErrorGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCPGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>PID Proportional Gain</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)|PGain</group>
      <struct>ConstantWork.ETCPGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCLwrLim</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Lower Limit Value</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller | ETC PID Config</group>
      <struct>ConstantWork.ETCLwrLim</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCUprLim</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Upper Limit Value</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller | ETC PID Config</group>
      <struct>ConstantWork.ETCUprLim</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCIGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>PID Integral Gain</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)|IGain</group>
      <struct>ConstantWork.ETCIGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCIMin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>PID Integrator Lower Limit</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>ConstantWork.ETCIMin</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCIMax</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>PID Integrator Upper Limit</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>ConstantWork.ETCIMax</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SpringTestTime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>NonVolatile_T</ctype>
      <help>Time for ETC to close from 80% to 40% at 0% duty cycle.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller</group>
      <struct>NonVolatileWork.SpringTestTime</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SparkDwell_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Spark Coil Characterization | SparkDwell Override</group>
      <struct>VolatileWork_BSS.SparkDwell_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SparkDwell_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Spark Coil Characterization | SparkDwell Override</group>
      <struct>VolatileWork_BSS.SparkDwell_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>CoilDrvrDlyTime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>2.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms</units>
      <ctype>const Constant_T</ctype>
      <help>Coil driver delay time between receipt of EST signal and initiation of coil dwell.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Spark Coil Characterization</group>
      <struct>ConstantWork.CoilDrvrDlyTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>OpenThrottleFPCScalar</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Mult</units>
      <ctype>const Constant_T</ctype>
      <help>Crank FPC is scaled up with throttle opening for mechanical throttle systems, this parameter sets the gain for this relationship.  CrankFPC=CrankFPC*(1+TPS/100*FPCScalar).</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank|CrankFueling</group>
      <struct>ConstantWork.OpenThrottleFPCScalar</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ClearFloodThreshold</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Mult</units>
      <ctype>const Constant_T</ctype>
      <help>In crank mode, throttle commands greater than this threshold will disable crank fueling.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank|CrankFueling</group>
      <struct>ConstantWork.ClearFloodThreshold</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ThrottleSource</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <help>Selects source of throttle command</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager</group>
      <struct>VolatileWork.ThrottleSource</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="APP1" value="0"/>
         <item name="NORMAL" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>PowerLimt_PIDOutUpperLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Upper limit on max PID Output.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.PowerLimt_PIDOutUpperLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimt_PIDOutLowerLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Lower limit on max PID Output.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.PowerLimt_PIDOutLowerLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EquivRatio_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Base Equiv Ratio | EquivRatio Override</group>
      <struct>VolatileWork_BSS.EquivRatio_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EquivRatio_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Base Equiv Ratio | EquivRatio Override</group>
      <struct>VolatileWork_BSS.EquivRatio_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>DeltaTPS_FiltConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Delta TPS Transient Fueling</group>
      <struct>ConstantWork.DeltaTPS_FiltConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TransientFuelInitPuddle</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg</units>
      <ctype>const Constant_T</ctype>
      <help>Initial fuel puddle size</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>ConstantWork.TransientFuelInitPuddle</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelVaporFactorBias</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Percent bias between contribution of IAT and ECT to FuelVaporFactor.  100% is all IAT.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>ConstantWork.FuelVaporFactorBias</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TransientFuelMaxPuddle</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum fuel puddle size</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>ConstantWork.TransientFuelMaxPuddle</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>DeltaTPSFuelingEnable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enable Delta TPS transient fuel algorithm</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager</group>
      <struct>ConstantWork.DeltaTPSFuelingEnable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TauXFuelingEnable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enable Tau-X transient fuel algorithm</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling</group>
      <struct>ConstantWork.TauXFuelingEnable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelFlowCompMinValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>2</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum value that can be adapted into the FuelFlowCompMap</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt|Adapt FuelFlowComp Map</group>
      <struct>ConstantWork.FuelFlowCompMinValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelFlowCompMaxValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>2</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum value that can be adapted into the FuelFlowCompMap</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt|Adapt FuelFlowComp Map</group>
      <struct>ConstantWork.FuelFlowCompMaxValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2CtrlAdaptDelayTime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>O2 Control must be enabled for this amount of time before fuel adaption is enabled</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt|O2 Control Enable Delay</group>
      <struct>ConstantWork.O2CtrlAdaptDelayTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelAdaptErrorLwrLim</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Lower Limit Value</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt|Saturation (Tunable)</group>
      <struct>ConstantWork.FuelAdaptErrorLwrLim</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelAdaptErrorUprLim</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Upper Limit Value</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt|Saturation (Tunable)</group>
      <struct>ConstantWork.FuelAdaptErrorUprLim</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelAdaptEnable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>const Constant_T</ctype>
      <help>Determines whether the FuelFlowComp map will be adapted using the MAF sensor</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt</group>
      <struct>ConstantWork.FuelAdaptEnable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>AdaptEnable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>Volatile_T</ctype>
      <help>Determines whether the FuelFlowComp map will be adapted using the MAF sensor</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt</group>
      <struct>VolatileWork.AdaptEnable</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelAdaptDelta</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>2</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>O2_Error must be less than this delta to adapt the FuelFlowComp map</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt</group>
      <struct>ConstantWork.FuelAdaptDelta</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AF_Gasoline</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>30</max>
      <min>5</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Stoichiometric ratio for gasoline</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Fuel Calculation|Calculate Fuel Flow|Calculate A/F Ratio</group>
      <struct>ConstantWork.AF_Gasoline</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AF_Ethanol</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>30</max>
      <min>5</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Stoichiometric ratio for ethanol</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Fuel Calculation|Calculate Fuel Flow|Calculate A/F Ratio</group>
      <struct>ConstantWork.AF_Ethanol</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2LeanTimeThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Time limit the O2 feedback can sit below the lean switch point before flagging O2FailedLean fault</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Controller|Equivalence Ratio Perturbation</group>
      <struct>ConstantWork.O2LeanTimeThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2RichTimeThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Time limit the O2 feedback can sit abovethe rich switch point before flagging O2FailedRich fault</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Controller|Equivalence Ratio Perturbation</group>
      <struct>ConstantWork.O2RichTimeThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2ActiveTimeThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Time limit O2 feedback can sit between rich and lean switch points before flagging O2NotActive fault</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Controller|Equivalence Ratio Perturbation</group>
      <struct>ConstantWork.O2ActiveTimeThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EquivRatioDelta</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>EquivRatio</units>
      <ctype>const Constant_T</ctype>
      <help>Equivalence ratio has to be with this band of 1 to achieve close loop.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 Control State Determination</group>
      <struct>ConstantWork.EquivRatioDelta</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2ControlEnable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>5.3</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>const Constant_T</ctype>
      <help>Enables O2 control</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 Control State Determination</group>
      <struct>ConstantWork.O2ControlEnable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>O2CtrlPGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base P-gain for the gaseous closed loop O2 controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations</group>
      <struct>ConstantWork.O2CtrlPGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2CtrlIGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base I-gain for the gaseous closed loop O2 controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations</group>
      <struct>ConstantWork.O2CtrlIGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2CtrlDGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base D-gain for the gaseous closed loop O2 controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations</group>
      <struct>ConstantWork.O2CtrlDGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2ITermUpperLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Upper limit on gaseous closed loop O2 I Term.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations</group>
      <struct>ConstantWork.O2ITermUpperLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2ITermLowerLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Lower limit on gaseous closed loop O2 I Term.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations</group>
      <struct>ConstantWork.O2ITermLowerLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2CtrlPIDOutUpperLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Upper limit on gaseous closed loop O2 PID Output.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations</group>
      <struct>ConstantWork.O2CtrlPIDOutUpperLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2CtrlPIDOutLowerLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Lower limit on gaseous closed loop O2 PID Output.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations</group>
      <struct>ConstantWork.O2CtrlPIDOutLowerLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2Calibration</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 Control State Determination</group>
      <struct>VolatileWork_BSS.O2Calibration</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>IdleEntryAirRampInFiltC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0.005</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Decays TPS Setpoint from Crank TPS to Run State base value at this rate.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|AiflowOffset|Ramp Air Into Idle State</group>
      <struct>ConstantWork.IdleEntryAirRampInFiltC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BaseAirflowOfstMinValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum value that can be adapted into the BaseAirflowOfst table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Base Airflow Table Adapt|Adapt Base Airflow Table</group>
      <struct>ConstantWork.BaseAirflowOfstMinValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BaseAirflowOfstMaxValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum value that can be adapted into the BaseAirflowOfst table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Base Airflow Table Adapt|Adapt Base Airflow Table</group>
      <struct>ConstantWork.BaseAirflowOfstMaxValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BaseAirflowAdaptDelayTime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Idle Control must be enabled for this amount of time before fuel adaption is enabled</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Base Airflow Table Adapt|Idle Control Enable Delay</group>
      <struct>ConstantWork.BaseAirflowAdaptDelayTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BaseAirflowAdaptGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Gain for updating BaseAirflow table.  This fraction of the error is added to the map every 5ms.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Base Airflow Table Adapt</group>
      <struct>ConstantWork.BaseAirflowAdaptGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BaseAirflowAdaptErrorLwrLim</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Lower Limit Value</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Base Airflow Table Adapt|Saturation (Tunable)</group>
      <struct>ConstantWork.BaseAirflowAdaptErrorLwrLim</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BaseAirflowAdaptErrorUprLim</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Upper Limit Value</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Base Airflow Table Adapt|Saturation (Tunable)</group>
      <struct>ConstantWork.BaseAirflowAdaptErrorUprLim</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BaseAirflowAdaptEnable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>const Constant_T</ctype>
      <help>Determines whether the BaseAirflow table will be adapted using the air PID Iterm.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Base Airflow Table Adapt</group>
      <struct>ConstantWork.BaseAirflowAdaptEnable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>BaseAirflowAdaptDelta</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Air PID Iterm must be less than this delta to adapt the BaseAirflow table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Base Airflow Table Adapt</group>
      <struct>ConstantWork.BaseAirflowAdaptDelta</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IdleExitTimeConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>2.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Time constant for idle air and spark ramp out</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor</group>
      <struct>ConstantWork.IdleExitTimeConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InGearRPMCtrlEntryFiltC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0.005</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Sets decay rate of RPM setpoint from entry RPM.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Ramp RPM</group>
      <struct>ConstantWork.InGearRPMCtrlEntryFiltC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SpkMinGovPIDOutUpperLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degCA</units>
      <ctype>const Constant_T</ctype>
      <help>Upper limit on spark min governor PID Output.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PD (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.SpkMinGovPIDOutUpperLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SpkMinGovPIDOutLowerLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degCA</units>
      <ctype>const Constant_T</ctype>
      <help>Lower limit on spark min governor PID Output.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PD (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.SpkMinGovPIDOutLowerLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovPIDOutUpperLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Upper limit on air min governor PID Output.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor | Air PID Config</group>
      <struct>ConstantWork.AirMinGovPIDOutUpperLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovPIDOutLowerLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Lower limit on air min governor PID Output.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor | Air PID Config</group>
      <struct>ConstantWork.AirMinGovPIDOutLowerLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EnableRPMFalling</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>const Constant_T</ctype>
      <help>If disabled, Min Gov will enable immediately after cranking without waiting for falling RPM.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Idle State Determination</group>
      <struct>ConstantWork.EnableRPMFalling</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>RPMFallingFiltConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Idle State Determination|Determine if RPM is Falling</group>
      <struct>ConstantWork.RPMFallingFiltConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RPMFallingRate</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1000</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM/sec</units>
      <ctype>const Constant_T</ctype>
      <help>The minimum rate of change in RPM that triggers RPMFalling - This should be a positive value</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Idle State Determination|Determine if RPM is Falling</group>
      <struct>ConstantWork.RPMFallingRate</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InGearMinGovEntryRPMDelta</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>RPM above setpoint where Min Gov will enable when RPM is falling into idle.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Idle State Determination</group>
      <struct>ConstantWork.InGearMinGovEntryRPMDelta</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>StallSaverDeltaRPM</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>RPM delta below setpoint where Min Gov will enable to prevent engine stalls.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Idle State Determination</group>
      <struct>ConstantWork.StallSaverDeltaRPM</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MinGovEntryAirPcnt</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Percent air (TPS or APP) position where below which Min Gov will enable.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Idle State Determination</group>
      <struct>ConstantWork.MinGovEntryAirPcnt</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MinGovAirPcntHyst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Hysteresis around MinGovEntryAirPcnt where Min Gov will disable.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Idle State Determination</group>
      <struct>ConstantWork.MinGovAirPcntHyst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MinGovEntryAirTimeThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>If entry AirPcnt condition is satisfied, but RPM is high, Min Gov will enable if this time is exceeded.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Idle State Determination</group>
      <struct>ConstantWork.MinGovEntryAirTimeThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovErrorGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Error gain for the min governor controller. This gain is applied to the RPM error term before it is used to calculate the P, I and D terms.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor | Air PID Config</group>
      <struct>ConstantWork.AirMinGovErrorGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovPGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base P-gain for the min. governor controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PID (Tunable &amp; Scheduled)|PID Gain Select1</group>
      <struct>ConstantWork.AirMinGovPGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovDGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base D-gain for the min. governor controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PID (Tunable &amp; Scheduled)|PID Gain Select1</group>
      <struct>ConstantWork.AirMinGovDGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SpkMinGovErrorGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Error gain for the min governor controller. This gain is applied to the RPM error term before it is used to calculate the P, I and D terms.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PD (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.SpkMinGovErrorGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SpkMinGovPGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base P-gain for the min. governor controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PD (Tunable &amp; Scheduled)|PID Gain Select</group>
      <struct>ConstantWork.SpkMinGovPGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SpkMinGovDGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base D-gain for the min. governor controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PD (Tunable &amp; Scheduled)|PID Gain Select</group>
      <struct>ConstantWork.SpkMinGovDGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MotoringDeltaRPMLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>This is the amount RPM must be above the Setpoint RPM to set a Motorin Flag.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|MotoringDetection</group>
      <struct>ConstantWork.MotoringDeltaRPMLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MotoringDtctTimerLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Amount of time engine speed has to be above the min gov. rpm set pt to set motoring flag.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|MotoringDetection</group>
      <struct>ConstantWork.MotoringDtctTimerLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovIGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base I-gain for the min. governor controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PID (Tunable &amp; Scheduled)|PID Gain Select1</group>
      <struct>ConstantWork.AirMinGovIGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovITermLowerLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Lower limit on Air Min Governor I-term value.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor | Air PID Config</group>
      <struct>ConstantWork.AirMinGovITermLowerLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovITermUpperLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Upper limit on Air Min Governor I-term value.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor | Air PID Config</group>
      <struct>ConstantWork.AirMinGovITermUpperLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovRPMCtrlEntryFiltC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0.005</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter rate at which Max Gov setup is increased to MaxGovBaseRPMSetpoint.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Ramp RPM</group>
      <struct>ConstantWork.MaxGovRPMCtrlEntryFiltC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovInGearLowerLim</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>Max Gov RPM setpoint when in gear.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Trigger Pre-load|InGear</group>
      <struct>ConstantWork.MaxGovInGearLowerLim</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovInGearUpperLim</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>Max Gov RPM setpoint when in gear.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Trigger Pre-load|InGear</group>
      <struct>ConstantWork.MaxGovInGearUpperLim</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovInGearRPMThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>When in-gear, RPM has to pass the base RPM setpoint minus this calibration. to start the I term preload and ramp-in.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Trigger Pre-load|InGear</group>
      <struct>ConstantWork.MaxGovInGearRPMThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovInGearSetPt</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>NonVolatile_T</ctype>
      <help>Max Gov RPM setpoint when in gear.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Trigger Pre-load|InGear</group>
      <struct>NonVolatileWork.MaxGovInGearSetPt</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovInGearRPMSetPt</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>Max Gov RPM setpoint when in gear.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Trigger Pre-load|InGear</group>
      <struct>ConstantWork.MaxGovInGearRPMSetPt</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovNtrlLowerLim</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>Max Gov RPM setpoint when in gear.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Trigger Pre-load|InNeutral</group>
      <struct>ConstantWork.MaxGovNtrlLowerLim</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovNtrlUpperLim</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>Max Gov RPM setpoint when in gear.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Trigger Pre-load|InNeutral</group>
      <struct>ConstantWork.MaxGovNtrlUpperLim</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovNtrlRPMThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>When in neutral, RPM has to pass the base RPM setpoint minus this calibration. to start the I term preload and ramp-in.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Trigger Pre-load|InNeutral</group>
      <struct>ConstantWork.MaxGovNtrlRPMThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovNtrlSetPt</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>NonVolatile_T</ctype>
      <help>Max Gov RPM setpoint when in gear.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Trigger Pre-load|InNeutral</group>
      <struct>NonVolatileWork.MaxGovNtrlSetPt</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovNtrlRPMSetPt</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>Max Gov RPM setpoint when in neutral.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Trigger Pre-load|InNeutral</group>
      <struct>ConstantWork.MaxGovNtrlRPMSetPt</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovPIDOutUpperLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Upper limit on max governor PID Output.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.MaxGovPIDOutUpperLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovPIDOutLowerLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Lower limit on max governor PID Output.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.MaxGovPIDOutLowerLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovTPSHyst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Hysterisis around max gov TPS entry criteria.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|MaxGovState</group>
      <struct>ConstantWork.MaxGovTPSHyst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovErrorGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Error gain for the max governor controller. This gain is applied to the RPM error term before it is used to calculate the P, I and D terms.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.MaxGovErrorGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovPGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base P-gain for the max. governor controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.MaxGovPGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovDGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base D-gain for the max. governor controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.MaxGovDGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovDisable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Max governor manual disable</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|MaxGovState</group>
      <struct>ConstantWork.MaxGovDisable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Gov Enabled" value="0"/>
         <item name="Gov Disabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MaxGov</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|MaxGovState</group>
      <struct>VolatileWork_BSS.MaxGov</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovIGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base I-gain for the max. governor controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.MaxGovIGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovITermLowerLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Lower limit on max governor I-term value.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.MaxGovITermLowerLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovITermUpperLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Upper limit on max governor I-term value.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.MaxGovITermUpperLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SparkAdv_DeltaHi</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>720</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degCA</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum increasing spark change per 5ms</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Spark Advance Rate Limiter</group>
      <struct>ConstantWork.SparkAdv_DeltaHi</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SparkAdv_DeltaLo</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>720</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum decreasing spark change per 5ms</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Spark Advance Rate Limiter</group>
      <struct>ConstantWork.SparkAdv_DeltaLo</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxSparkLimitOffIdle</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>const Constant_T</ctype>
      <help>Max. spark limit on the delivered spark advance, when not in idle control.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|SparkAdvanceLimiter</group>
      <struct>ConstantWork.MaxSparkLimitOffIdle</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MinSparkLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>const Constant_T</ctype>
      <help>Min. spark limit on the delivered spark advance.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|SparkAdvanceLimiter</group>
      <struct>ConstantWork.MinSparkLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirControlSource</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Selects source of idle air control</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager</group>
      <struct>ConstantWork.AirControlSource</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="ETC" value="0"/>
         <item name="IAC" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MinETCSetpoint</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum setpoint for ETC.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager</group>
      <struct>ConstantWork.MinETCSetpoint</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EngMaxPower</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kW</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum power level of engine.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller</group>
      <struct>ConstantWork.EngMaxPower</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimit1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kW</units>
      <ctype>const Constant_T</ctype>
      <help>Power Limit setpoint corresponding to Level 1.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller</group>
      <struct>ConstantWork.PowerLimit1</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimit2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kW</units>
      <ctype>const Constant_T</ctype>
      <help>Power Limit setpoint corresponding to Level 2.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller</group>
      <struct>ConstantWork.PowerLimit2</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimit3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kW</units>
      <ctype>const Constant_T</ctype>
      <help>Power Limit setpoint corresponding to Level 3.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller</group>
      <struct>ConstantWork.PowerLimit3</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimit4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kW</units>
      <ctype>const Constant_T</ctype>
      <help>Power Limit setpoint corresponding to Level 4.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller</group>
      <struct>ConstantWork.PowerLimit4</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimt_ErrorGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Error gain for the max governor controller. This gain is applied to the RPM error term before it is used to calculate the P, I and D terms.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.PowerLimt_ErrorGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimt_PGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base P-gain for the PID controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.PowerLimt_PGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimt_DGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base D-gain for the PID controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.PowerLimt_DGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimt_IGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Base I-gain for the PID controller.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.PowerLimt_IGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimt_ITermLowerLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Lower limit on PID I-term value.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.PowerLimt_ITermLowerLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimt_ITermUpperLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Upper limit on PID I-term value.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.PowerLimt_ITermUpperLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Heater_Off_Temp</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Heater</group>
      <struct>ConstantWork.Heater_Off_Temp</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelPumpStartTime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>The length of time for the Fuel Pump relay to be enabled at startup</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Stall|Fuel Pump at Startup</group>
      <struct>ConstantWork.FuelPumpStartTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>OilPumpStartTime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>The length of time for the Fuel Pump relay to be enabled at startup</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Stall|Oil Pump at Startup</group>
      <struct>ConstantWork.OilPumpStartTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BARO_Count</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Number of samples to average at key-up to produce signal value</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|Capture Signal At Startup</group>
      <struct>ConstantWork.BARO_Count</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
   </VarDec>
   <VarDec>
      <name>SSRPMDecFiltC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant for a decreasing signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs |LoadBasedCalcs Config</group>
      <struct>ConstantWork.SSRPMDecFiltC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SSRPMIncFiltC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant for a increasing signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs |LoadBasedCalcs Config</group>
      <struct>ConstantWork.SSRPMIncFiltC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SSLoadDecFiltC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant for a decreasing signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs |LoadBasedCalcs Config</group>
      <struct>ConstantWork.SSLoadDecFiltC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SSLoadIncFiltC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant for a increasing signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs |LoadBasedCalcs Config</group>
      <struct>ConstantWork.SSLoadIncFiltC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCReqIncFiltC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant for a decreasing ETC Request signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Base TPS Request</group>
      <struct>ConstantWork.ETCReqIncFiltC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCReqDecFiltC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant for a decreasing ETC Request signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Base TPS Request</group>
      <struct>ConstantWork.ETCReqDecFiltC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECT_KeyUp_Count</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Number of samples to average at key-up to produce signal value</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Capture ECT At Startup</group>
      <struct>ConstantWork.ECT_KeyUp_Count</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
   </VarDec>
   <VarDec>
      <name>IAT_KeyUp_Count</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Number of samples to average at key-up to produce signal value</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Capture IAT At Startup</group>
      <struct>ConstantWork.IAT_KeyUp_Count</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
   </VarDec>
   <VarDec>
      <name>Overheat_MaxAPP</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Max APP command to allow during overheat condition</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|CutThrottle APP Limiting</group>
      <struct>ConstantWork.Overheat_MaxAPP</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Overheat_ScaleAPP</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>multiplier</units>
      <ctype>const Constant_T</ctype>
      <help>Scale APP by this factor when overheating</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|CutThrottle APP Limiting</group>
      <struct>ConstantWork.Overheat_ScaleAPP</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Hour_Meter_Overwite_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>System | Hour Meter | Hour_Meter_Overwite Override</group>
      <struct>VolatileWork_BSS.Hour_Meter_Overwite_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Hour_Meter_Overwite_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>6.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>hours</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override hour meter value</help>
      <group>System | Hour Meter | Hour_Meter_Overwite Override</group>
      <struct>VolatileWork_BSS.Hour_Meter_Overwite_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAP_IR_TPS_CL</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>In-range MAP fault logic.  Maximum throttle position, below which MAP should be less than MAP_IR_HI</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|MAP Fault Logic</group>
      <struct>ConstantWork.MAP_IR_TPS_CL</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAP_IR_HI</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>const Constant_T</ctype>
      <help>In-range MAP fault logic. Maximum value that MAP should not exceed with closed throttle and engine running</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|MAP Fault Logic</group>
      <struct>ConstantWork.MAP_IR_HI</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAP_IR_TPS_OP</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>In-range MAP fault logic.  Minimum throttle position, above which MAP should be greater than MAP_IR_LO</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|MAP Fault Logic</group>
      <struct>ConstantWork.MAP_IR_TPS_OP</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAP_IR_LO</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>const Constant_T</ctype>
      <help>In-range MAP fault logic. Minimum value that MAP should not be less than with open throttle and engine running</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|MAP Fault Logic</group>
      <struct>ConstantWork.MAP_IR_LO</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAP_TPS_STUCK</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>In-range MAP fault logic.  Maximum throttle position, below	which MAP should be less than BARO</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|MAP Fault Logic</group>
      <struct>ConstantWork.MAP_TPS_STUCK</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAP_STUCK</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>const Constant_T</ctype>
      <help>In-range MAP fault logic.  Minimum difference between MAP and BARO with throttle closed. If less than this, a fault exists</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|MAP Fault Logic</group>
      <struct>ConstantWork.MAP_STUCK</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BaseRevLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum RPM allowed, before any action is taken</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Overspeed Protection</group>
      <struct>ConstantWork.BaseRevLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RevLimitHyst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>12000</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>Hysteresis applied to MaxRPM once rev limit threshold is satisfied</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Overspeed Protection</group>
      <struct>ConstantWork.RevLimitHyst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MediumRevOffset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>RPM rev limit for medium action to be taken</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Overspeed Protection</group>
      <struct>ConstantWork.MediumRevOffset</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>HardRevOffset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>RPM rev limit for hard action to be taken</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Overspeed Protection</group>
      <struct>ConstantWork.HardRevOffset</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelPres_DeltaTarget</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>const Constant_T</ctype>
      <help>Target fuel pressure delta across injector (rail - manifold)</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Wrong Fuel Pressure Fault Logic</group>
      <struct>ConstantWork.FuelPres_DeltaTarget</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelPres_DeltaTolerance</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>const Constant_T</ctype>
      <help>Target fuel pressure delta across injector (rail - manifold)</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Wrong Fuel Pressure Fault Logic</group>
      <struct>ConstantWork.FuelPres_DeltaTolerance</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelPres_FaultTimer</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Number of seconds that fuel pressure must be out of spec for fault</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Wrong Fuel Pressure Fault Logic</group>
      <struct>ConstantWork.FuelPres_FaultTimer</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TempOverheat_Fault</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degC</units>
      <ctype>const Constant_T</ctype>
      <help>ECT limit above which fault is set.</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Engine Overheat Fault Logic</group>
      <struct>ConstantWork.TempOverheat_Fault</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TempOverheatSevere_Fault</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degC</units>
      <ctype>const Constant_T</ctype>
      <help>ECT limit above which severe overheat fault is set.</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Engine Overheat Fault Logic</group>
      <struct>ConstantWork.TempOverheatSevere_Fault</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TempOverheat_Warn</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degC</units>
      <ctype>const Constant_T</ctype>
      <help>ECT limit above which warning light comes on</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Engine Overheat Fault Logic</group>
      <struct>ConstantWork.TempOverheat_Warn</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelEconomy_FilterC</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0.001</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Time const</units>
      <ctype>const Constant_T</ctype>
      <help>Time constant for fuel economy filter</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Fuel Economy|First Order Low Pass (Tunable)</group>
      <struct>ConstantWork.FuelEconomy_FilterC</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>NoOilPres_FaultTime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>After no oil pressure for this long the NoOilFault becomes active.</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Low Oil Pressure Fault Logic</group>
      <struct>ConstantWork.NoOilPres_FaultTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECT_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | ECT | ECT Override</group>
      <struct>VolatileWork_BSS.ECT_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ECTFiltConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | ECT | ECT Config</group>
      <struct>ConstantWork.ECTFiltConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECTDefault</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>C</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | ECT | ECT Config</group>
      <struct>ConstantWork.ECTDefault</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECT_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>C</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | ECT | ECT Override</group>
      <struct>VolatileWork_BSS.ECT_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECTMax</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | ECT | ECT Config</group>
      <struct>ConstantWork.ECTMax</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECTMin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | ECT | ECT Config</group>
      <struct>ConstantWork.ECTMin</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IAT_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | IAT | IAT Override</group>
      <struct>VolatileWork_BSS.IAT_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>IATFiltConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | IAT | IAT Config</group>
      <struct>ConstantWork.IATFiltConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IATDefault</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>C</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | IAT | IAT Config</group>
      <struct>ConstantWork.IATDefault</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IAT_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>C</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | IAT | IAT Override</group>
      <struct>VolatileWork_BSS.IAT_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IATMax</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | IAT | IAT Config</group>
      <struct>ConstantWork.IATMax</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IATMin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | IAT | IAT Config</group>
      <struct>ConstantWork.IATMin</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_Offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Offset from engineering units to PWM duty cycle</help>
      <group>BaseEngineController_A02|Foreground|Outputs|HBridge</group>
      <struct>ConstantWork.ETC_Offset</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EngineShutdownDelayTime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Delays the engine shutdown when DelayedEngineShutdown fault-action is active.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control|Injector Enable Manager</group>
      <struct>ConstantWork.EngineShutdownDelayTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Injector1Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control|Injector Enable Manager</group>
      <struct>VolatileWork.Injector1Enable</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Injector2Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control|Injector Enable Manager</group>
      <struct>VolatileWork.Injector2Enable</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Injector3Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control|Injector Enable Manager</group>
      <struct>VolatileWork.Injector3Enable</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Injector4Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control|Injector Enable Manager</group>
      <struct>VolatileWork.Injector4Enable</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Injector5Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control|Injector Enable Manager</group>
      <struct>VolatileWork.Injector5Enable</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Injector6Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control|Injector Enable Manager</group>
      <struct>VolatileWork.Injector6Enable</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Injector7Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control|Injector Enable Manager</group>
      <struct>VolatileWork.Injector7Enable</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Injector8Enable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control|Injector Enable Manager</group>
      <struct>VolatileWork.Injector8Enable</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SparkEnableTDCCounts</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Do not enable spark until this many TDCs have occurred in order to guarantee cam synchronization. This number should typically be 2.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control|Coil Enable Manager|EST Enable TDC Counter</group>
      <struct>ConstantWork.SparkEnableTDCCounts</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>SparkEnableCyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>Volatile_T</ctype>
      <help>Disable spark to particular cylinder.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control|Coil Enable Manager</group>
      <struct>VolatileWork.SparkEnableCyl1</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SparkEnableCyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>Volatile_T</ctype>
      <help>Disable spark to particular cylinder.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control|Coil Enable Manager</group>
      <struct>VolatileWork.SparkEnableCyl2</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SparkEnableCyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>Volatile_T</ctype>
      <help>Disable spark to particular cylinder.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control|Coil Enable Manager</group>
      <struct>VolatileWork.SparkEnableCyl3</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SparkEnableCyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>Volatile_T</ctype>
      <help>Disable spark to particular cylinder.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control|Coil Enable Manager</group>
      <struct>VolatileWork.SparkEnableCyl4</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SparkEnableCyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>Volatile_T</ctype>
      <help>Disable spark to particular cylinder.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control|Coil Enable Manager</group>
      <struct>VolatileWork.SparkEnableCyl5</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SparkEnableCyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>Volatile_T</ctype>
      <help>Disable spark to particular cylinder.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control|Coil Enable Manager</group>
      <struct>VolatileWork.SparkEnableCyl6</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SparkEnableCyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>Volatile_T</ctype>
      <help>Disable spark to particular cylinder.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control|Coil Enable Manager</group>
      <struct>VolatileWork.SparkEnableCyl7</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SparkEnableCyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>Volatile_T</ctype>
      <help>Disable spark to particular cylinder.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control|Coil Enable Manager</group>
      <struct>VolatileWork.SparkEnableCyl8</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SparkStartAngle_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provides a relative offset to input signal</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control | SparkStartAngle Override</group>
      <struct>VolatileWork_BSS.SparkStartAngle_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SparkStartAngle_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>degBTDC</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provides a relative offset to input signal</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control | SparkStartAngle Override</group>
      <struct>VolatileWork_BSS.SparkStartAngle_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SparkStopAngle_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provides a relative offset to input signal</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control | SparkStopAngle Override</group>
      <struct>VolatileWork_BSS.SparkStopAngle_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SparkStopAngle_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>degBTDC</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provides a relative offset to input signal</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control | SparkStopAngle Override</group>
      <struct>VolatileWork_BSS.SparkStopAngle_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SparkMaxDuration</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum duration for a spark pulse.  Must be a multiple of 5ms</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Coil Control</group>
      <struct>ConstantWork.SparkMaxDuration</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Oil_Pressure_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | Oil_Pressure_Ovr Override</group>
      <struct>VolatileWork_BSS.Oil_Pressure_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Oil_Pressure_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | Oil_Pressure_Ovr Override</group>
      <struct>VolatileWork_BSS.Oil_Pressure_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>OilPres_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | OilPres | OilPres Override</group>
      <struct>VolatileWork_BSS.OilPres_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>OilPresFilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | OilPres | OilPres Config</group>
      <struct>ConstantWork.OilPresFilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>OilPresGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>psi/ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Scaling from A/D counts to engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | OilPres | OilPres Config</group>
      <struct>ConstantWork.OilPresGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>OilPresOfst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>psi</units>
      <ctype>const Constant_T</ctype>
      <help>Offset after gain in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | OilPres | OilPres Config</group>
      <struct>ConstantWork.OilPresOfst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>OilPresDfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>psi</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | OilPres | OilPres Config</group>
      <struct>ConstantWork.OilPresDfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>OilPres_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>psi</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | OilPres | OilPres Override</group>
      <struct>VolatileWork_BSS.OilPres_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RPM_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | RPM_Ovr Override</group>
      <struct>VolatileWork_BSS.RPM_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>RPMFiltConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed</group>
      <struct>ConstantWork.RPMFiltConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RPM_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | RPM_Ovr Override</group>
      <struct>VolatileWork_BSS.RPM_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Temp_Guage_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | Temp_Guage_Ovr Override</group>
      <struct>VolatileWork_BSS.Temp_Guage_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Temp_Guage_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | Temp_Guage_Ovr Override</group>
      <struct>VolatileWork_BSS.Temp_Guage_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Engine_Crank_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | Engine_Crank_Ovr Override</group>
      <struct>VolatileWork_BSS.Engine_Crank_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>StallRPMThresholdHyst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>Hysteresis used in conjunction with Min. RPM Threshold to determine when engine state transition to STALL. </help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|EngineState</group>
      <struct>ConstantWork.StallRPMThresholdHyst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>StallRPMMinThreshold</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>Min. RPM Threshold below which engine state transition to STALL.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|EngineState</group>
      <struct>ConstantWork.StallRPMMinThreshold</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>CrankToRunRPMThresh</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>RPM above which RUN mode can be entered from CRANK mode.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|EngineState</group>
      <struct>ConstantWork.CrankToRunRPMThresh</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>RunLatchTDCs</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <units>TDCs</units>
      <ctype>const Constant_T</ctype>
      <help>Number of TDCs required to be above CrankToRunRPMThresh before the RUN mode is invoked.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|EngineState</group>
      <struct>ConstantWork.RunLatchTDCs</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Engine_Crank_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | Engine_Crank_Ovr Override</group>
      <struct>VolatileWork_BSS.Engine_Crank_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Engine_On_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | Engine_On_Ovr Override</group>
      <struct>VolatileWork_BSS.Engine_On_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Engine_On_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | Engine_On_Ovr Override</group>
      <struct>VolatileWork_BSS.Engine_On_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Load_On_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | Load_On_Ovr Override</group>
      <struct>VolatileWork_BSS.Load_On_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Crank_Time</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5.0E14</max>
      <min>-5.0E14</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>ConstantWork.Crank_Time</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Crank_Wait_Before_Retry</name>
      <access>RW RW RW RW</access>
      <gain>0.005</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>5.0E14</max>
      <min>-5.0E14</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>ConstantWork.Crank_Wait_Before_Retry</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Caught_RPM</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>ConstantWork.Caught_RPM</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Cranking_Torque</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>nm</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>ConstantWork.Cranking_Torque</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Max_Cranking_RPM</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>ConstantWork.Max_Cranking_RPM</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Max_Generating_RPM</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>ConstantWork.Max_Generating_RPM</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Genset_Enable_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|112 | Genset_Enable_Ovr Override</group>
      <struct>VolatileWork_BSS.Genset_Enable_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Genset_Enable_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|112 | Genset_Enable_Ovr Override</group>
      <struct>VolatileWork_BSS.Genset_Enable_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Genset_Load_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|112 | Genset_Load_Ovr Override</group>
      <struct>VolatileWork_BSS.Genset_Load_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Genset_Load_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|112 | Genset_Load_Ovr Override</group>
      <struct>VolatileWork_BSS.Genset_Load_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Load_On_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | Load_On_Ovr Override</group>
      <struct>VolatileWork_BSS.Load_On_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Fault_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | Fault_Ovr Override</group>
      <struct>VolatileWork_BSS.Fault_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fault_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112 | Fault_Ovr Override</group>
      <struct>VolatileWork_BSS.Fault_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fault_Prb</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|112</group>
      <struct>VolatileWork_BSS.Fault_Prb</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Run_Request_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Run_Request_Ovr Override</group>
      <struct>VolatileWork_BSS.Run_Request_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Run_Request_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Run_Request_Ovr Override</group>
      <struct>VolatileWork_BSS.Run_Request_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Control_Mode_Cmd_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Control_Mode_Cmd_Ovr Override</group>
      <struct>VolatileWork_BSS.Control_Mode_Cmd_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Control_Mode_Cmd_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Control_Mode_Cmd_Ovr Override</group>
      <struct>VolatileWork_BSS.Control_Mode_Cmd_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Motoring_Tq_Curve_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Motoring_Tq_Curve_Ovr Override</group>
      <struct>VolatileWork_BSS.Motoring_Tq_Curve_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Motoring_Tq_Curve_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Motoring_Tq_Curve_Ovr Override</group>
      <struct>VolatileWork_BSS.Motoring_Tq_Curve_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Generating_Tq_Curve_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Generating_Tq_Curve_Ovr Override</group>
      <struct>VolatileWork_BSS.Generating_Tq_Curve_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Generating_Tq_Curve_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Generating_Tq_Curve_Ovr Override</group>
      <struct>VolatileWork_BSS.Generating_Tq_Curve_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Speed_Voltage_Torque_CMD_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Speed_Voltage_Torque_CMD_Ovr Override</group>
      <struct>VolatileWork_BSS.Speed_Voltage_Torque_CMD_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Speed_Voltage_Torque_CMD_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Speed_Voltage_Torque_CMD_Ovr Override</group>
      <struct>VolatileWork_BSS.Speed_Voltage_Torque_CMD_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Motoring_Torque_Lim_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Motoring_Torque_Lim_Ovr Override</group>
      <struct>VolatileWork_BSS.Motoring_Torque_Lim_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Motoring_Torque_Lim_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Motoring_Torque_Lim_Ovr Override</group>
      <struct>VolatileWork_BSS.Motoring_Torque_Lim_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Generating_Torque_Lim_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Generating_Torque_Lim_Ovr Override</group>
      <struct>VolatileWork_BSS.Generating_Torque_Lim_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Generating_Torque_Lim_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Generating_Torque_Lim_Ovr Override</group>
      <struct>VolatileWork_BSS.Generating_Torque_Lim_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Control_Mode_Cmd_Prb</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix</group>
      <struct>VolatileWork_BSS.Control_Mode_Cmd_Prb</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Motoring_Tq_Curve_Prb</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix</group>
      <struct>VolatileWork_BSS.Motoring_Tq_Curve_Prb</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Generating_Tq_Curve_Prb</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix</group>
      <struct>VolatileWork_BSS.Generating_Tq_Curve_Prb</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Aux_PWM_State_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Aux_PWM_State_Ovr Override</group>
      <struct>VolatileWork_BSS.Aux_PWM_State_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Aux_PWM_State_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Aux_PWM_State_Ovr Override</group>
      <struct>VolatileWork_BSS.Aux_PWM_State_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Aux_PWM_DutyCycle_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Aux_PWM_DutyCycle_Ovr Override</group>
      <struct>VolatileWork_BSS.Aux_PWM_DutyCycle_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Aux_PWM_DutyCycle_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Aux_PWM_DutyCycle_Ovr Override</group>
      <struct>VolatileWork_BSS.Aux_PWM_DutyCycle_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Aux_PWM_Freq_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Aux_PWM_Freq_Ovr Override</group>
      <struct>VolatileWork_BSS.Aux_PWM_Freq_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Aux_PWM_Freq_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | Aux_PWM_Freq_Ovr Override</group>
      <struct>VolatileWork_BSS.Aux_PWM_Freq_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>XDRP_Supply_State_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | XDRP_Supply_State_Ovr Override</group>
      <struct>VolatileWork_BSS.XDRP_Supply_State_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>XDRP_Supply_State_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | XDRP_Supply_State_Ovr Override</group>
      <struct>VolatileWork_BSS.XDRP_Supply_State_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Aux_PWM_State_Prb</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix</group>
      <struct>VolatileWork_BSS.Aux_PWM_State_Prb</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Aux_PWM_DutyCycle_Prb</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix</group>
      <struct>VolatileWork_BSS.Aux_PWM_DutyCycle_Prb</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Aux_PWM_Freq_Prb</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix</group>
      <struct>VolatileWork_BSS.Aux_PWM_Freq_Prb</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>XDRP_Supply_State_Prb</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix</group>
      <struct>VolatileWork_BSS.XDRP_Supply_State_Prb</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SecondartSpeedLim_CenterPT_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | SecondartSpeedLim_CenterPT_Ovr Override</group>
      <struct>VolatileWork_BSS.SecondartSpeedLim_CenterPT_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SecondarySpdLim_Cal</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix</group>
      <struct>ConstantWork.SecondarySpdLim_Cal</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SecondartSpeedLim_CenterPT_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | SecondartSpeedLim_CenterPT_Ovr Override</group>
      <struct>VolatileWork_BSS.SecondartSpeedLim_CenterPT_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SecondaryVoltLim_CenterPT_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | SecondaryVoltLim_CenterPT_Ovr Override</group>
      <struct>VolatileWork_BSS.SecondaryVoltLim_CenterPT_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SecondaryVoltLim_Cal</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix</group>
      <struct>ConstantWork.SecondaryVoltLim_Cal</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SecondaryVoltLim_CenterPT_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix | SecondaryVoltLim_CenterPT_Ovr Override</group>
      <struct>VolatileWork_BSS.SecondaryVoltLim_CenterPT_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SecondarySpeedLim_CenterPT_Prb</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix</group>
      <struct>VolatileWork_BSS.SecondarySpeedLim_CenterPT_Prb</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SecondaryVoltLim_CenterPT_Prb</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|CAN Out|Phoenix</group>
      <struct>VolatileWork_BSS.SecondaryVoltLim_CenterPT_Prb</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SysVolt_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SysVolt | SysVolt Override</group>
      <struct>VolatileWork_BSS.SysVolt_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SysVoltFilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SysVolt | SysVolt Config</group>
      <struct>ConstantWork.SysVoltFilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SysVoltGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>Volts/ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Scaling from A/D counts to engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SysVolt | SysVolt Config</group>
      <struct>ConstantWork.SysVoltGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SysVoltOfst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Volts</units>
      <ctype>const Constant_T</ctype>
      <help>Offset after gain in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SysVolt | SysVolt Config</group>
      <struct>ConstantWork.SysVoltOfst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SysVoltDfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Volts</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SysVolt | SysVolt Config</group>
      <struct>ConstantWork.SysVoltDfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SysVolt_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Volts</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SysVolt | SysVolt Override</group>
      <struct>VolatileWork_BSS.SysVolt_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS1_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Override</group>
      <struct>VolatileWork_BSS.TPS1_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TPS1_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Override</group>
      <struct>VolatileWork_BSS.TPS1_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS1Rev_Polarity</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>const Constant_T</ctype>
      <help>1 = Reverse Polarity (Smaller voltage values indicate larger % travel)</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1Rev_Polarity</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>TPS1Adapt_Low_Max</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC Counts</units>
      <ctype>const Constant_T</ctype>
      <help>Specifies for the maximum value of the lower adapt range.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1Adapt_Low_Max</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS1Adapt_Hi_Min</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC Counts</units>
      <ctype>const Constant_T</ctype>
      <help>Specifies for the minimum value of the upper adapt range.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1Adapt_Hi_Min</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS1MaxLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Sets the upper limit on the potentiometer range.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1MaxLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS1FilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1FilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS1DfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1DfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS2_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Override</group>
      <struct>VolatileWork_BSS.TPS2_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TPS2_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Override</group>
      <struct>VolatileWork_BSS.TPS2_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS2Rev_Polarity</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>boolean</units>
      <ctype>const Constant_T</ctype>
      <help>1 = Reverse Polarity (Smaller voltage values indicate larger % travel)</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2Rev_Polarity</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>TPS2Adapt_Low_Max</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC Counts</units>
      <ctype>const Constant_T</ctype>
      <help>Specifies for the maximum value of the lower adapt range.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2Adapt_Low_Max</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS2Adapt_Hi_Min</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC Counts</units>
      <ctype>const Constant_T</ctype>
      <help>Specifies for the minimum value of the upper adapt range.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2Adapt_Hi_Min</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS2MaxLimit</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Sets the upper limit on the potentiometer range.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2MaxLimit</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS2FilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2FilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS2DfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2DfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>APP1_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | APP1_Ovr Override</group>
      <struct>VolatileWork_BSS.APP1_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>APP1_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | APP1_Ovr Override</group>
      <struct>VolatileWork_BSS.APP1_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2DelagFilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>First-order filter time constant of the pre-catalyst O2 signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|O2 De-lag</group>
      <struct>ConstantWork.O2DelagFilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2_PostCat_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors | O2_PostCat | O2_PostCat Override</group>
      <struct>VolatileWork_BSS.O2_PostCat_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>O2_PostCatFiltConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors | O2_PostCat | O2_PostCat Config</group>
      <struct>ConstantWork.O2_PostCatFiltConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2_PostCatDefault</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Equiv Ratio</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors | O2_PostCat | O2_PostCat Config</group>
      <struct>ConstantWork.O2_PostCatDefault</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2_PostCat_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Equiv Ratio</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors | O2_PostCat | O2_PostCat Override</group>
      <struct>VolatileWork_BSS.O2_PostCat_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAF_Source</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <help>Selects the source for the fueling algorithm</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>VolatileWork.MAF_Source</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Model From MAP" value="0"/>
         <item name="Use MAF Sensor" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>BARO_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provides an override to the input by adding this amount to either the locked or running value</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs | BARO Override</group>
      <struct>VolatileWork_BSS.BARO_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BARO_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>kPa</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provides an override to the input by adding this amount to either the locked or running value</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs | BARO Override</group>
      <struct>VolatileWork_BSS.BARO_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>BaroRunStallDelay</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Delay time after transitioning from Run to Stall before resampling baro.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs</group>
      <struct>ConstantWork.BaroRunStallDelay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAPTimeGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa/ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Scaling from A/D counts to engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAPTime | MAPTime Config</group>
      <struct>ConstantWork.MAPTimeGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAPTimeOfst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>const Constant_T</ctype>
      <help>Offset after gain in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAPTime | MAPTime Config</group>
      <struct>ConstantWork.MAPTimeOfst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAPTimeDfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAPTime | MAPTime Config</group>
      <struct>ConstantWork.MAPTimeDfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAP_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAP | MAP Override</group>
      <struct>VolatileWork_BSS.MAP_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MAPFilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAP | MAP Config</group>
      <struct>ConstantWork.MAPFilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAPGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa/ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Scaling from A/D counts to engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAP | MAP Config</group>
      <struct>ConstantWork.MAPGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAPOfst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>const Constant_T</ctype>
      <help>Offset after gain in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAP | MAP Config</group>
      <struct>ConstantWork.MAPOfst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAPDfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAP | MAP Config</group>
      <struct>ConstantWork.MAPDfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAP_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAP | MAP Override</group>
      <struct>VolatileWork_BSS.MAP_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>VETable_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced | VETable Override</group>
      <struct>VolatileWork_BSS.VETable_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>VETable_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced | VETable Override</group>
      <struct>VolatileWork_BSS.VETable_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAF_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|Digital | MAF | MAF Override</group>
      <struct>VolatileWork_BSS.MAF_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MAFFiltConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|Digital | MAF | MAF Config</group>
      <struct>ConstantWork.MAFFiltConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAFDefault</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>g/s</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|Digital | MAF | MAF Config</group>
      <struct>ConstantWork.MAFDefault</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAF_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>g/s</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|Digital | MAF | MAF Override</group>
      <struct>VolatileWork_BSS.MAF_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SSRPMTol</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>Steady-State RPM Tolerance</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs|Engine Steady-State Flag</group>
      <struct>ConstantWork.SSRPMTol</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SSLoadTol</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Steady-State Load Tolerance</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs|Engine Steady-State Flag</group>
      <struct>ConstantWork.SSLoadTol</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SteadyStateECT</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>200</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degC</units>
      <ctype>const Constant_T</ctype>
      <help>Steady state engine coolant temperature</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs|Normalized Effective Combustion Chamber Temperature</group>
      <struct>ConstantWork.SteadyStateECT</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxIndEngPwr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1000</max>
      <min>1</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kW</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum indicated engine power</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs|Normalized Effective Combustion Chamber Temperature</group>
      <struct>ConstantWork.MaxIndEngPwr</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>WarmUpTimeConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>10000</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Warm-up time constant.  Determines how quickly NECCT warms up relative to ECT.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs|Normalized Effective Combustion Chamber Temperature</group>
      <struct>ConstantWork.WarmUpTimeConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EngineAccelFiltConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Engine Accel</group>
      <struct>ConstantWork.EngineAccelFiltConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGRSense_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | EGRSense | EGRSense Override</group>
      <struct>VolatileWork_BSS.EGRSense_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EGRSenseFilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | EGRSense | EGRSense Config</group>
      <struct>ConstantWork.EGRSenseFilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGRSenseGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>%/ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Scaling from A/D counts to engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | EGRSense | EGRSense Config</group>
      <struct>ConstantWork.EGRSenseGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGRSenseOfst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Offset after gain in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | EGRSense | EGRSense Config</group>
      <struct>ConstantWork.EGRSenseOfst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGRSenseDfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | EGRSense | EGRSense Config</group>
      <struct>ConstantWork.EGRSenseDfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGRSense_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | EGRSense | EGRSense Override</group>
      <struct>VolatileWork_BSS.EGRSense_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelSens_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelSens | FuelSens Override</group>
      <struct>VolatileWork_BSS.FuelSens_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelSensFilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelSens | FuelSens Config</group>
      <struct>ConstantWork.FuelSensFilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelSensGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>%/ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Scaling from A/D counts to engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelSens | FuelSens Config</group>
      <struct>ConstantWork.FuelSensGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelSensOfst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Offset after gain in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelSens | FuelSens Config</group>
      <struct>ConstantWork.FuelSensOfst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelSensDfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelSens | FuelSens Config</group>
      <struct>ConstantWork.FuelSensDfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelSens_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelSens | FuelSens Override</group>
      <struct>VolatileWork_BSS.FuelSens_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SoftCycle1Cyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.SoftCycle1Cyl1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle1Cyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.SoftCycle1Cyl2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle1Cyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.SoftCycle1Cyl3</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle1Cyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.SoftCycle1Cyl4</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle1Cyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.SoftCycle1Cyl5</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle1Cyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.SoftCycle1Cyl6</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle1Cyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.SoftCycle1Cyl7</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle1Cyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.SoftCycle1Cyl8</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle2Cyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.SoftCycle2Cyl1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle2Cyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.SoftCycle2Cyl2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle2Cyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.SoftCycle2Cyl3</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle2Cyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.SoftCycle2Cyl4</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle2Cyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.SoftCycle2Cyl5</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle2Cyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.SoftCycle2Cyl6</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle2Cyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.SoftCycle2Cyl7</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle2Cyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.SoftCycle2Cyl8</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle3Cyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.SoftCycle3Cyl1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle3Cyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.SoftCycle3Cyl2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle3Cyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.SoftCycle3Cyl3</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle3Cyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.SoftCycle3Cyl4</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle3Cyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.SoftCycle3Cyl5</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle3Cyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.SoftCycle3Cyl6</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle3Cyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.SoftCycle3Cyl7</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle3Cyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.SoftCycle3Cyl8</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle4Cyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.SoftCycle4Cyl1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle4Cyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.SoftCycle4Cyl2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle4Cyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.SoftCycle4Cyl3</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle4Cyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.SoftCycle4Cyl4</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle4Cyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.SoftCycle4Cyl5</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle4Cyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.SoftCycle4Cyl6</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle4Cyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.SoftCycle4Cyl7</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SoftCycle4Cyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Soft Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.SoftCycle4Cyl8</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle1Cyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.MediumCycle1Cyl1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle1Cyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.MediumCycle1Cyl2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle1Cyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.MediumCycle1Cyl3</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle1Cyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.MediumCycle1Cyl4</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle1Cyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.MediumCycle1Cyl5</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle1Cyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.MediumCycle1Cyl6</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle1Cyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.MediumCycle1Cyl7</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle1Cyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.MediumCycle1Cyl8</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle2Cyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.MediumCycle2Cyl1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle2Cyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.MediumCycle2Cyl2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle2Cyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.MediumCycle2Cyl3</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle2Cyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.MediumCycle2Cyl4</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle2Cyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.MediumCycle2Cyl5</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle2Cyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.MediumCycle2Cyl6</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle2Cyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.MediumCycle2Cyl7</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle2Cyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.MediumCycle2Cyl8</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle3Cyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.MediumCycle3Cyl1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle3Cyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.MediumCycle3Cyl2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle3Cyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.MediumCycle3Cyl3</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle3Cyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.MediumCycle3Cyl4</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle3Cyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.MediumCycle3Cyl5</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle3Cyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.MediumCycle3Cyl6</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle3Cyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.MediumCycle3Cyl7</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle3Cyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.MediumCycle3Cyl8</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle4Cyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.MediumCycle4Cyl1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle4Cyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.MediumCycle4Cyl2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle4Cyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.MediumCycle4Cyl3</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle4Cyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.MediumCycle4Cyl4</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle4Cyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.MediumCycle4Cyl5</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle4Cyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.MediumCycle4Cyl6</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle4Cyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.MediumCycle4Cyl7</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MediumCycle4Cyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Medium Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.MediumCycle4Cyl8</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle1Cyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.HardCycle1Cyl1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle1Cyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.HardCycle1Cyl2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle1Cyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.HardCycle1Cyl3</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle1Cyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.HardCycle1Cyl4</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle1Cyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.HardCycle1Cyl5</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle1Cyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.HardCycle1Cyl6</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle1Cyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.HardCycle1Cyl7</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle1Cyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle1CutPatter</group>
      <struct>ConstantWork.HardCycle1Cyl8</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle2Cyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.HardCycle2Cyl1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle2Cyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.HardCycle2Cyl2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle2Cyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.HardCycle2Cyl3</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle2Cyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.HardCycle2Cyl4</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle2Cyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.HardCycle2Cyl5</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle2Cyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.HardCycle2Cyl6</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle2Cyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.HardCycle2Cyl7</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle2Cyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle2CutPatter</group>
      <struct>ConstantWork.HardCycle2Cyl8</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle3Cyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.HardCycle3Cyl1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle3Cyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.HardCycle3Cyl2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle3Cyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.HardCycle3Cyl3</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle3Cyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.HardCycle3Cyl4</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle3Cyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.HardCycle3Cyl5</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle3Cyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.HardCycle3Cyl6</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle3Cyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.HardCycle3Cyl7</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle3Cyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle3CutPatter</group>
      <struct>ConstantWork.HardCycle3Cyl8</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle4Cyl1</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.HardCycle4Cyl1</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle4Cyl2</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.HardCycle4Cyl2</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle4Cyl3</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.HardCycle4Cyl3</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle4Cyl4</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.HardCycle4Cyl4</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle4Cyl5</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.HardCycle4Cyl5</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle4Cyl6</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.HardCycle4Cyl6</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle4Cyl7</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.HardCycle4Cyl7</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HardCycle4Cyl8</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern|Hard Cycle Cut Pattern|Cycle4CutPatter</group>
      <struct>ConstantWork.HardCycle4Cyl8</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Enable" value="0"/>
         <item name="Cut" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>RevLimitType</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-128</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Define the type of sequence to be disable when in Rev Limit</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|SequenceCutPattern</group>
      <struct>ConstantWork.RevLimitType</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <class>enum</class>
      <enum>
         <item name="Cut Spark" value="0"/>
         <item name="Cut Fuel" value="1"/>
         <item name="Cut Spark and Fuel" value="2"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Trigger_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|EGR Out | Trigger_Ovr Override</group>
      <struct>VolatileWork_BSS.Trigger_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EGR_Hyst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization</group>
      <struct>ConstantWork.EGR_Hyst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Mode</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization</group>
      <struct>ConstantWork.Mode</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="PulseWidth" value="0"/>
         <item name="DutyCycle" value="1"/>
         <item name="Both" value="2"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Trigger_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|EGR Out | Trigger_Ovr Override</group>
      <struct>VolatileWork_BSS.Trigger_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Duration_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|EGR Out | Duration_Ovr Override</group>
      <struct>VolatileWork_BSS.Duration_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Duration_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>2.147483647E9</max>
      <min>-2.147483647E9</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|EGR Out | Duration_Ovr Override</group>
      <struct>VolatileWork_BSS.Duration_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>int32</type>
   </VarDec>
   <VarDec>
      <name>FUELP_Polarity</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>const Constant_T</ctype>
      <help>Inverts the output of the actuator relative to the desired command - 0 = High True    1 = Low True</help>
      <group>BaseEngineController_A02|Foreground|Outputs|FuelPump | FUELP | FUELP Config</group>
      <struct>ConstantWork.FUELP_Polarity</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>FUELP_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|FuelPump | FUELP | FUELP Override</group>
      <struct>VolatileWork_BSS.FUELP_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ESTOP_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|Digital | ESTOP_Ovr Override</group>
      <struct>VolatileWork_BSS.ESTOP_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ESTOP_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|Digital | ESTOP_Ovr Override</group>
      <struct>VolatileWork_BSS.ESTOP_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>FUELP_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override actuator, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Outputs|FuelPump | FUELP | FUELP Override</group>
      <struct>VolatileWork_BSS.FUELP_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>ETC_CutPower_Permitted</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>2.3</format>
      <mask>0x000000FF</mask>
      <units>flag</units>
      <ctype>const Constant_T</ctype>
      <help>Cut power to ETC after ESTOP or long stalled period</help>
      <group>BaseEngineController_A02|Foreground|Outputs|HBridge</group>
      <struct>ConstantWork.ETC_CutPower_Permitted</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>ETC_CutPower_StallTime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>2.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Cut power to ETC after stalled this long</help>
      <group>BaseEngineController_A02|Foreground|Outputs</group>
      <struct>ConstantWork.ETC_CutPower_StallTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|HBridge | ETC Override</group>
      <struct>VolatileWork_BSS.ETC_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ETC_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Outputs|HBridge | ETC Override</group>
      <struct>VolatileWork_BSS.ETC_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_OC_MIN</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>H-bridge open circuit fault:  ETC duty cycle must exceed this to enable open circuit fault detection.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|HBridge</group>
      <struct>ConstantWork.ETC_OC_MIN</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_I_MIN</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mA</units>
      <ctype>const Constant_T</ctype>
      <help>H-bridge open circuit fault:  ETC current must exceed this when ETC duty cycle is &gt; ETC_OC_MIN, otherwise an open circuit fault may exist.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|HBridge</group>
      <struct>ConstantWork.ETC_I_MIN</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_Frequency</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>7.63</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Hz</units>
      <ctype>const Constant_T</ctype>
      <help>Frequency of PWM output</help>
      <group>BaseEngineController_A02|Foreground|Outputs|HBridge</group>
      <struct>ConstantWork.ETC_Frequency</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SOI_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control | SOI Override</group>
      <struct>VolatileWork_BSS.SOI_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SOI_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control | SOI Override</group>
      <struct>VolatileWork_BSS.SOI_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Mech_PW_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control | Mech_PW Override</group>
      <struct>VolatileWork_BSS.Mech_PW_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fuel_Global_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Global Override</group>
      <struct>VolatileWork_BSS.Fuel_Global_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fuel_Global_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Global Override</group>
      <struct>VolatileWork_BSS.Fuel_Global_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl8_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl8 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl8_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl8_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl8 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl8_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl7_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl7 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl7_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl7_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl7 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl7_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl6_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl6 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl6_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl6_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl6 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl6_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl5_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl5 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl5_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl5_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl5 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl5_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl4_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl4 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl4_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl4_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl4 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl4_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl3_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl3 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl3_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl3_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl3 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl3_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl2_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl2 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl2_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl2_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl2 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl2_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl1_offset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl1 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl1_offset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Fuel_Cyl1_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>mg</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Provide lock and relative offset to input signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|Fuel Inj Offsets | Fuel_Cyl1 Override</group>
      <struct>VolatileWork_BSS.Fuel_Cyl1_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Unlocked" value="0"/>
         <item name="Locked" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>InjGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>2.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms/mg</units>
      <ctype>const Constant_T</ctype>
      <help>Gain value used in the linear transformation of FPC to mechanical pulsewidth.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization</group>
      <struct>ConstantWork.InjGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InjOffset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>3.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms</units>
      <ctype>const Constant_T</ctype>
      <help>Offset value used in the linear transformation of FPC to mechanical pulsewidth.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization</group>
      <struct>ConstantWork.InjOffset</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>GaugeFuelPress</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>const Constant_T</ctype>
      <help>Fuel pressure of fuel rail.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization</group>
      <struct>ConstantWork.GaugeFuelPress</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Mech_PW_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control | Mech_PW Override</group>
      <struct>VolatileWork_BSS.Mech_PW_new</struct>
      <class>array</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <col_len>8</col_len>
      <row_len>1</row_len>
   </VarDec>
   <VarDec>
      <name>InjectorMaxDuration</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum duration for an injector pulse.  Must be a multiple of 5ms</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control</group>
      <struct>ConstantWork.InjectorMaxDuration</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Elec_PW_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control | Elec_PW Override</group>
      <struct>VolatileWork_BSS.Elec_PW_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Elec_PW_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control | Elec_PW Override</group>
      <struct>VolatileWork_BSS.Elec_PW_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MakeUp_EOI_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control | MakeUp_EOI Override</group>
      <struct>VolatileWork_BSS.MakeUp_EOI_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MakeUp_EOI_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control | MakeUp_EOI Override</group>
      <struct>VolatileWork_BSS.MakeUp_EOI_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MinMakeUpPW</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum change in injector pulse width that will trigger a make-up pulse.</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control</group>
      <struct>ConstantWork.MinMakeUpPW</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InjEnable_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control | InjEnable Override</group>
      <struct>VolatileWork_BSS.InjEnable_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>InjEnable_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Injector Control | InjEnable Override</group>
      <struct>VolatileWork.InjEnable_new</struct>
      <class>array</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <col_len>8</col_len>
      <row_len>1</row_len>
   </VarDec>
   <VarDec>
      <name>OILP_Polarity</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>const Constant_T</ctype>
      <help>Inverts the output of the actuator relative to the desired command - 0 = High True    1 = Low True</help>
      <group>BaseEngineController_A02|Foreground|Outputs|OilPump | OILP | OILP Config</group>
      <struct>ConstantWork.OILP_Polarity</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>OILP_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|OilPump | OILP | OILP Override</group>
      <struct>VolatileWork_BSS.OILP_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>OILP_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override actuator, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Outputs|OilPump | OILP | OILP Override</group>
      <struct>VolatileWork_BSS.OILP_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Oxygen_Heater_Polarity</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>const Constant_T</ctype>
      <help>Inverts the output of the actuator relative to the desired command - 0 = High True    1 = Low True</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Oxygen Heater | O2_Heater | O2_Heater Config</group>
      <struct>ConstantWork.Oxygen_Heater_Polarity</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>Oxygen_Heater_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Outputs|Oxygen Heater | O2_Heater | Oxygen_Heater Override</group>
      <struct>VolatileWork_BSS.Oxygen_Heater_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Oxygen_Heater_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <units>bool</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override actuator, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Outputs|Oxygen Heater | O2_Heater | Oxygen_Heater Override</group>
      <struct>VolatileWork_BSS.Oxygen_Heater_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>APP</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>VolatileWork_BSS.APP</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PostO2DelagFiltConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>First-order filter time constant of the post-catalyst O2 signal.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|O2 De-lag</group>
      <struct>ConstantWork.PostO2DelagFiltConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelPres_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelPres | FuelPres Override</group>
      <struct>VolatileWork_BSS.FuelPres_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelPresFilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelPres | FuelPres Config</group>
      <struct>ConstantWork.FuelPresFilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelPresGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa Gauge/ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Scaling from A/D counts to engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelPres | FuelPres Config</group>
      <struct>ConstantWork.FuelPresGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelPresOfst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa Gauge</units>
      <ctype>const Constant_T</ctype>
      <help>Offset after gain in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelPres | FuelPres Config</group>
      <struct>ConstantWork.FuelPresOfst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelPresDfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa Gauge</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelPres | FuelPres Config</group>
      <struct>ConstantWork.FuelPresDfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelPres_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa Gauge</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelPres | FuelPres Override</group>
      <struct>VolatileWork_BSS.FuelPres_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAPTime_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAPTime | MAPTime Override</group>
      <struct>VolatileWork_BSS.MAPTime_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MAPTimeFilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAPTime | MAPTime Config</group>
      <struct>ConstantWork.MAPTimeFilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAPTime_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kPa</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAPTime | MAPTime Override</group>
      <struct>VolatileWork_BSS.MAPTime_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Vehicle_Speed_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|112 | Vehicle_Speed_Ovr Override</group>
      <struct>VolatileWork_BSS.Vehicle_Speed_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Vehicle_Speed_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|112 | Vehicle_Speed_Ovr Override</group>
      <struct>VolatileWork_BSS.Vehicle_Speed_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Status1_Age_Count_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Status1_Age_Count_Ovr Override</group>
      <struct>VolatileWork_BSS.Status1_Age_Count_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Status1_Age_Count_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Status1_Age_Count_Ovr Override</group>
      <struct>VolatileWork_BSS.Status1_Age_Count_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>Est_Absolute_Torque_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Est_Absolute_Torque_Ovr Override</group>
      <struct>VolatileWork_BSS.Est_Absolute_Torque_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Est_Absolute_Torque_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Est_Absolute_Torque_Ovr Override</group>
      <struct>VolatileWork_BSS.Est_Absolute_Torque_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Control_Mode_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Control_Mode_Ovr Override</group>
      <struct>VolatileWork_BSS.Control_Mode_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Control_Mode_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Control_Mode_Ovr Override</group>
      <struct>VolatileWork_BSS.Control_Mode_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MotoringTq_Curve_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | MotoringTq_Curve_Ovr Override</group>
      <struct>VolatileWork_BSS.MotoringTq_Curve_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MotoringTq_Curve_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | MotoringTq_Curve_Ovr Override</group>
      <struct>VolatileWork_BSS.MotoringTq_Curve_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>GeneratingTq_Curve_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | GeneratingTq_Curve_Ovr Override</group>
      <struct>VolatileWork_BSS.GeneratingTq_Curve_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>GeneratingTq_Curve_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | GeneratingTq_Curve_Ovr Override</group>
      <struct>VolatileWork_BSS.GeneratingTq_Curve_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Est_Relative_Torque_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Est_Relative_Torque_Ovr Override</group>
      <struct>VolatileWork_BSS.Est_Relative_Torque_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Est_Relative_Torque_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Est_Relative_Torque_Ovr Override</group>
      <struct>VolatileWork_BSS.Est_Relative_Torque_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Estimating_VBATT_Lv_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Estimating_VBATT_Lv_Ovr Override</group>
      <struct>VolatileWork_BSS.Estimating_VBATT_Lv_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Estimating_VBATT_Lv_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Estimating_VBATT_Lv_Ovr Override</group>
      <struct>VolatileWork_BSS.Estimating_VBATT_Lv_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Motor_Temp_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Motor_Temp_Ovr Override</group>
      <struct>VolatileWork_BSS.Motor_Temp_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Motor_Temp_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Motor_Temp_Ovr Override</group>
      <struct>VolatileWork_BSS.Motor_Temp_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Drive_Temp_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Drive_Temp_Ovr Override</group>
      <struct>VolatileWork_BSS.Drive_Temp_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Drive_Temp_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Drive_Temp_Ovr Override</group>
      <struct>VolatileWork_BSS.Drive_Temp_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Status3_Age_Count_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Status3_Age_Count_Ovr Override</group>
      <struct>VolatileWork_BSS.Status3_Age_Count_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Status3_Age_Count_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Status3_Age_Count_Ovr Override</group>
      <struct>VolatileWork_BSS.Status3_Age_Count_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>AD_Input1_En_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | AD_Input1_En_Ovr Override</group>
      <struct>VolatileWork_BSS.AD_Input1_En_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>AD_Input1_En_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | AD_Input1_En_Ovr Override</group>
      <struct>VolatileWork_BSS.AD_Input1_En_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>XDRP_State_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | XDRP_State_Ovr Override</group>
      <struct>VolatileWork_BSS.XDRP_State_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>XDRP_State_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | XDRP_State_Ovr Override</group>
      <struct>VolatileWork_BSS.XDRP_State_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Motor_Speed_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Motor_Speed_Ovr Override</group>
      <struct>VolatileWork_BSS.Motor_Speed_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Motor_Speed_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Motor_Speed_Ovr Override</group>
      <struct>VolatileWork_BSS.Motor_Speed_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PWMOutput_State_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | PWMOutput_State_Ovr Override</group>
      <struct>VolatileWork_BSS.PWMOutput_State_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>PWMOutput_State_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | PWMOutput_State_Ovr Override</group>
      <struct>VolatileWork_BSS.PWMOutput_State_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AD_Input2_En_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | AD_Input2_En_Ovr Override</group>
      <struct>VolatileWork_BSS.AD_Input2_En_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>AD_Input2_En_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | AD_Input2_En_Ovr Override</group>
      <struct>VolatileWork_BSS.AD_Input2_En_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Bus_HVIL_Status_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Bus_HVIL_Status_Ovr Override</group>
      <struct>VolatileWork_BSS.Bus_HVIL_Status_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Bus_HVIL_Status_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Bus_HVIL_Status_Ovr Override</group>
      <struct>VolatileWork_BSS.Bus_HVIL_Status_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ThreePhase_HVIL_Status_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | ThreePhase_HVIL_Status_Ovr Override</group>
      <struct>VolatileWork_BSS.ThreePhase_HVIL_Status_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ThreePhase_HVIL_Status_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | ThreePhase_HVIL_Status_Ovr Override</group>
      <struct>VolatileWork_BSS.ThreePhase_HVIL_Status_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>DPos_Sens1_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | DPos_Sens1_Ovr Override</group>
      <struct>VolatileWork_BSS.DPos_Sens1_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>DPos_Sens1_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | DPos_Sens1_Ovr Override</group>
      <struct>VolatileWork_BSS.DPos_Sens1_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>DigPos_Sens2_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | DigPos_Sens2_Ovr Override</group>
      <struct>VolatileWork_BSS.DigPos_Sens2_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>DigPos_Sens2_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | DigPos_Sens2_Ovr Override</group>
      <struct>VolatileWork_BSS.DigPos_Sens2_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>DigPos_Sens3_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | DigPos_Sens3_Ovr Override</group>
      <struct>VolatileWork_BSS.DigPos_Sens3_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>DigPos_Sens3_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | DigPos_Sens3_Ovr Override</group>
      <struct>VolatileWork_BSS.DigPos_Sens3_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>DigPos_Sens4_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | DigPos_Sens4_Ovr Override</group>
      <struct>VolatileWork_BSS.DigPos_Sens4_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>DigPos_Sens4_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | DigPos_Sens4_Ovr Override</group>
      <struct>VolatileWork_BSS.DigPos_Sens4_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>DigPos_Sens5_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | DigPos_Sens5_Ovr Override</group>
      <struct>VolatileWork_BSS.DigPos_Sens5_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>DigPos_Sens5_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | DigPos_Sens5_Ovr Override</group>
      <struct>VolatileWork_BSS.DigPos_Sens5_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CtrlBoard_Temp_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | CtrlBoard_Temp_Ovr Override</group>
      <struct>VolatileWork_BSS.CtrlBoard_Temp_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>CtrlBoard_Temp_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | CtrlBoard_Temp_Ovr Override</group>
      <struct>VolatileWork_BSS.CtrlBoard_Temp_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>HVBus_Voltage_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | HVBus_Voltage_Ovr Override</group>
      <struct>VolatileWork_BSS.HVBus_Voltage_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>HVBus_Voltage_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | HVBus_Voltage_Ovr Override</group>
      <struct>VolatileWork_BSS.HVBus_Voltage_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Keyed_Voltage_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Keyed_Voltage_Ovr Override</group>
      <struct>VolatileWork_BSS.Keyed_Voltage_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Keyed_Voltage_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Keyed_Voltage_Ovr Override</group>
      <struct>VolatileWork_BSS.Keyed_Voltage_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AD_Input1_Vin_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | AD_Input1_Vin_Ovr Override</group>
      <struct>VolatileWork_BSS.AD_Input1_Vin_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>AD_Input1_Vin_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | AD_Input1_Vin_Ovr Override</group>
      <struct>VolatileWork_BSS.AD_Input1_Vin_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AD_Input2_Vin_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | AD_Input2_Vin_Ovr Override</group>
      <struct>VolatileWork_BSS.AD_Input2_Vin_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>AD_Input2_Vin_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | AD_Input2_Vin_Ovr Override</group>
      <struct>VolatileWork_BSS.AD_Input2_Vin_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Status4_Age_Count_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Status4_Age_Count_Ovr Override</group>
      <struct>VolatileWork_BSS.Status4_Age_Count_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Status4_Age_Count_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Status4_Age_Count_Ovr Override</group>
      <struct>VolatileWork_BSS.Status4_Age_Count_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>An_PosSense1_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | An_PosSense1_Ovr Override</group>
      <struct>VolatileWork_BSS.An_PosSense1_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>An_PosSense1_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | An_PosSense1_Ovr Override</group>
      <struct>VolatileWork_BSS.An_PosSense1_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>An_PosSense2_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | An_PosSense2_Ovr Override</group>
      <struct>VolatileWork_BSS.An_PosSense2_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>An_PosSense2_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | An_PosSense2_Ovr Override</group>
      <struct>VolatileWork_BSS.An_PosSense2_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>XDRP_Internal_Meas_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | XDRP_Internal_Meas_Ovr Override</group>
      <struct>VolatileWork_BSS.XDRP_Internal_Meas_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>XDRP_Internal_Meas_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | XDRP_Internal_Meas_Ovr Override</group>
      <struct>VolatileWork_BSS.XDRP_Internal_Meas_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Status2_Age_Count_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Status2_Age_Count_Ovr Override</group>
      <struct>VolatileWork_BSS.Status2_Age_Count_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Status2_Age_Count_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Status2_Age_Count_Ovr Override</group>
      <struct>VolatileWork_BSS.Status2_Age_Count_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>Run_Enable_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Run_Enable_Ovr Override</group>
      <struct>VolatileWork_BSS.Run_Enable_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Run_Enable_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Run_Enable_Ovr Override</group>
      <struct>VolatileWork_BSS.Run_Enable_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>NegativeTq_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | NegativeTq_Ovr Override</group>
      <struct>VolatileWork_BSS.NegativeTq_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>NegativeTq_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | NegativeTq_Ovr Override</group>
      <struct>VolatileWork_BSS.NegativeTq_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Generating_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Generating_Ovr Override</group>
      <struct>VolatileWork_BSS.Generating_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Generating_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Generating_Ovr Override</group>
      <struct>VolatileWork_BSS.Generating_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Phoenix_Fault_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Phoenix_Fault_Ovr Override</group>
      <struct>VolatileWork_BSS.Phoenix_Fault_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>Phoenix_Fault_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | Phoenix_Fault_Ovr Override</group>
      <struct>VolatileWork_BSS.Phoenix_Fault_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TqLimiting_Reason_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | TqLimiting_Reason_Ovr Override</group>
      <struct>VolatileWork_BSS.TqLimiting_Reason_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TqLimiting_Reason_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|Phoenix | TqLimiting_Reason_Ovr Override</group>
      <struct>VolatileWork_BSS.TqLimiting_Reason_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SensVolt_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SensVolt | SensVolt Override</group>
      <struct>VolatileWork_BSS.SensVolt_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SensVoltFilterConst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Filter time constant</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SensVolt | SensVolt Config</group>
      <struct>ConstantWork.SensVoltFilterConst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SensVoltGain</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>5.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>Volts/ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Scaling from A/D counts to engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SensVolt | SensVolt Config</group>
      <struct>ConstantWork.SensVoltGain</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SensVoltOfst</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Volts</units>
      <ctype>const Constant_T</ctype>
      <help>Offset after gain in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SensVolt | SensVolt Config</group>
      <struct>ConstantWork.SensVoltOfst</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SensVoltDfltValue</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Volts</units>
      <ctype>const Constant_T</ctype>
      <help>This is the initial default value should the sensor be in fault on key-up.  Otherwise the sensors outputs the last value prior to faulting</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SensVolt | SensVolt Config</group>
      <struct>ConstantWork.SensVoltDfltValue</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SensVolt_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Volts</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Override result of linear sensor characterization, in engineering units</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SensVolt | SensVolt Override</group>
      <struct>VolatileWork_BSS.SensVolt_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>APP2_Ovr_ovr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | APP2_Ovr Override</group>
      <struct>VolatileWork_BSS.APP2_Ovr_ovr</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Pass-Through" value="0"/>
         <item name="Override" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>APP2_Ovr_new</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | APP2_Ovr Override</group>
      <struct>VolatileWork_BSS.APP2_Ovr_new</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CylSweptVol</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>cm3</units>
      <ctype>const Constant_T</ctype>
      <help>Cylinder swept volume for a single cylinder.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>ConstantWork.CylSweptVol</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CombEventsPerRev</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0.5</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Number of conbustion events per engine revolution. For example, for a four-stroke, eight cylinder engine the value would be 4.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>ConstantWork.CombEventsPerRev</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>IndWorkMax</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>kJ</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum Indicated Work</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs|Load, Torque, Power, Work - Using APC|Calculate Power and Work</group>
      <struct>ConstantWork.IndWorkMax</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EngineState</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Engine state based on RPM.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|EngineState</group>
      <struct>VolatileWork_BSS.EngineState</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="-" value="0"/>
         <item name="Stall" value="1"/>
         <item name="Crank" value="2"/>
         <item name="Run" value="3"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TPS1_TPS2_Max_Deviation</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Percent</units>
      <ctype>const Constant_T</ctype>
      <help>Specifies the maximum allowable deviation between the two sensors</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|TPS  Sensor Arbitration</group>
      <struct>ConstantWork.TPS1_TPS2_Max_Deviation</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ONTime</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>The length of time for the Fuel Pump relay to be enabled at startup</help>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|112|ESTOP at Startup</group>
      <struct>ConstantWork.ONTime</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ESTOP</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|CAN Inputs|112</group>
      <struct>VolatileWork_BSS.ESTOP</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>MAFMax</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Hz</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|Digital | MAF | MAF Config</group>
      <struct>ConstantWork.MAFMax</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAFMin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Hz</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|Digital | MAF | MAF Config</group>
      <struct>ConstantWork.MAFMin</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PseudoRPM</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed</group>
      <struct>VolatileWork_BSS.PseudoRPM</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>EngineToEncoderOffset</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed</group>
      <struct>ConstantWork.EngineToEncoderOffset</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EncoderNumCylinders</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>8</max>
      <min>1</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Number of cylinders</help>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed | Encoder Config</group>
      <struct>ConstantWork.EncoderNumCylinders</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>EncoderTDCAngles</name>
      <access>RW RW RW RW</access>
      <gain>0.0625</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>720</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>degCA</units>
      <ctype>const Constant_T</ctype>
      <help>TDC angle of each cylinder in degrees after TDC1</help>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed | Encoder Config</group>
      <struct>ConstantWork.EncoderTDCAngles</struct>
      <class>array</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <col_len>8</col_len>
      <row_len>1</row_len>
   </VarDec>
   <VarDec>
      <name>EncoderTDCOrder</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>1</offset>
      <exp>1</exp>
      <max>127</max>
      <min>-1</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <units>cyl#</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Order of TDC angles (0 means unused)</help>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed</group>
      <struct>VolatileWork_BSS.EncoderTDCOrder</struct>
      <class>array</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>int8</type>
      <col_len>8</col_len>
      <row_len>1</row_len>
   </VarDec>
   <VarDec>
      <name>EncoderSyncEdge</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Selects which edge of a digital signal represents the synchronous edge of the tooth.  It has no meaning for a variable reluctance type sensor</help>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed | Encoder Config</group>
      <struct>ConstantWork.EncoderSyncEdge</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Rising Edge" value="0"/>
         <item name="Falling Edge" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EncoderCamSyncEdge</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Selects which edge of a digital signal represents the synchronous edge of the CAM tooth.  It has no meaning for a variable reluctance type sensor</help>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed | Encoder Config</group>
      <struct>ConstantWork.EncoderCamSyncEdge</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Rising Edge" value="0"/>
         <item name="Falling Edge" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EncoderCrankPullup</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Selects the pullup conditioning applied to the Crank Input</help>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed | Encoder Config</group>
      <struct>ConstantWork.EncoderCrankPullup</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Weak Pullup" value="0"/>
         <item name="Strong Pullup" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EncoderCamPullup</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Selects the pullup conditioning applied to the Cam Input</help>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed | Encoder Config</group>
      <struct>ConstantWork.EncoderCamPullup</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Weak Pullup" value="0"/>
         <item name="Strong Pullup" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EncoderCrankTeethAfterCam</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32766</max>
      <min>-1</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>The number of crank teeth between the synchronizing edge of the cam and the first tooth in the crank pattern.  May be -1 to disable explicit tooth counting.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed | Encoder Config</group>
      <struct>ConstantWork.EncoderCrankTeethAfterCam</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
   </VarDec>
   <VarDec>
      <name>CAMDelay</name>
      <access>RW RW RW RW</access>
      <gain>0.0625</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>720</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>degCA</units>
      <ctype>const Constant_T</ctype>
      <help>Delay between the rising edge of the actual CAM signal and the rising edge of the ideal CAM.  If it leads the ideal CAM by one tooth (60-6 system) then the delay would be 6 degCA and 714 degCA if it lagged.  Applicable if crank encoder has &gt;1 sync pts</help>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed | Encoder Config</group>
      <struct>ConstantWork.CAMDelay</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>TeethBeforeSyncAllowed</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>The number of teeth that must be observed before the encoder will allow synchronization to occur.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed | Encoder Config</group>
      <struct>ConstantWork.TeethBeforeSyncAllowed</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>TimeBeforeSyncAllowed</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>ms</units>
      <ctype>const Constant_T</ctype>
      <help>The amount of time that must be observed after initial encoder activity before the encoder will allow synchronization to occur.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|EngineSpeed | Encoder Config</group>
      <struct>ConstantWork.TimeBeforeSyncAllowed</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>EGRSenseInputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | EGRSense | EGRSense Config</group>
      <struct>ConstantWork.EGRSenseInputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGRSenseInputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>V</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | EGRSense | EGRSense Config</group>
      <struct>ConstantWork.EGRSenseInputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelSensInputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Hz</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelSens | FuelSens Config</group>
      <struct>ConstantWork.FuelSensInputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelSensInputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Hz</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelSens | FuelSens Config</group>
      <struct>ConstantWork.FuelSensInputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelPresInputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelPres | FuelPres Config</group>
      <struct>ConstantWork.FuelPresInputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelPresInputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | FuelPres | FuelPres Config</group>
      <struct>ConstantWork.FuelPresInputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAPInputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAP | MAP Config</group>
      <struct>ConstantWork.MAPInputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAPInputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAP | MAP Config</group>
      <struct>ConstantWork.MAPInputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAPTimeInputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAPTime | MAPTime Config</group>
      <struct>ConstantWork.MAPTimeInputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAPTimeInputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | MAPTime | MAPTime Config</group>
      <struct>ConstantWork.MAPTimeInputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>OilPresInputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | OilPres | OilPres Config</group>
      <struct>ConstantWork.OilPresInputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>OilPresInputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | OilPres | OilPres Config</group>
      <struct>ConstantWork.OilPresInputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SensVoltInputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SensVolt | SensVolt Config</group>
      <struct>ConstantWork.SensVoltInputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SensVoltInputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SensVolt | SensVolt Config</group>
      <struct>ConstantWork.SensVoltInputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SysVoltInputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SysVolt | SysVolt Config</group>
      <struct>ConstantWork.SysVoltInputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SysVoltInputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|LinearSensors | SysVolt | SysVolt Config</group>
      <struct>ConstantWork.SysVoltInputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2_PostCatMax</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors | O2_PostCat | O2_PostCat Config</group>
      <struct>ConstantWork.O2_PostCatMax</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2_PostCatMin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum allowable input, indicating short or open circuit</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors | O2_PostCat | O2_PostCat Config</group>
      <struct>ConstantWork.O2_PostCatMin</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS1InputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Hi limit of input signal which sets fault</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1InputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS1InputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Low limit of input signal which sets fault</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1InputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS1Adapt_Hi_Max</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC Counts</units>
      <ctype>const Constant_T</ctype>
      <help>Specifies for the maximum value of the upper adapt range.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1Adapt_Hi_Max</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS1Adapt_Low_Min</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC Counts</units>
      <ctype>const Constant_T</ctype>
      <help>Specifies for the minimum value of the lower adapt range.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1Adapt_Low_Min</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS1AdaptHiEnable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enables or disables this adapt.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1AdaptHiEnable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TPS1Adapt_Delta</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Specifies the minimum deviation amount to react to.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1Adapt_Delta</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS1AdaptLoEnable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enables or disables this adapt.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS1 | TPS1 Config</group>
      <struct>ConstantWork.TPS1AdaptLoEnable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TPS2InputHiFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Hi limit of input signal which sets fault</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2InputHiFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS2InputLoFltPos</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Low limit of input signal which sets fault</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2InputLoFltPos</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS2Adapt_Hi_Max</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC Counts</units>
      <ctype>const Constant_T</ctype>
      <help>Specifies for the maximum value of the upper adapt range.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2Adapt_Hi_Max</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS2Adapt_Low_Min</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC Counts</units>
      <ctype>const Constant_T</ctype>
      <help>Specifies for the minimum value of the lower adapt range.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2Adapt_Low_Min</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS2AdaptHiEnable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enables or disables this adapt.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2AdaptHiEnable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TPS2Adapt_Delta</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Specifies the minimum deviation amount to react to.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2Adapt_Delta</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS2AdaptLoEnable</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>1.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Enables or disables this adapt.</help>
      <group>BaseEngineController_A02|Foreground|Inputs|PotentiometerSensors | TPS2 | TPS2 Config</group>
      <struct>ConstantWork.TPS2AdaptLoEnable</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Disabled" value="0"/>
         <item name="Enabled" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>CityID_CAN_1</name>
      <access>NA NA NA RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <help>City ID for CAN bus CAN_1</help>
      <group>System | System Config | Communication Config</group>
      <struct>NonVolatileWork.CityID_CAN_1</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>CityID_CAN_2</name>
      <access>NA NA NA RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <help>City ID for CAN bus CAN_2</help>
      <group>System | System Config | Communication Config</group>
      <struct>NonVolatileWork.CityID_CAN_2</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
   </VarDec>
   <VarDec>
      <name>FGND_RTI_Period</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <units>us</units>
      <ctype>const Constant_T</ctype>
      <help>Base rate of the FGND_RTI_PERIODIC event</help>
      <group>System | System Config | Trigger Config</group>
      <struct>ConstantWork.FGND_RTI_Period</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>BGND_BASE_Multiple</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Base rate of the BGND_BASE_PERIODIC event, as a multiple of FGND_RTI_Period</help>
      <group>System | System Config | Trigger Config</group>
      <struct>ConstantWork.BGND_BASE_Multiple</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>SpkEnergy09IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Spark Coil Characterization</group>
      <struct>ConstantWork.SpkEnergy09IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>SpkEnergy09In</input>
      <index>SpkEnergy09Idx</index>
   </VarDec>
   <VarDec>
      <name>SpkEnergy09Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Spark Coil Characterization</group>
      <struct>VolatileWork_BSS.SpkEnergy09Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>SpkEnergy09In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Spark Coil Characterization</group>
      <struct>VolatileWork_BSS.SpkEnergy09In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CoilDwellMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms</units>
      <ctype>const Constant_T</ctype>
      <help>Required spark dwell to give the desired spark energy.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Spark Coil Characterization</group>
      <struct>ConstantWork.CoilDwellMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>CoilDwell</output>
      <col_prelookup>SysVolt09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>SpkEnergy09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>CoilDwell</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Required spark dwell to give the desired spark energy.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Spark Coil Characterization</group>
      <struct>VolatileWork_BSS.CoilDwell</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MinGovClntRPMSetPtTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>RPM setpoint based on ECT.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Base RPM Set Pt</group>
      <struct>ConstantWork.MinGovClntRPMSetPtTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>5</len>
      <output>MinGovClntRPMSetPt</output>
      <prelookup>ECT05IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>MinGovClntRPMSetPt</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>RPM setpoint based on ECT.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Base RPM Set Pt</group>
      <struct>VolatileWork_BSS.MinGovClntRPMSetPt</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovSpeedErrorIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.AirMinGovSpeedErrorIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>AirMinGovSpeedErrorIn</input>
      <index>AirMinGovSpeedErrorIdx</index>
   </VarDec>
   <VarDec>
      <name>AirMinGovSpeedErrorIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.AirMinGovSpeedErrorIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovSpeedErrorIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.AirMinGovSpeedErrorIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovPGainErrorMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PID (Tunable &amp; Scheduled)|PID Gain Select1</group>
      <struct>ConstantWork.AirMinGovPGainErrorMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>AirMinGovPGainErrorMult</output>
      <prelookup>AirMinGovSpeedErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>AirMinGovPGainErrorMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PID (Tunable &amp; Scheduled)|PID Gain Select1</group>
      <struct>VolatileWork_BSS.AirMinGovPGainErrorMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovDGainErrorMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PID (Tunable &amp; Scheduled)|PID Gain Select1</group>
      <struct>ConstantWork.AirMinGovDGainErrorMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>AirMinGovDGainErrorMult</output>
      <prelookup>AirMinGovSpeedErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>AirMinGovDGainErrorMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PID (Tunable &amp; Scheduled)|PID Gain Select1</group>
      <struct>VolatileWork_BSS.AirMinGovDGainErrorMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SpkMinGovSpeedErrorIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PD (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.SpkMinGovSpeedErrorIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>SpkMinGovSpeedErrorIn</input>
      <index>SpkMinGovSpeedErrorIdx</index>
   </VarDec>
   <VarDec>
      <name>SpkMinGovSpeedErrorIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PD (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.SpkMinGovSpeedErrorIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>SpkMinGovSpeedErrorIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PD (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.SpkMinGovSpeedErrorIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SpkMinGovPGainErrorMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PD (Tunable &amp; Scheduled)|PID Gain Select</group>
      <struct>ConstantWork.SpkMinGovPGainErrorMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>SpkMinGovPGainErrorMult</output>
      <prelookup>SpkMinGovSpeedErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>SpkMinGovPGainErrorMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PD (Tunable &amp; Scheduled)|PID Gain Select</group>
      <struct>VolatileWork_BSS.SpkMinGovPGainErrorMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SpkMinGovDGainErrorMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PD (Tunable &amp; Scheduled)|PID Gain Select</group>
      <struct>ConstantWork.SpkMinGovDGainErrorMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>SpkMinGovDGainErrorMult</output>
      <prelookup>SpkMinGovSpeedErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>SpkMinGovDGainErrorMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PD (Tunable &amp; Scheduled)|PID Gain Select</group>
      <struct>VolatileWork_BSS.SpkMinGovDGainErrorMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BaseAirflowOfstTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>NonVolatile_T</ctype>
      <help>Base air position in based on ECT.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|AiflowOffset</group>
      <struct>NonVolatileWork.BaseAirflowOfstTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>5</len>
      <output>BaseAirflowOfst</output>
      <prelookup>ECT05IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>BaseAirflowOfst</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Base air position in based on ECT.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|AiflowOffset</group>
      <struct>VolatileWork_BSS.BaseAirflowOfst</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>AirMinGovIGainErrorMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PID (Tunable &amp; Scheduled)|PID Gain Select1</group>
      <struct>ConstantWork.AirMinGovIGainErrorMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>AirMinGovIGainErrorMult</output>
      <prelookup>AirMinGovSpeedErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>AirMinGovIGainErrorMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MinGovernor|Universal PID (Tunable &amp; Scheduled)|PID Gain Select1</group>
      <struct>VolatileWork_BSS.AirMinGovIGainErrorMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovSpeedErrorIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.MaxGovSpeedErrorIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>MaxGovSpeedErrorIn</input>
      <index>MaxGovSpeedErrorIdx</index>
   </VarDec>
   <VarDec>
      <name>MaxGovSpeedErrorIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.MaxGovSpeedErrorIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>MaxGovSpeedErrorIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.MaxGovSpeedErrorIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovPGainErrorMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.MaxGovPGainErrorMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>MaxGovPGainErrorMult</output>
      <prelookup>MaxGovSpeedErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>MaxGovPGainErrorMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.MaxGovPGainErrorMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovDGainErrorMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.MaxGovDGainErrorMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>MaxGovDGainErrorMult</output>
      <prelookup>MaxGovSpeedErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>MaxGovDGainErrorMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.MaxGovDGainErrorMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovPreloadITermTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Preload for Max Gov PID ITerm based on engine acceleration rate upon entry into max gov.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|I-Term Preload</group>
      <struct>ConstantWork.MaxGovPreloadITermTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>17</len>
      <output>MaxGovPreloadITerm</output>
      <prelookup>RPMAccel17IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>MaxGovPreloadITerm</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Preload for Max Gov PID ITerm based on engine acceleration rate upon entry into max gov.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|I-Term Preload</group>
      <struct>VolatileWork_BSS.MaxGovPreloadITerm</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxGovIGainErrorMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.MaxGovIGainErrorMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>MaxGovIGainErrorMult</output>
      <prelookup>MaxGovSpeedErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>MaxGovIGainErrorMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|MaxGovernor|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.MaxGovIGainErrorMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SparkAdvMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>const Constant_T</ctype>
      <help>Base spark advance map.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager</group>
      <struct>ConstantWork.SparkAdvMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>SparkAdv</output>
      <col_prelookup>RPM17IdxArr</col_prelookup>
      <col_len>17</col_len>
      <row_prelookup>IndLoadNom17IdxArr</row_prelookup>
      <row_len>17</row_len>
   </VarDec>
   <VarDec>
      <name>SparkAdv</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Base spark advance map.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager</group>
      <struct>VolatileWork_BSS.SparkAdv</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECT_SpkOfstTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Temp Comp Offset</group>
      <struct>ConstantWork.ECT_SpkOfstTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>5</len>
      <output>ECT_SpkOfst</output>
      <prelookup>ECT05IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>ECT_SpkOfst</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Temp Comp Offset</group>
      <struct>VolatileWork_BSS.ECT_SpkOfst</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECT_SpkOfstMultMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Multiplier on ECT spark offset table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Temp Comp Offset</group>
      <struct>ConstantWork.ECT_SpkOfstMultMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>ECT_SpkOfstMult</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>ECT_SpkOfstMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Multiplier on ECT spark offset table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Temp Comp Offset</group>
      <struct>VolatileWork_BSS.ECT_SpkOfstMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IAT_SpkOfstTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Temp Comp Offset</group>
      <struct>ConstantWork.IAT_SpkOfstTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>5</len>
      <output>IAT_SpkOfst</output>
      <prelookup>IAT05IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>IAT_SpkOfst</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Temp Comp Offset</group>
      <struct>VolatileWork_BSS.IAT_SpkOfst</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IAT_SpkOfstMultMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Multiplier on IAT2 spark offset table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Temp Comp Offset</group>
      <struct>ConstantWork.IAT_SpkOfstMultMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>IAT_SpkOfstMult</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>IAT_SpkOfstMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Multiplier on IAT2 spark offset table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Temp Comp Offset</group>
      <struct>VolatileWork_BSS.IAT_SpkOfstMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>DesEqRatio09IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>F/A</units>
      <ctype>const Constant_T</ctype>
      <help>Desired Equivalence Ratio breakpoints</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Desired Eq Ratio Offset</group>
      <struct>ConstantWork.DesEqRatio09IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>DesEqRatio09In</input>
      <index>DesEqRatio09Idx</index>
   </VarDec>
   <VarDec>
      <name>DesEqRatio09Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Desired Equivalence Ratio breakpoints</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Desired Eq Ratio Offset</group>
      <struct>VolatileWork_BSS.DesEqRatio09Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>DesEqRatio09In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>F/A</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Desired Equivalence Ratio breakpoints</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Desired Eq Ratio Offset</group>
      <struct>VolatileWork_BSS.DesEqRatio09In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EqRatio_SpkOfstTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degCA</units>
      <ctype>const Constant_T</ctype>
      <help>Spark offset based on desired equivalence ratio (also muliplied by a speed load factor)</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Desired Eq Ratio Offset</group>
      <struct>ConstantWork.EqRatio_SpkOfstTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>EqRatio_SpkOfst</output>
      <prelookup>DesEqRatio09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>EqRatio_SpkOfst</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degCA</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Spark offset based on desired equivalence ratio (also muliplied by a speed load factor)</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Desired Eq Ratio Offset</group>
      <struct>VolatileWork_BSS.EqRatio_SpkOfst</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EqRatio_SpkOfsMultMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Speed and Load Multiplier to the Equivalence Ratio Spark Offset table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Desired Eq Ratio Offset</group>
      <struct>ConstantWork.EqRatio_SpkOfsMultMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>EqRatio_SpkOfsMult</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>EqRatio_SpkOfsMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Speed and Load Multiplier to the Equivalence Ratio Spark Offset table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Desired Eq Ratio Offset</group>
      <struct>VolatileWork_BSS.EqRatio_SpkOfsMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EthanolPreLookupIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Ethanol Spark Offset</group>
      <struct>ConstantWork.EthanolPreLookupIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>11</len>
      <input>EthanolPreLookupIn</input>
      <index>EthanolPreLookupIdx</index>
   </VarDec>
   <VarDec>
      <name>EthanolPreLookupIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Ethanol Spark Offset</group>
      <struct>VolatileWork_BSS.EthanolPreLookupIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>EthanolPreLookupIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Ethanol Spark Offset</group>
      <struct>VolatileWork_BSS.EthanolPreLookupIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EthanolInterpolationTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Ethanol Spark Offset</group>
      <struct>ConstantWork.EthanolInterpolationTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>11</len>
      <output>EthanolInterpolation</output>
      <prelookup>EthanolPreLookupIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>EthanolInterpolation</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Ethanol Spark Offset</group>
      <struct>VolatileWork_BSS.EthanolInterpolation</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>Ethanol_SpkOfstMultMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Multiplier on ECT spark offset table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Ethanol Spark Offset</group>
      <struct>ConstantWork.Ethanol_SpkOfstMultMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>Ethanol_SpkOfstMult</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>Ethanol_SpkOfstMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Multiplier on ECT spark offset table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|Ethanol Spark Offset</group>
      <struct>VolatileWork_BSS.Ethanol_SpkOfstMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGRLookupIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|EGR Spark Offset</group>
      <struct>ConstantWork.EGRLookupIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>11</len>
      <input>EGRLookupIn</input>
      <index>EGRLookupIdx</index>
   </VarDec>
   <VarDec>
      <name>EGRLookupIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|EGR Spark Offset</group>
      <struct>VolatileWork_BSS.EGRLookupIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>EGRLookupIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|EGR Spark Offset</group>
      <struct>VolatileWork_BSS.EGRLookupIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGRInterpolationTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|EGR Spark Offset</group>
      <struct>ConstantWork.EGRInterpolationTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>11</len>
      <output>EGRInterpolation</output>
      <prelookup>EGRLookupIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>EGRInterpolation</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|EGR Spark Offset</group>
      <struct>VolatileWork_BSS.EGRInterpolation</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGR_SpkOfstMultMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Multiplier on ECT spark offset table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|EGR Spark Offset</group>
      <struct>ConstantWork.EGR_SpkOfstMultMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>EGR_SpkOfstMult</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>EGR_SpkOfstMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Multiplier on ECT spark offset table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|EGR Spark Offset</group>
      <struct>VolatileWork_BSS.EGR_SpkOfstMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxSparkLimitTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable spark advance.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|SparkAdvanceLimiter</group>
      <struct>ConstantWork.MaxSparkLimitTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>MaxSparkLimit</output>
      <prelookup>IndLoadNom09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>MaxSparkLimit</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Maximum allowable spark advance.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager|SparkAdvanceLimiter</group>
      <struct>VolatileWork_BSS.MaxSparkLimit</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BaseSparkEnergyMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mJ</units>
      <ctype>const Constant_T</ctype>
      <help>Spark energy - Run state</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager</group>
      <struct>ConstantWork.BaseSparkEnergyMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>BaseSparkEnergy</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>BaseSparkEnergy</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mJ</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Spark energy - Run state</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Spark Manager</group>
      <struct>VolatileWork_BSS.BaseSparkEnergy</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECTIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Look up table to allownon-linear characterization of sensors</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | ECT</group>
      <struct>ConstantWork.ECTIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>39</len>
      <input>ECTADC</input>
      <index>ECTIdx</index>
   </VarDec>
   <VarDec>
      <name>ECTIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Look up table to allownon-linear characterization of sensors</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | ECT</group>
      <struct>VolatileWork_BSS.ECTIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>ECTTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>C</units>
      <ctype>const Constant_T</ctype>
      <help>Look up table to allownon-linear characterization of sensors</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | ECT</group>
      <struct>ConstantWork.ECTTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>39</len>
      <output>ECTRaw</output>
      <prelookup>ECTIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>IATIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Look up table to allownon-linear characterization of sensors</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | IAT</group>
      <struct>ConstantWork.IATIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>39</len>
      <input>IATADC</input>
      <index>IATIdx</index>
   </VarDec>
   <VarDec>
      <name>IATIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Look up table to allownon-linear characterization of sensors</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | IAT</group>
      <struct>VolatileWork_BSS.IATIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>IATTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>C</units>
      <ctype>const Constant_T</ctype>
      <help>Look up table to allownon-linear characterization of sensors</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors|Temp Sensors | IAT</group>
      <struct>ConstantWork.IATTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>39</len>
      <output>IATRaw</output>
      <prelookup>IATIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>EST_InitialPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>First pin selection for Spark Sequence.  Goes up from here depending on the Sequence Type and number of cylinders</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.EST_InitialPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EST_SequenceType</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Select the type of spark sequence.  The number of pins used will depend on this selection</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.EST_SequenceType</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Standard (Coil per cylinder)" value="0"/>
         <item name="Banked (Fire on both phases until CAM sync)" value="1"/>
         <item name="Batch (Wasted spark)" value="2"/>
         <item name="Muxed (Distributed)" value="3"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EST_OpenThreshold</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1023</max>
      <min>0</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>ADC counts for the diagnostic inputs, above which the driver is considered an open-circuit</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.EST_OpenThreshold</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>TQ_PrelookupIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>ConstantWork.TQ_PrelookupIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>7</len>
      <input>TQ_PrelookupIn</input>
      <index>TQ_PrelookupIdx</index>
   </VarDec>
   <VarDec>
      <name>TQ_PrelookupIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>VolatileWork_BSS.TQ_PrelookupIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>TQ_PrelookupIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>VolatileWork_BSS.TQ_PrelookupIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TQ_InterpolationTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>us</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>ConstantWork.TQ_InterpolationTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>7</len>
      <output>TQ_Interpolation</output>
      <prelookup>TQ_PrelookupIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>TQ_Interpolation</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>us</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>VolatileWork_BSS.TQ_Interpolation</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>SysVolt09IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|SysVolt Index</group>
      <struct>ConstantWork.SysVolt09IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>SysVolt09In</input>
      <index>SysVolt09Idx</index>
   </VarDec>
   <VarDec>
      <name>SysVolt09Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|SysVolt Index</group>
      <struct>VolatileWork_BSS.SysVolt09Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>SysVolt09In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|SysVolt Index</group>
      <struct>VolatileWork_BSS.SysVolt09In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CrankECT05IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degC</units>
      <ctype>const Constant_T</ctype>
      <help>ECT pre-lookup for crank maps.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>ConstantWork.CrankECT05IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>5</len>
      <input>ECT</input>
      <index>CrankECT05Idx</index>
   </VarDec>
   <VarDec>
      <name>CrankECT05Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>ECT pre-lookup for crank maps.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>VolatileWork_BSS.CrankECT05Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>CrankRPM05IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <help>RPM pre-lookup for crank maps</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>ConstantWork.CrankRPM05IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>5</len>
      <input>CrankRPM05In</input>
      <index>CrankRPM05Idx</index>
   </VarDec>
   <VarDec>
      <name>CrankRPM05Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>RPM pre-lookup for crank maps</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>VolatileWork_BSS.CrankRPM05Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>CrankRPM05In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>RPM pre-lookup for crank maps</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>VolatileWork_BSS.CrankRPM05In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CrankFPCMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg/cyl</units>
      <ctype>const Constant_T</ctype>
      <help>Liquid fuel supplied during crank.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank|CrankFueling</group>
      <struct>ConstantWork.CrankFPCMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>CrankFPC</output>
      <col_prelookup>CrankRPM05IdxArr</col_prelookup>
      <col_len>5</col_len>
      <row_prelookup>CrankECT05IdxArr</row_prelookup>
      <row_len>5</row_len>
   </VarDec>
   <VarDec>
      <name>CrankFPC</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mg/cyl</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Liquid fuel supplied during crank.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank|CrankFueling</group>
      <struct>VolatileWork_BSS.CrankFPC</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CrankSparkTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>-100</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>const Constant_T</ctype>
      <help>Spark adv during cranking.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>ConstantWork.CrankSparkTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>5</len>
      <output>CrankSpark</output>
      <prelookup>CrankRPM05IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>CrankSpark</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Spark adv during cranking.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>VolatileWork_BSS.CrankSpark</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CrankSpkEnergyMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>MJ</units>
      <ctype>const Constant_T</ctype>
      <help>Spark energy during cranking.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>ConstantWork.CrankSpkEnergyMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>CrankSpkEnergy</output>
      <col_prelookup>CrankRPM05IdxArr</col_prelookup>
      <col_len>5</col_len>
      <row_prelookup>CrankECT05IdxArr</row_prelookup>
      <row_len>5</row_len>
   </VarDec>
   <VarDec>
      <name>CrankSpkEnergy</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>MJ</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Spark energy during cranking.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>VolatileWork_BSS.CrankSpkEnergy</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CrankSOITbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>920</max>
      <min>-920</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>const Constant_T</ctype>
      <help>Start of injection during cranking.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>ConstantWork.CrankSOITbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>5</len>
      <output>CrankSOI</output>
      <prelookup>CrankRPM05IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>CrankSOI</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Start of injection during cranking.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>VolatileWork_BSS.CrankSOI</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CrankMakeUpEOITbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>920</max>
      <min>-920</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>const Constant_T</ctype>
      <help>Start of injection during cranking.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>ConstantWork.CrankMakeUpEOITbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>5</len>
      <output>CrankMakeUpEOI</output>
      <prelookup>CrankRPM05IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>CrankMakeUpEOI</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Start of injection during cranking.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>VolatileWork_BSS.CrankMakeUpEOI</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>CrankAirflowSetPtTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>ETC setpoint during cranking.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>ConstantWork.CrankAirflowSetPtTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>5</len>
      <output>CrankAirflowSetPt</output>
      <prelookup>CrankECT05IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>CrankAirflowSetPt</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>ETC setpoint during cranking.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Crank</group>
      <struct>VolatileWork_BSS.CrankAirflowSetPt</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TPS09IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|TPS Indexes</group>
      <struct>ConstantWork.TPS09IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>TPS09In</input>
      <index>TPS09Idx</index>
   </VarDec>
   <VarDec>
      <name>TPS09Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|TPS Indexes</group>
      <struct>VolatileWork_BSS.TPS09Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>TPS09In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|TPS Indexes</group>
      <struct>VolatileWork_BSS.TPS09In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>APP17IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Base TPS Request</group>
      <struct>ConstantWork.APP17IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>17</len>
      <input>APP17In</input>
      <index>APP17Idx</index>
   </VarDec>
   <VarDec>
      <name>APP17Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Base TPS Request</group>
      <struct>VolatileWork_BSS.APP17Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>APP17In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Base TPS Request</group>
      <struct>VolatileWork_BSS.APP17In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCRequestTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Converts pedal position into a desired ETC position.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Base TPS Request</group>
      <struct>ConstantWork.ETCRequestTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>17</len>
      <output>ETCRequest</output>
      <prelookup>APP17IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>ETCRequest</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Converts pedal position into a desired ETC position.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Base TPS Request</group>
      <struct>VolatileWork_BSS.ETCRequest</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCReqFallRateTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%/sec</units>
      <ctype>const Constant_T</ctype>
      <help>Limits fall rate of ETCRequestFiltered.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Base TPS Request</group>
      <struct>ConstantWork.ETCReqFallRateTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>ETCReqFallRate</output>
      <prelookup>TPS09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>ETCReqFallRate</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%/sec</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Limits fall rate of ETCRequestFiltered.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Base TPS Request</group>
      <struct>VolatileWork_BSS.ETCReqFallRate</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCReqRiseRateTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%/sec</units>
      <ctype>const Constant_T</ctype>
      <help>Limits rise rate of ETCRequestFiltered.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Base TPS Request</group>
      <struct>ConstantWork.ETCReqRiseRateTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>ETCReqRiseRate</output>
      <prelookup>TPS09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>ETCReqRiseRate</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%/sec</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Limits rise rate of ETCRequestFiltered.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|RawProcessed|Base TPS Request</group>
      <struct>VolatileWork_BSS.ETCReqRiseRate</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2_PostCatIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>ADC</units>
      <ctype>const Constant_T</ctype>
      <help>Look up table to allownon-linear characterization of sensors</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors | O2_PostCat</group>
      <struct>ConstantWork.O2_PostCatIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>20</len>
      <input>O2_PostCatADC</input>
      <index>O2_PostCatIdx</index>
   </VarDec>
   <VarDec>
      <name>O2_PostCatIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Look up table to allownon-linear characterization of sensors</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors | O2_PostCat</group>
      <struct>VolatileWork_BSS.O2_PostCatIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>O2_PostCatTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>Equiv Ratio</units>
      <ctype>const Constant_T</ctype>
      <help>Look up table to allownon-linear characterization of sensors</help>
      <group>BaseEngineController_A02|Foreground|Inputs|NonLinearSensors | O2_PostCat</group>
      <struct>ConstantWork.O2_PostCatTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>20</len>
      <output>O2_PostCatRaw</output>
      <prelookup>O2_PostCatIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>RPM09IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|RPM Indexes</group>
      <struct>ConstantWork.RPM09IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>RPM09In</input>
      <index>RPM09Idx</index>
   </VarDec>
   <VarDec>
      <name>RPM09Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|RPM Indexes</group>
      <struct>VolatileWork_BSS.RPM09Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>RPM09In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|RPM Indexes</group>
      <struct>VolatileWork_BSS.RPM09In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RPM17IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|RPM Indexes</group>
      <struct>ConstantWork.RPM17IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>17</len>
      <input>RPM17In</input>
      <index>RPM17Idx</index>
   </VarDec>
   <VarDec>
      <name>RPM17Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|RPM Indexes</group>
      <struct>VolatileWork_BSS.RPM17Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>RPM17In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|RPM Indexes</group>
      <struct>VolatileWork_BSS.RPM17In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECT05IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|ECT Index</group>
      <struct>ConstantWork.ECT05IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>5</len>
      <input>ECT05In</input>
      <index>ECT05Idx</index>
   </VarDec>
   <VarDec>
      <name>ECT05Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|ECT Index</group>
      <struct>VolatileWork_BSS.ECT05Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>ECT05In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|ECT Index</group>
      <struct>VolatileWork_BSS.ECT05In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IAT05IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|IAT Indexes</group>
      <struct>ConstantWork.IAT05IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>5</len>
      <input>IAT05In</input>
      <index>IAT05Idx</index>
   </VarDec>
   <VarDec>
      <name>IAT05Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|IAT Indexes</group>
      <struct>VolatileWork_BSS.IAT05Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>IAT05In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|IAT Indexes</group>
      <struct>VolatileWork_BSS.IAT05In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>BARO09IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>ConstantWork.BARO09IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>BARO</input>
      <index>BARO09Idx</index>
   </VarDec>
   <VarDec>
      <name>BARO09Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>VolatileWork_BSS.BARO09Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>VEBaroCorrTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Vol Eff compensation based on BARO.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>ConstantWork.VEBaroCorrTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>VEBaroCorr</output>
      <prelookup>BARO09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>VEBaroCorr</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Vol Eff compensation based on BARO.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>VolatileWork_BSS.VEBaroCorr</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IAT17IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|IAT Indexes</group>
      <struct>ConstantWork.IAT17IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>17</len>
      <input>IAT17In</input>
      <index>IAT17Idx</index>
   </VarDec>
   <VarDec>
      <name>IAT17Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|IAT Indexes</group>
      <struct>VolatileWork_BSS.IAT17Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>IAT17In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|IAT Indexes</group>
      <struct>VolatileWork_BSS.IAT17In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>VETempCorrTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Vol Eff compensation based on IAT.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>ConstantWork.VETempCorrTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>17</len>
      <output>VETempCorr</output>
      <prelookup>IAT17IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>VETempCorr</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Vol Eff compensation based on IAT.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>VolatileWork_BSS.VETempCorr</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PortPressRatio17IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Map divided by BARO.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>ConstantWork.PortPressRatio17IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>17</len>
      <input>PressureRatio</input>
      <index>PortPressRatio17Idx</index>
   </VarDec>
   <VarDec>
      <name>PortPressRatio17Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Map divided by BARO.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>VolatileWork_BSS.PortPressRatio17Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>VEMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>ConstantWork.VEMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>VE</output>
      <col_prelookup>RPM17IdxArr</col_prelookup>
      <col_len>17</col_len>
      <row_prelookup>PortPressRatio17IdxArr</row_prelookup>
      <row_len>17</row_len>
   </VarDec>
   <VarDec>
      <name>VE</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|AirCalcs|SpeedDensityMAPReferenced</group>
      <struct>VolatileWork_BSS.VE</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAFIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Hz</units>
      <ctype>const Constant_T</ctype>
      <help>Look up table to allownon-linear characterization of sensors</help>
      <group>BaseEngineController_A02|Foreground|Inputs|Digital | MAF</group>
      <struct>ConstantWork.MAFIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>40</len>
      <input>MAFADC</input>
      <index>MAFIdx</index>
   </VarDec>
   <VarDec>
      <name>MAFIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Look up table to allownon-linear characterization of sensors</help>
      <group>BaseEngineController_A02|Foreground|Inputs|Digital | MAF</group>
      <struct>VolatileWork_BSS.MAFIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>MAFTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>g/s</units>
      <ctype>const Constant_T</ctype>
      <help>Look up table to allownon-linear characterization of sensors</help>
      <group>BaseEngineController_A02|Foreground|Inputs|Digital | MAF</group>
      <struct>ConstantWork.MAFTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>40</len>
      <output>MAFRaw</output>
      <prelookup>MAFIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>APC_TPS10IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs|Load, Torque, Power, Work - Using APC</group>
      <struct>ConstantWork.APC_TPS10IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>10</len>
      <input>APCPort</input>
      <index>APC_TPS10Idx</index>
   </VarDec>
   <VarDec>
      <name>APC_TPS10Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs|Load, Torque, Power, Work - Using APC</group>
      <struct>VolatileWork_BSS.APC_TPS10Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>IndLoadTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Nm</units>
      <ctype>const Constant_T</ctype>
      <help>Converts APC into Indicated Torque.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs|Load, Torque, Power, Work - Using APC</group>
      <struct>ConstantWork.IndLoadTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>10</len>
      <output>IndLoad</output>
      <prelookup>APC_TPS10IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>IndLoad</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Nm</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Converts APC into Indicated Torque.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|LoadBasedCalcs|Load, Torque, Power, Work - Using APC</group>
      <struct>VolatileWork_BSS.IndLoad</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IndLoadNom09IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|Torque Indexes</group>
      <struct>ConstantWork.IndLoadNom09IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>IndLoadNom09In</input>
      <index>IndLoadNom09Idx</index>
   </VarDec>
   <VarDec>
      <name>IndLoadNom09Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|Torque Indexes</group>
      <struct>VolatileWork_BSS.IndLoadNom09Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>IndLoadNom09In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|Torque Indexes</group>
      <struct>VolatileWork_BSS.IndLoadNom09In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IndLoadNom17IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|Torque Indexes</group>
      <struct>ConstantWork.IndLoadNom17IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>17</len>
      <input>IndLoadNom17In</input>
      <index>IndLoadNom17Idx</index>
   </VarDec>
   <VarDec>
      <name>IndLoadNom17Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|Torque Indexes</group>
      <struct>VolatileWork_BSS.IndLoadNom17Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>IndLoadNom17In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|Torque Indexes</group>
      <struct>VolatileWork_BSS.IndLoadNom17In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IndPower05IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|Power Index</group>
      <struct>ConstantWork.IndPower05IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>5</len>
      <input>IndPower05In</input>
      <index>IndPower05Idx</index>
   </VarDec>
   <VarDec>
      <name>IndPower05Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|Power Index</group>
      <struct>VolatileWork_BSS.IndPower05Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>IndPower05In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|Power Index</group>
      <struct>VolatileWork_BSS.IndPower05In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>NECCT09IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|NECCT Index</group>
      <struct>ConstantWork.NECCT09IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>NECCT09In</input>
      <index>NECCT09Idx</index>
   </VarDec>
   <VarDec>
      <name>NECCT09Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|NECCT Index</group>
      <struct>VolatileWork_BSS.NECCT09Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>NECCT09In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|NECCT Index</group>
      <struct>VolatileWork_BSS.NECCT09In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAFPort05IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|MAFPortIndex</group>
      <struct>ConstantWork.MAFPort05IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>5</len>
      <input>MAFPort05In</input>
      <index>MAFPort05Idx</index>
   </VarDec>
   <VarDec>
      <name>MAFPort05Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|MAFPortIndex</group>
      <struct>VolatileWork_BSS.MAFPort05Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>MAFPort05In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|MAFPortIndex</group>
      <struct>VolatileWork_BSS.MAFPort05In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECT_KeyUp09IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>C</units>
      <ctype>const Constant_T</ctype>
      <help>Index of ECT captured at key-up.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|ECT_KeyUp</group>
      <struct>ConstantWork.ECT_KeyUp09IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>ECT_KeyUp09In</input>
      <index>ECT_KeyUp09Idx</index>
   </VarDec>
   <VarDec>
      <name>ECT_KeyUp09Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Index of ECT captured at key-up.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|ECT_KeyUp</group>
      <struct>VolatileWork_BSS.ECT_KeyUp09Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>ECT_KeyUp09In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>C</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Index of ECT captured at key-up.</help>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|ECT_KeyUp</group>
      <struct>VolatileWork_BSS.ECT_KeyUp09In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RPMAccel17IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes</group>
      <struct>ConstantWork.RPMAccel17IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>17</len>
      <input>RPMAccel17In</input>
      <index>RPMAccel17Idx</index>
   </VarDec>
   <VarDec>
      <name>RPMAccel17Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes</group>
      <struct>VolatileWork_BSS.RPMAccel17Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>RPMAccel17In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes</group>
      <struct>VolatileWork_BSS.RPMAccel17In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>WarmUpEqRatioMultMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Multiplier on base eq. ratio as a function of NECCT and Ind Power.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Base Equiv Ratio</group>
      <struct>ConstantWork.WarmUpEqRatioMultMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>WarmUpEqRatioMult</output>
      <col_prelookup>NECCT09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndPower05IdxArr</row_prelookup>
      <row_len>5</row_len>
   </VarDec>
   <VarDec>
      <name>WarmUpEqRatioMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Multiplier on base eq. ratio as a function of NECCT and Ind Power.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Base Equiv Ratio</group>
      <struct>VolatileWork_BSS.WarmUpEqRatioMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>DesEquivRatioMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Desired liquid equivalence ratio.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Base Equiv Ratio</group>
      <struct>ConstantWork.DesEquivRatioMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>DesEquivRatio</output>
      <col_prelookup>RPM17IdxArr</col_prelookup>
      <col_len>17</col_len>
      <row_prelookup>IndLoadNom17IdxArr</row_prelookup>
      <row_len>17</row_len>
   </VarDec>
   <VarDec>
      <name>DesEquivRatio</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Desired liquid equivalence ratio.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Base Equiv Ratio</group>
      <struct>VolatileWork_BSS.DesEquivRatio</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MaxETCSetPtLimitTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Maximum allowable ETC position.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager</group>
      <struct>ConstantWork.MaxETCSetPtLimitTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>MaxETCSetPtLimit</output>
      <prelookup>RPM09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>MaxETCSetPtLimit</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Maximum allowable ETC position.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager</group>
      <struct>VolatileWork_BSS.MaxETCSetPtLimit</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimt_SpeedErrorIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.PowerLimt_SpeedErrorIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>10</len>
      <input>PowerLimt_SpeedErrorIn</input>
      <index>PowerLimt_SpeedErrorIdx</index>
   </VarDec>
   <VarDec>
      <name>PowerLimt_SpeedErrorIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.PowerLimt_SpeedErrorIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>PowerLimt_SpeedErrorIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>RPM</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.PowerLimt_SpeedErrorIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimt_PGainErrorMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.PowerLimt_PGainErrorMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>10</len>
      <output>PowerLimt_PGainErrorMult</output>
      <prelookup>PowerLimt_SpeedErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>PowerLimt_PGainErrorMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.PowerLimt_PGainErrorMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimt_DGainErrorMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.PowerLimt_DGainErrorMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>10</len>
      <output>PowerLimt_DGainErrorMult</output>
      <prelookup>PowerLimt_SpeedErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>PowerLimt_DGainErrorMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.PowerLimt_DGainErrorMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PowerLimt_IGainErrorMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>ConstantWork.PowerLimt_IGainErrorMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>10</len>
      <output>PowerLimt_IGainErrorMult</output>
      <prelookup>PowerLimt_SpeedErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>PowerLimt_IGainErrorMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|AirFlow Manager|Power Limit Controller|Universal PID (Tunable &amp; Scheduled)</group>
      <struct>VolatileWork_BSS.PowerLimt_IGainErrorMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECTEGRInterpolationTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|EGR</group>
      <struct>ConstantWork.ECTEGRInterpolationTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>5</len>
      <output>ECTEGRInterpolation</output>
      <prelookup>ECT05IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>ECTEGRInterpolation</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|EGR</group>
      <struct>VolatileWork_BSS.ECTEGRInterpolation</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGR_MultMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Multiplier on ECT spark offset table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|EGR</group>
      <struct>ConstantWork.EGR_MultMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>EGR_Mult</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>EGR_Mult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Multiplier on ECT spark offset table.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|EGR</group>
      <struct>VolatileWork_BSS.EGR_Mult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2StartUpDelayTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>const Constant_T</ctype>
      <help>Delay O2 enable until TimeSinceRun is greater than this time.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 Control State Determination</group>
      <struct>ConstantWork.O2StartUpDelayTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>O2StartUpDelay</output>
      <prelookup>ECT_KeyUp09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>O2StartUpDelay</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>s</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Delay O2 enable until TimeSinceRun is greater than this time.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 Control State Determination</group>
      <struct>VolatileWork_BSS.O2StartUpDelay</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RichSwPtDeltaMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>EquivRatio</units>
      <ctype>const Constant_T</ctype>
      <help>If actual O2 reaches this point, switch the target to the LeanTargetDelta</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations|O2 Control Switch Point Maps</group>
      <struct>ConstantWork.RichSwPtDeltaMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>RichSwPtDelta</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>RichSwPtDelta</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>EquivRatio</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>If actual O2 reaches this point, switch the target to the LeanTargetDelta</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations|O2 Control Switch Point Maps</group>
      <struct>VolatileWork_BSS.RichSwPtDelta</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>LeanSwPtDeltaMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>EquivRatio</units>
      <ctype>const Constant_T</ctype>
      <help>If actual O2 reaches this point, switch the target to the RichTargetDelta</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations|O2 Control Switch Point Maps</group>
      <struct>ConstantWork.LeanSwPtDeltaMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>LeanSwPtDelta</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>LeanSwPtDelta</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>EquivRatio</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>If actual O2 reaches this point, switch the target to the RichTargetDelta</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations|O2 Control Switch Point Maps</group>
      <struct>VolatileWork_BSS.LeanSwPtDelta</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2NECCTErrGainMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>O2 PID controller system gain based on NECCT.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations|Error Gain Scheduling</group>
      <struct>ConstantWork.O2NECCTErrGainMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>O2NECCTErrGainMult</output>
      <prelookup>NECCT09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>O2NECCTErrGainMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>O2 PID controller system gain based on NECCT.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations|Error Gain Scheduling</group>
      <struct>VolatileWork_BSS.O2NECCTErrGainMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2MAFErrGainMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>O2 PID controller system gain based on MAF port.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations|Error Gain Scheduling</group>
      <struct>ConstantWork.O2MAFErrGainMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>5</len>
      <output>O2MAFErrGainMult</output>
      <prelookup>MAFPort05IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>O2MAFErrGainMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>O2 PID controller system gain based on MAF port.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations|Error Gain Scheduling</group>
      <struct>VolatileWork_BSS.O2MAFErrGainMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RichTargetDeltaMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>EquivRatio</units>
      <ctype>const Constant_T</ctype>
      <help>Target on the rich side for perturbation.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations|O2 Control Switch Point Maps</group>
      <struct>ConstantWork.RichTargetDeltaMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>RichTargetDelta</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>RichTargetDelta</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>EquivRatio</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Target on the rich side for perturbation.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations|O2 Control Switch Point Maps</group>
      <struct>VolatileWork_BSS.RichTargetDelta</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>LeanTargetDeltaMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>EquivRatio</units>
      <ctype>const Constant_T</ctype>
      <help>Target on the lean side for perturbation.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations|O2 Control Switch Point Maps</group>
      <struct>ConstantWork.LeanTargetDeltaMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>LeanTargetDelta</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>LeanTargetDelta</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>EquivRatio</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Target on the lean side for perturbation.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control|O2 PID Calibrations|O2 Control Switch Point Maps</group>
      <struct>VolatileWork_BSS.LeanTargetDelta</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>O2ITermIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Index for O2 ITerm.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control</group>
      <struct>ConstantWork.O2ITermIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>O2ITermIn</input>
      <index>O2ITermIdx</index>
   </VarDec>
   <VarDec>
      <name>O2ITermIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Index for O2 ITerm.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control</group>
      <struct>VolatileWork_BSS.O2ITermIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>O2ITermIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Index for O2 ITerm.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|O2 Control</group>
      <struct>VolatileWork_BSS.O2ITermIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAF09IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Delta TPS Transient Fueling</group>
      <struct>ConstantWork.MAF09IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>MAF09In</input>
      <index>MAF09Idx</index>
   </VarDec>
   <VarDec>
      <name>MAF09Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Delta TPS Transient Fueling</group>
      <struct>VolatileWork_BSS.MAF09Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>MAF09In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Delta TPS Transient Fueling</group>
      <struct>VolatileWork_BSS.MAF09In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>DeltaTPS17IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Delta TPS Transient Fueling</group>
      <struct>ConstantWork.DeltaTPS17IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>17</len>
      <input>DeltaTPS17In</input>
      <index>DeltaTPS17Idx</index>
   </VarDec>
   <VarDec>
      <name>DeltaTPS17Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Delta TPS Transient Fueling</group>
      <struct>VolatileWork_BSS.DeltaTPS17Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>DeltaTPS17In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Delta TPS Transient Fueling</group>
      <struct>VolatileWork_BSS.DeltaTPS17In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>DeltaTPS_MultMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Transient Fueling Multiplier for adjustment based on delta TPS</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Delta TPS Transient Fueling</group>
      <struct>ConstantWork.DeltaTPS_MultMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>DeltaTPS_Mult</output>
      <col_prelookup>DeltaTPS17IdxArr</col_prelookup>
      <col_len>17</col_len>
      <row_prelookup>MAF09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>DeltaTPS_Mult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Transient Fueling Multiplier for adjustment based on delta TPS</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Delta TPS Transient Fueling</group>
      <struct>VolatileWork_BSS.DeltaTPS_Mult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ECTTransFuelMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Transient fuel multiplier based on ECT.  Only engaged during transient fueling</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Delta TPS Transient Fueling|ECT Transient Fueling</group>
      <struct>ConstantWork.ECTTransFuelMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>5</len>
      <output>ECTTransFuelMult</output>
      <prelookup>ECT05IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>ECTTransFuelMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Transient fuel multiplier based on ECT.  Only engaged during transient fueling</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Delta TPS Transient Fueling|ECT Transient Fueling</group>
      <struct>VolatileWork_BSS.ECTTransFuelMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MAF05IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>g/s</units>
      <ctype>const Constant_T</ctype>
      <help>Breakpoints for Mass Airflow</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>ConstantWork.MAF05IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>5</len>
      <input>MAF05In</input>
      <index>MAF05Idx</index>
   </VarDec>
   <VarDec>
      <name>MAF05Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Breakpoints for Mass Airflow</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>VolatileWork_BSS.MAF05Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>MAF05In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>g/s</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Breakpoints for Mass Airflow</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>VolatileWork_BSS.MAF05In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelVapFactorIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degC/log(kPa)</units>
      <ctype>const Constant_T</ctype>
      <help>Breakpoints for fuel vaporization factor</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>ConstantWork.FuelVapFactorIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>5</len>
      <input>FuelVapFactorIn</input>
      <index>FuelVapFactorIdx</index>
   </VarDec>
   <VarDec>
      <name>FuelVapFactorIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Breakpoints for fuel vaporization factor</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>VolatileWork_BSS.FuelVapFactorIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>FuelVapFactorIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degC/log(kPa)</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Breakpoints for fuel vaporization factor</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>VolatileWork_BSS.FuelVapFactorIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TransientFuelXMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>0.999</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>frac</units>
      <ctype>const Constant_T</ctype>
      <help>Fraction of injected fuel to enter the puddle</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>ConstantWork.TransientFuelXMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>TransientFuelX</output>
      <col_prelookup>FuelVapFactorIdxArr</col_prelookup>
      <col_len>5</col_len>
      <row_prelookup>MAF05IdxArr</row_prelookup>
      <row_len>5</row_len>
   </VarDec>
   <VarDec>
      <name>TransientFuelX</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Fraction of injected fuel to enter the puddle</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>VolatileWork_BSS.TransientFuelX</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>TransientFuelTauMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>const Constant_T</ctype>
      <help>Fuel evaporation time constant</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>ConstantWork.TransientFuelTauMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>TransientFuelTau</output>
      <col_prelookup>FuelVapFactorIdxArr</col_prelookup>
      <col_len>5</col_len>
      <row_prelookup>MAF05IdxArr</row_prelookup>
      <row_len>5</row_len>
   </VarDec>
   <VarDec>
      <name>TransientFuelTau</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>sec</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Fuel evaporation time constant</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager|Tau-X Transient Fueling|Enabled Tau-X Algorithm</group>
      <struct>VolatileWork_BSS.TransientFuelTau</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MakeUpEOIMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1000</max>
      <min>-1000</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>const Constant_T</ctype>
      <help>End of injection timing for transient makeup fuel pulse</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager</group>
      <struct>ConstantWork.MakeUpEOIMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>MakeUpEOI</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>MakeUpEOI</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>End of injection timing for transient makeup fuel pulse</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager</group>
      <struct>VolatileWork_BSS.MakeUpEOI</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>PrimarySOIMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1000</max>
      <min>-1000</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>const Constant_T</ctype>
      <help>Injection timing for primary fuel pulse - SOI or EOI depending on Inj Config</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager</group>
      <struct>ConstantWork.PrimarySOIMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>PrimarySOI</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>PrimarySOI</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>degBTDC</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Injection timing for primary fuel pulse - SOI or EOI depending on Inj Config</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|Injector Manager</group>
      <struct>VolatileWork_BSS.PrimarySOI</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelAdaptGainTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Gain for updating FuelFlowComp map.  This fraction of the error is added to the map every 5ms.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt</group>
      <struct>ConstantWork.FuelAdaptGainTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>FuelAdaptGain</output>
      <prelookup>O2ITermIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>FuelAdaptGain</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>1.4</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Gain for updating FuelFlowComp map.  This fraction of the error is added to the map every 5ms.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt</group>
      <struct>VolatileWork_BSS.FuelAdaptGain</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelFlowCompAdaptMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>NonVolatile_T</ctype>
      <help>Adapt map based on O2 ITerm that is multiplied into FuelFlowComp.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt</group>
      <struct>NonVolatileWork.FuelFlowCompAdaptMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <output>FuelFlowCompAdapt</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>FuelFlowCompAdapt</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Adapt map based on O2 ITerm that is multiplied into FuelFlowComp.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt</group>
      <struct>VolatileWork_BSS.FuelFlowCompAdapt</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FuelFlowCompMap</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>const Constant_T</ctype>
      <help>Fuel Flow Compensation Multiplier - gain to adjust modelling errors in mechanical fuel system.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt</group>
      <struct>ConstantWork.FuelFlowCompMap.data</struct>
      <class>interpolation_2d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <output>FuelFlowComp</output>
      <col_prelookup>RPM09IdxArr</col_prelookup>
      <col_len>9</col_len>
      <row_prelookup>IndLoadNom09IdxArr</row_prelookup>
      <row_len>9</row_len>
   </VarDec>
   <VarDec>
      <name>FuelFlowComp</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>mult</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Fuel Flow Compensation Multiplier - gain to adjust modelling errors in mechanical fuel system.</help>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Run|Fuel System Manager|O2 Fuel Adapt</group>
      <struct>VolatileWork_BSS.FuelFlowComp</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGR_Prelookup_PWIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization</group>
      <struct>ConstantWork.EGR_Prelookup_PWIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>11</len>
      <input>EGR_Prelookup_PWIn</input>
      <index>EGR_Prelookup_PWIdx</index>
   </VarDec>
   <VarDec>
      <name>EGR_Prelookup_PWIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization</group>
      <struct>VolatileWork_BSS.EGR_Prelookup_PWIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>EGR_Prelookup_PWIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization</group>
      <struct>VolatileWork_BSS.EGR_Prelookup_PWIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGR_Interpolation_PWTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>us</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization</group>
      <struct>ConstantWork.EGR_Interpolation_PWTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>11</len>
      <output>EGR_Interpolation_PW</output>
      <prelookup>EGR_Prelookup_PWIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>EGR_Interpolation_PW</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>us</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization</group>
      <struct>VolatileWork_BSS.EGR_Interpolation_PW</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGR_Prelookup_DCIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization</group>
      <struct>ConstantWork.EGR_Prelookup_DCIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>11</len>
      <input>EGR_Prelookup_DCIn</input>
      <index>EGR_Prelookup_DCIdx</index>
   </VarDec>
   <VarDec>
      <name>EGR_Prelookup_DCIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization</group>
      <struct>VolatileWork_BSS.EGR_Prelookup_DCIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>EGR_Prelookup_DCIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization</group>
      <struct>VolatileWork_BSS.EGR_Prelookup_DCIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>EGR_Interpolation_DCTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>100</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization</group>
      <struct>ConstantWork.EGR_Interpolation_DCTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>11</len>
      <output>EGR_Interpolation_DC</output>
      <prelookup>EGR_Prelookup_DCIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>EGR_Interpolation_DC</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|EGR Characterization</group>
      <struct>VolatileWork_BSS.EGR_Interpolation_DC</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_SetpointIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>ConstantWork.ETC_SetpointIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>20</len>
      <input>ETC_SetpointIn</input>
      <index>ETC_SetpointIdx</index>
   </VarDec>
   <VarDec>
      <name>ETC_SetpointIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>VolatileWork_BSS.ETC_SetpointIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>ETC_SetpointIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>VolatileWork_BSS.ETC_SetpointIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETCDCOffsetTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>const Constant_T</ctype>
      <help>Duty cycle offset based on desired ETC position.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>ConstantWork.ETCDCOffsetTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>20</len>
      <output>ETCDCOffset</output>
      <prelookup>ETC_SetpointIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>ETCDCOffset</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>%</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Duty cycle offset based on desired ETC position.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>VolatileWork_BSS.ETCDCOffset</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_ErrorIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>ConstantWork.ETC_ErrorIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>10</len>
      <input>ETC_ErrorIn</input>
      <index>ETC_ErrorIdx</index>
   </VarDec>
   <VarDec>
      <name>ETC_ErrorIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>VolatileWork_BSS.ETC_ErrorIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>ETC_ErrorIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)</group>
      <struct>VolatileWork_BSS.ETC_ErrorIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_PGainMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Multiplier on the ETC P gain based on ETC error.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)|PGain</group>
      <struct>ConstantWork.ETC_PGainMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>10</len>
      <output>ETC_PGainMult</output>
      <prelookup>ETC_ErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>ETC_PGainMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Multiplier on the ETC P gain based on ETC error.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)|PGain</group>
      <struct>VolatileWork_BSS.ETC_PGainMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_IGainMultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Multiplier on the ETC I gain based on ETC error.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)|IGain</group>
      <struct>ConstantWork.ETC_IGainMultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>10</len>
      <output>ETC_IGainMult</output>
      <prelookup>ETC_ErrorIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>ETC_IGainMult</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Multiplier on the ETC I gain based on ETC error.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Electronic Throttle Controller|PID With Damper Terms (Tunable)|IGain</group>
      <struct>VolatileWork_BSS.ETC_IGainMult</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>ETC_VoltageCompTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Gain on ETC duty cycle based on DRVP</help>
      <group>BaseEngineController_A02|Foreground|Outputs|HBridge</group>
      <struct>ConstantWork.ETC_VoltageCompTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>ETC_VoltageComp</output>
      <prelookup>SysVolt09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>ETC_VoltageComp</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Gain on ETC duty cycle based on DRVP</help>
      <group>BaseEngineController_A02|Foreground|Outputs|HBridge</group>
      <struct>VolatileWork_BSS.ETC_VoltageComp</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InjDeltaPress09IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|DeltaPressureIndex</group>
      <struct>ConstantWork.InjDeltaPress09IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>9</len>
      <input>InjDeltaPress09In</input>
      <index>InjDeltaPress09Idx</index>
   </VarDec>
   <VarDec>
      <name>InjDeltaPress09Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|DeltaPressureIndex</group>
      <struct>VolatileWork_BSS.InjDeltaPress09Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>InjDeltaPress09In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization|DeltaPressureIndex</group>
      <struct>VolatileWork_BSS.InjDeltaPress09In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InjdPCompTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>2.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Injector characterization compenastion based on dP across injector.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization</group>
      <struct>ConstantWork.InjdPCompTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>InjdPComp</output>
      <prelookup>InjDeltaPress09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>InjdPComp</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>2.3</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Injector characterization compenastion based on dP across injector.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization</group>
      <struct>VolatileWork_BSS.InjdPComp</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InjTurnOffTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>2.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms</units>
      <ctype>const Constant_T</ctype>
      <help>Injector turn off time</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization</group>
      <struct>ConstantWork.InjTurnOffTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>InjTurnOff</output>
      <prelookup>InjDeltaPress09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>InjTurnOff</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>2.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Injector turn off time</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization</group>
      <struct>VolatileWork_BSS.InjTurnOff</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>InjTurnOnTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>2.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms</units>
      <ctype>const Constant_T</ctype>
      <help>Injector turn on time.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization</group>
      <struct>ConstantWork.InjTurnOnTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>InjTurnOn</output>
      <prelookup>SysVolt09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>InjTurnOn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>2.3</format>
      <mask>0xFFFFFFFF</mask>
      <units>ms</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Injector turn on time.</help>
      <group>BaseEngineController_A02|Foreground|Control|ActuatorCharacterization|Injector Characterization</group>
      <struct>VolatileWork_BSS.InjTurnOn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>INJ_InitialPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>First pin selection for Injector Sequence.  Goes up from here depending on the Sequence Type and number of cylinders</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.INJ_InitialPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="FINJ1" value="12"/>
         <item name="AINJ4" value="21"/>
         <item name="AINJ5" value="22"/>
         <item name="AINJ6" value="23"/>
         <item name="FINJ2" value="13"/>
         <item name="FINJ3" value="14"/>
         <item name="FINJ4" value="15"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="AINJ1" value="18"/>
         <item name="AINJ2" value="19"/>
         <item name="AINJ3" value="20"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>INJ_SequenceType</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Select the type of injector sequence.  The number of pins used will depend on this selection</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.INJ_SequenceType</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Standard (Injector per cylinder)" value="0"/>
         <item name="Batch (Fire half fuel on half of the injectors every rev)" value="1"/>
         <item name=" Wasted (Fire half fuel on all injectors every rev)" value="2"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>INJ_Behavior</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Select the type of injector behavior.  Transient behavior will take more CPU time, but will allow make-up pulses.  Batch Mode always uses Standard Behavior.</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.INJ_Behavior</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Standard" value="0"/>
         <item name="Transient" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>APP_PrelookupIdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>ConstantWork.APP_PrelookupIdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>7</len>
      <input>APP_PrelookupIn</input>
      <index>APP_PrelookupIdx</index>
   </VarDec>
   <VarDec>
      <name>APP_PrelookupIdx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>VolatileWork_BSS.APP_PrelookupIdx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>APP_PrelookupIn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>VolatileWork_BSS.APP_PrelookupIn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>APP_InterpolationTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>us</units>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>ConstantWork.APP_InterpolationTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>7</len>
      <output>APP_Interpolation</output>
      <prelookup>APP_PrelookupIdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>APP_Interpolation</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>us</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|Controller|Hybrid</group>
      <struct>VolatileWork_BSS.APP_Interpolation</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>App05IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes</group>
      <struct>ConstantWork.App05IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>5</len>
      <input>App05In</input>
      <index>App05Idx</index>
   </VarDec>
   <VarDec>
      <name>App05Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes</group>
      <struct>VolatileWork_BSS.App05Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>App05In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes</group>
      <struct>VolatileWork_BSS.App05In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>IndLoadNom05IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|Torque Indexes</group>
      <struct>ConstantWork.IndLoadNom05IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>5</len>
      <input>IndLoadNom05In</input>
      <index>IndLoadNom05Idx</index>
   </VarDec>
   <VarDec>
      <name>IndLoadNom05Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|Torque Indexes</group>
      <struct>VolatileWork_BSS.IndLoadNom05Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>IndLoadNom05In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Virtual Indexes|Torque Indexes</group>
      <struct>VolatileWork_BSS.IndLoadNom05In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>RPM05IdxArr</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>const Constant_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|RPM Indexes</group>
      <struct>ConstantWork.RPM05IdxArr</struct>
      <class>prelookup</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>real32</type>
      <len>5</len>
      <input>RPM05In</input>
      <index>RPM05Idx</index>
   </VarDec>
   <VarDec>
      <name>RPM05Idx</name>
      <access>RO RO RO RO</access>
      <gain>0.001953125</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>127.998046875</max>
      <min>0</min>
      <format>4.2</format>
      <mask>0x0000FFFF</mask>
      <units>idx.frac</units>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|RPM Indexes</group>
      <struct>VolatileWork_BSS.RPM05Idx</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint16</type>
   </VarDec>
   <VarDec>
      <name>RPM05In</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <group>BaseEngineController_A02|Foreground|Control|VirtualSensors|Raw Indexes|RPM Indexes</group>
      <struct>VolatileWork_BSS.RPM05In</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MinOilPressure_FaultTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>psi</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum oil pressure based on RPM - engine faults and shuts down below this</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Low Oil Pressure Fault Logic</group>
      <struct>ConstantWork.MinOilPressure_FaultTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>MinOilPressure_Fault</output>
      <prelookup>RPM09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>MinOilPressure_Fault</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>psi</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Minimum oil pressure based on RPM - engine faults and shuts down below this</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Low Oil Pressure Fault Logic</group>
      <struct>VolatileWork_BSS.MinOilPressure_Fault</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>MinOilPressure_WarnTbl</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>psi</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum oil pressure based on RPM - indicator light comes on below this</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Low Oil Pressure Fault Logic</group>
      <struct>ConstantWork.MinOilPressure_WarnTbl</struct>
      <class>interpolation_1d</class>
      <storage>FLASH</storage>
      <update>REMOTE</update>
      <type>real32</type>
      <len>9</len>
      <output>MinOilPressure_Warn</output>
      <prelookup>RPM09IdxArr</prelookup>
   </VarDec>
   <VarDec>
      <name>MinOilPressure_Warn</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1.0E17</max>
      <min>-1.0E17</min>
      <format>4.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>psi</units>
      <ctype>Volatile_BSS_T</ctype>
      <help>Minimum oil pressure based on RPM - indicator light comes on below this</help>
      <group>BaseEngineController_A02|Foreground|Control|Diagnostics|Low Oil Pressure Fault Logic</group>
      <struct>VolatileWork_BSS.MinOilPressure_Warn</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>real32</type>
   </VarDec>
   <VarDec>
      <name>FaultManager</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>65535</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <struct>ConstantWork.FaultManager[0]</struct>
      <help>Fault manager configuration.  Select up to 4 actions for each fault.</help>
      <group>BaseEngineController_A02</group>
      <class>enumarr</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint16</type>
      <col_enum column="0">
         <enum>
            <item name="Disabled" value="0"/>
            <item name="Enabled" value="1"/>
            <item name="Sticky" value="2"/>
            <item name="Enabled - Persistent" value="3"/>
            <item name="Sticky - Persistent" value="4"/>
            <item name="Save Occurred" value="5"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="2">
         <enum>
            <item name="-" value="0"/>
            <item name="Test" value="1"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="5">
         <enum>
            <item name="CutThrottle" value="0"/>
            <item name="DelayedEngineShutdown" value="1"/>
            <item name="SoftRevLimit" value="10"/>
            <item name="(None)" value="11"/>
            <item name="DisableO2Ctrl" value="2"/>
            <item name="EngineShutdown" value="3"/>
            <item name="HardRevLimit" value="4"/>
            <item name="Level1PowerLimit" value="5"/>
            <item name="Level2PowerLimit" value="6"/>
            <item name="Level3PowerLimit" value="7"/>
            <item name="Level4PowerLimit" value="8"/>
            <item name="MediumRevLimit" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="6">
         <enum>
            <item name="(None)" value="0"/>
            <item name="Suspected" value="1"/>
            <item name="Active" value="2"/>
            <item name="Suspected or Active" value="3"/>
            <item name="Occurred" value="4"/>
            <item name="Suspected or Occurred" value="5"/>
            <item name="Active or Occurred" value="6"/>
            <item name="Suspected or Active or Occurred" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="7">
         <enum>
            <item name="CutThrottle" value="0"/>
            <item name="DelayedEngineShutdown" value="1"/>
            <item name="SoftRevLimit" value="10"/>
            <item name="(None)" value="11"/>
            <item name="DisableO2Ctrl" value="2"/>
            <item name="EngineShutdown" value="3"/>
            <item name="HardRevLimit" value="4"/>
            <item name="Level1PowerLimit" value="5"/>
            <item name="Level2PowerLimit" value="6"/>
            <item name="Level3PowerLimit" value="7"/>
            <item name="Level4PowerLimit" value="8"/>
            <item name="MediumRevLimit" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="8">
         <enum>
            <item name="(None)" value="0"/>
            <item name="Suspected" value="1"/>
            <item name="Active" value="2"/>
            <item name="Suspected or Active" value="3"/>
            <item name="Occurred" value="4"/>
            <item name="Suspected or Occurred" value="5"/>
            <item name="Active or Occurred" value="6"/>
            <item name="Suspected or Active or Occurred" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="9">
         <enum>
            <item name="CutThrottle" value="0"/>
            <item name="DelayedEngineShutdown" value="1"/>
            <item name="SoftRevLimit" value="10"/>
            <item name="(None)" value="11"/>
            <item name="DisableO2Ctrl" value="2"/>
            <item name="EngineShutdown" value="3"/>
            <item name="HardRevLimit" value="4"/>
            <item name="Level1PowerLimit" value="5"/>
            <item name="Level2PowerLimit" value="6"/>
            <item name="Level3PowerLimit" value="7"/>
            <item name="Level4PowerLimit" value="8"/>
            <item name="MediumRevLimit" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="10">
         <enum>
            <item name="(None)" value="0"/>
            <item name="Suspected" value="1"/>
            <item name="Active" value="2"/>
            <item name="Suspected or Active" value="3"/>
            <item name="Occurred" value="4"/>
            <item name="Suspected or Occurred" value="5"/>
            <item name="Active or Occurred" value="6"/>
            <item name="Suspected or Active or Occurred" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="11">
         <enum>
            <item name="CutThrottle" value="0"/>
            <item name="DelayedEngineShutdown" value="1"/>
            <item name="SoftRevLimit" value="10"/>
            <item name="(None)" value="11"/>
            <item name="DisableO2Ctrl" value="2"/>
            <item name="EngineShutdown" value="3"/>
            <item name="HardRevLimit" value="4"/>
            <item name="Level1PowerLimit" value="5"/>
            <item name="Level2PowerLimit" value="6"/>
            <item name="Level3PowerLimit" value="7"/>
            <item name="Level4PowerLimit" value="8"/>
            <item name="MediumRevLimit" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="12">
         <enum>
            <item name="(None)" value="0"/>
            <item name="Suspected" value="1"/>
            <item name="Active" value="2"/>
            <item name="Suspected or Active" value="3"/>
            <item name="Occurred" value="4"/>
            <item name="Suspected or Occurred" value="5"/>
            <item name="Active or Occurred" value="6"/>
            <item name="Suspected or Active or Occurred" value="7"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_header>
         <enum>
            <item name="Mode" value="0"/>
            <item name="ID" value="1"/>
            <item name="Action 3 Condition" value="10"/>
            <item name="Action 4" value="11"/>
            <item name="Action 4 Condition" value="12"/>
            <item name="Test" value="2"/>
            <item name="Faulty Samples (X)" value="3"/>
            <item name="Total Samples (Y)" value="4"/>
            <item name="Action 1" value="5"/>
            <item name="Action 1 Condition" value="6"/>
            <item name="Action 2" value="7"/>
            <item name="Action 2 Condition" value="8"/>
            <item name="Action 3" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_header>
      <row_header>
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
         </enum>
      </row_header>
      <col_len>13</col_len>
      <row_len>66</row_len>
   </VarDec>
   <VarDec>
      <name>FaultMarquees</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <struct>NonVolatileWork.FaultMarquees[0]</struct>
      <help>Displays a rolling marquee for suspected, active and occurred faults.</help>
      <group>BaseEngineController_A02</group>
      <class>enumarr</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <col_enum column="0">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="1">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="2">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_header>
         <enum>
            <item name="Current Suspected" value="0"/>
            <item name="Current Active" value="1"/>
            <item name="Current Occurred" value="2"/>
            <default>Unknown</default>
         </enum>
      </col_header>
      <row_header>
         <enum>
            <item name="FaultMarquees" value="0"/>
         </enum>
      </row_header>
      <col_len>3</col_len>
      <row_len>1</row_len>
   </VarDec>
   <VarDec>
      <name>FaultCommand</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>NonVolatile_T</ctype>
      <help>Select a command to control the fault manager.</help>
      <group>BaseEngineController_A02</group>
      <struct>NonVolatileWork.FaultCommand</struct>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="-" value="0"/>
         <item name="Clear All Faults" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FaultActionReason</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>Volatile_T</ctype>
      <help>Displays a rolling marquee of the reasons for fault action: FaultActionReason.</help>
      <group>BaseEngineController_A02 | Action Reasons</group>
      <struct>VolatileWork.FaultActionReason</struct>
      <class>enumarr</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <col_enum column="0">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="1">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="2">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="3">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="4">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="5">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="6">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="7">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="8">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="9">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_enum column="10">
         <enum>
            <item name="CamEdgesFault" value="0"/>
            <item name="CamSyncFault" value="1"/>
            <item name="EST1_Open" value="10"/>
            <item name="EST1_Short" value="11"/>
            <item name="EST2_Open" value="12"/>
            <item name="EST2_Short" value="13"/>
            <item name="ETCSpringTest" value="14"/>
            <item name="ETC_Open_Fault" value="15"/>
            <item name="ETC_Sticking" value="16"/>
            <item name="FuelAdaptRangeHi" value="17"/>
            <item name="FuelAdaptRangeLow" value="18"/>
            <item name="FuelPresHigh_Fault" value="19"/>
            <item name="CrankEdgesFault" value="2"/>
            <item name="FuelPresLow_Fault" value="20"/>
            <item name="FuelPresRangeHigh" value="21"/>
            <item name="FuelPresRangeLow" value="22"/>
            <item name="FuelSensRangeHigh" value="23"/>
            <item name="FuelSensRangeLow" value="24"/>
            <item name="HardOverspeed" value="25"/>
            <item name="IATRangeHigh" value="26"/>
            <item name="IATRangeLow" value="27"/>
            <item name="Inj1Open" value="28"/>
            <item name="Inj2Open" value="29"/>
            <item name="CrankSyncFault" value="3"/>
            <item name="MAFRangeHigh" value="30"/>
            <item name="MAFRangeLow" value="31"/>
            <item name="MAPRangeHigh" value="32"/>
            <item name="MAPRangeLow" value="33"/>
            <item name="MAPTimeRangeHigh" value="34"/>
            <item name="MAPTimeRangeLow" value="35"/>
            <item name="MAP_IR_HI" value="36"/>
            <item name="MAP_IR_LO" value="37"/>
            <item name="MAP_STICKING" value="38"/>
            <item name="MediumOverspeed" value="39"/>
            <item name="ECTOverTempFault" value="4"/>
            <item name="NoOil_Fault" value="40"/>
            <item name="O2FailedLean" value="41"/>
            <item name="O2FailedRich" value="42"/>
            <item name="O2NotActive" value="43"/>
            <item name="O2_PostCatRangeHigh" value="44"/>
            <item name="O2_PostCatRangeLow" value="45"/>
            <item name="OilPresRangeHigh" value="46"/>
            <item name="OilPresRangeLow" value="47"/>
            <item name="SensVoltRangeHigh" value="48"/>
            <item name="SensVoltRangeLow" value="49"/>
            <item name="ECTRangeHigh" value="5"/>
            <item name="SoftOverspeed" value="50"/>
            <item name="SysVoltRangeHigh" value="51"/>
            <item name="SysVoltRangeLow" value="52"/>
            <item name="TPS1AdaptHiMax" value="53"/>
            <item name="TPS1AdaptHiMin" value="54"/>
            <item name="TPS1AdaptLoMax" value="55"/>
            <item name="TPS1AdaptLoMin" value="56"/>
            <item name="TPS1RangeHigh" value="57"/>
            <item name="TPS1RangeLow" value="58"/>
            <item name="TPS2AdaptHiMax" value="59"/>
            <item name="ECTRangeLow" value="6"/>
            <item name="TPS2AdaptHiMin" value="60"/>
            <item name="TPS2AdaptLoMax" value="61"/>
            <item name="TPS2AdaptLoMin" value="62"/>
            <item name="TPS2RangeHigh" value="63"/>
            <item name="TPS2RangeLow" value="64"/>
            <item name="TPS_Sensors_Conflict" value="65"/>
            <item name="(None)" value="66"/>
            <item name="ECTSevereOverTempFault" value="7"/>
            <item name="EGRSenseRangeHigh" value="8"/>
            <item name="EGRSenseRangeLow" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_enum>
      <col_header>
         <enum>
            <item name="CutThrottle" value="0"/>
            <item name="DelayedEngineShutdown" value="1"/>
            <item name="SoftRevLimit" value="10"/>
            <item name="DisableO2Ctrl" value="2"/>
            <item name="EngineShutdown" value="3"/>
            <item name="HardRevLimit" value="4"/>
            <item name="Level1PowerLimit" value="5"/>
            <item name="Level2PowerLimit" value="6"/>
            <item name="Level3PowerLimit" value="7"/>
            <item name="Level4PowerLimit" value="8"/>
            <item name="MediumRevLimit" value="9"/>
            <default>Unknown</default>
         </enum>
      </col_header>
      <row_header>
         <enum>
            <item name="-" value="0"/>
            <default>Unknown</default>
         </enum>
      </row_header>
      <col_len>11</col_len>
      <row_len>1</row_len>
   </VarDec>
   <VarDec>
      <name>MAPSensorPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for MAPSensorPin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.MAPSensorPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MAPSensorPin_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.MAPSensorPin_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ECTSensorPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for ECTSensorPin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.ECTSensorPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ECTSensorPin_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.ECTSensorPin_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>IATSensorPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for IATSensorPin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.IATSensorPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>IATSensorPin_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.IATSensorPin_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>OilPresPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for OilPresPin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.OilPresPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>OilPresPin_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.OilPresPin_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SysVoltage</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for SysVoltage</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.SysVoltage</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SysVoltage_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.SysVoltage_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TPS1AnalogInput</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for TPS1AnalogInput</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.TPS1AnalogInput</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TPS1AnalogInput_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.TPS1AnalogInput_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TPS2AnalogInput</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for TPS2AnalogInput</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.TPS2AnalogInput</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>TPS2AnalogInput_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.TPS2AnalogInput_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>PostO2Pin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for PostO2Pin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.PostO2Pin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>PostO2Pin_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.PostO2Pin_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MAF_Pin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Frequency input pin selection for MAF_Pin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.MAF_Pin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="DG1M" value="93"/>
         <item name="DG2M" value="94"/>
         <item name="DG4M" value="96"/>
         <item name="CNK" value="100"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MAF_Pin_EdgeDetect</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Frequency input edge trigger for MAF_Pin</help>
      <group>System | I/O Pins | Frequency In Config</group>
      <struct>ConstantWork.MAF_Pin_EdgeDetect</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Rising Edge" value="0"/>
         <item name="Falling Edge" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MAF_Pin_AliasProtect</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Frequency input alias detection for MAF_Pin</help>
      <group>System | I/O Pins | Frequency In Config</group>
      <struct>ConstantWork.MAF_Pin_AliasProtect</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="No Alias Protect" value="0"/>
         <item name="Use Alias Protect" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>MAF_Pin_MinFrequency</name>
      <access>RW RW RW RW</access>
      <gain>0.01</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>10000</max>
      <min>0.01</min>
      <format>5.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Hz</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum expected input frequency for MAF_Pin</help>
      <group>System | I/O Pins | Frequency In Config</group>
      <struct>ConstantWork.MAF_Pin_MinFrequency</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>MAF_Pin_Interface</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Frequency input signal interface for MAF_Pin</help>
      <group>System | I/O Pins | Frequency In Config</group>
      <struct>ConstantWork.MAF_Pin_Interface</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Digital Input" value="0"/>
         <item name="VR Input" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EGRPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for EGRPin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.EGRPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>EGRPin_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.EGRPin_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelSensorPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Frequency input pin selection for FuelSensorPin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.FuelSensorPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="DG1M" value="93"/>
         <item name="DG2M" value="94"/>
         <item name="DG4M" value="96"/>
         <item name="CNK" value="100"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelSensorPin_EdgeDetect</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Frequency input edge trigger for FuelSensorPin</help>
      <group>System | I/O Pins | Frequency In Config</group>
      <struct>ConstantWork.FuelSensorPin_EdgeDetect</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Rising Edge" value="0"/>
         <item name="Falling Edge" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelSensorPin_AliasProtect</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Frequency input alias detection for FuelSensorPin</help>
      <group>System | I/O Pins | Frequency In Config</group>
      <struct>ConstantWork.FuelSensorPin_AliasProtect</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="No Alias Protect" value="0"/>
         <item name="Use Alias Protect" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelSensorPin_MinFrequency</name>
      <access>RW RW RW RW</access>
      <gain>0.01</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>10000</max>
      <min>0.01</min>
      <format>5.2</format>
      <mask>0xFFFFFFFF</mask>
      <units>Hz</units>
      <ctype>const Constant_T</ctype>
      <help>Minimum expected input frequency for FuelSensorPin</help>
      <group>System | I/O Pins | Frequency In Config</group>
      <struct>ConstantWork.FuelSensorPin_MinFrequency</struct>
      <class>var</class>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>FuelSensorPin_Interface</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>1</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Frequency input signal interface for FuelSensorPin</help>
      <group>System | I/O Pins | Frequency In Config</group>
      <struct>ConstantWork.FuelSensorPin_Interface</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="Digital Input" value="0"/>
         <item name="VR Input" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelPumpPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Digital output pin selection for DOut8883p0004</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.FuelPumpPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="FUELP" value="0"/>
         <item name="FINJ3" value="14"/>
         <item name="FINJ4" value="15"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="AINJ1" value="18"/>
         <item name="AINJ2" value="19"/>
         <item name="AINJ3" value="20"/>
         <item name="AINJ4" value="21"/>
         <item name="AINJ5" value="22"/>
         <item name="AINJ6" value="23"/>
         <item name="HSOL1" value="2"/>
         <item name="TACH" value="24"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="MPRD" value="52"/>
         <item name="HSOL2" value="3"/>
         <item name="HSOL3" value="4"/>
         <item name="HSOL4" value="5"/>
         <item name="START" value="6"/>
         <item name="OILP" value="11"/>
         <item name="FINJ1" value="12"/>
         <item name="FINJ2" value="13"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ETCPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>PWM output pin selection for ETCPin</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.ETCPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="FUELP" value="0"/>
         <item name="FINJ2" value="13"/>
         <item name="FINJ3" value="14"/>
         <item name="FINJ4" value="15"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="AINJ1" value="18"/>
         <item name="AINJ2" value="19"/>
         <item name="AINJ3" value="20"/>
         <item name="AINJ4" value="21"/>
         <item name="AINJ5" value="22"/>
         <item name="ETC" value="1"/>
         <item name="AINJ6" value="23"/>
         <item name="TACH" value="24"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="HSOL1" value="2"/>
         <item name="HSOL2" value="3"/>
         <item name="HSOL3" value="4"/>
         <item name="HSOL4" value="5"/>
         <item name="START" value="6"/>
         <item name="OILP" value="11"/>
         <item name="FINJ1" value="12"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>OilPumpPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Digital output pin selection for DOut9174p0004</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.OilPumpPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="FUELP" value="0"/>
         <item name="FINJ3" value="14"/>
         <item name="FINJ4" value="15"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="AINJ1" value="18"/>
         <item name="AINJ2" value="19"/>
         <item name="AINJ3" value="20"/>
         <item name="AINJ4" value="21"/>
         <item name="AINJ5" value="22"/>
         <item name="AINJ6" value="23"/>
         <item name="HSOL1" value="2"/>
         <item name="TACH" value="24"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="MPRD" value="52"/>
         <item name="HSOL2" value="3"/>
         <item name="HSOL3" value="4"/>
         <item name="HSOL4" value="5"/>
         <item name="START" value="6"/>
         <item name="OILP" value="11"/>
         <item name="FINJ1" value="12"/>
         <item name="FINJ2" value="13"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>O2_Heater</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Digital output pin selection for DOut9191p0004</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.O2_Heater</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="FUELP" value="0"/>
         <item name="FINJ3" value="14"/>
         <item name="FINJ4" value="15"/>
         <item name="FINJ5" value="16"/>
         <item name="FINJ6" value="17"/>
         <item name="AINJ1" value="18"/>
         <item name="AINJ2" value="19"/>
         <item name="AINJ3" value="20"/>
         <item name="AINJ4" value="21"/>
         <item name="AINJ5" value="22"/>
         <item name="AINJ6" value="23"/>
         <item name="HSOL1" value="2"/>
         <item name="TACH" value="24"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="MPRD" value="52"/>
         <item name="HSOL2" value="3"/>
         <item name="HSOL3" value="4"/>
         <item name="HSOL4" value="5"/>
         <item name="START" value="6"/>
         <item name="OILP" value="11"/>
         <item name="FINJ1" value="12"/>
         <item name="FINJ2" value="13"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelPresPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for FuelPresPin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.FuelPresPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>FuelPresPin_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.FuelPresPin_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SensVoltSensorPin</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>Analog input pin selection for SensVoltSensorPin</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.SensVoltSensorPin</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="ECUP" value="53"/>
         <item name="AN7M" value="62"/>
         <item name="AN8M" value="63"/>
         <item name="AN9M" value="64"/>
         <item name="AN10M" value="65"/>
         <item name="AN11M" value="66"/>
         <item name="AN12M" value="67"/>
         <item name="AN13M" value="68"/>
         <item name="AN14M" value="69"/>
         <item name="AN15M" value="70"/>
         <item name="AN16M" value="71"/>
         <item name="DRVP" value="54"/>
         <item name="AN17M" value="72"/>
         <item name="AN18M" value="73"/>
         <item name="AN19M" value="74"/>
         <item name="O2A" value="90"/>
         <item name="O2B" value="91"/>
         <item name="XDRP_B" value="92"/>
         <item name="XDRP" value="55"/>
         <item name="AN1M" value="56"/>
         <item name="AN2M" value="57"/>
         <item name="AN3M" value="58"/>
         <item name="AN4M" value="59"/>
         <item name="AN5M" value="60"/>
         <item name="AN6M" value="61"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>SensVoltSensorPin_ref</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>255</max>
      <min>0</min>
      <format>3.0</format>
      <mask>0x000000FF</mask>
      <ctype>const Constant_T</ctype>
      <help>Reference Voltage Selection</help>
      <group>System | I/O Pins | Inputs Config</group>
      <struct>ConstantWork.SensVoltSensorPin_ref</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>uint8</type>
      <class>enum</class>
      <enum>
         <item name="5V" value="0"/>
         <item name="2.7V" value="1"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>ONESHOT</name>
      <access>RW RW RW RW</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>32767</max>
      <min>-32768</min>
      <format>5.0</format>
      <mask>0x0000FFFF</mask>
      <ctype>const Constant_T</ctype>
      <help>One Shot output pin selection for ONESHOT</help>
      <group>System | I/O Pins | Outputs Config</group>
      <struct>ConstantWork.ONESHOT</struct>
      <storage>FLASH</storage>
      <update>BACKGND</update>
      <type>int16</type>
      <class>enum</class>
      <enum>
         <item name="(None)" value="-1"/>
         <item name="HSOL1" value="2"/>
         <item name="EST 3" value="38"/>
         <item name="EST 4" value="39"/>
         <item name="EST 5" value="40"/>
         <item name="EST 6" value="41"/>
         <item name="EST 7" value="42"/>
         <item name="EST 8" value="43"/>
         <item name="HSOL2" value="3"/>
         <item name="HSOL3" value="4"/>
         <item name="HSOL4" value="5"/>
         <item name="START" value="6"/>
         <item name="OILP" value="11"/>
         <item name="ESC" value="35"/>
         <item name="EST 1" value="36"/>
         <item name="EST 2" value="37"/>
         <default>Unknown</default>
      </enum>
   </VarDec>
   <VarDec>
      <name>CAN_1_std_receive_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of received std CAN messages on bus CAN_1</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_1_std_receive_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_1_std_handled_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of handled std CAN messages on bus CAN_1</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_1_std_handled_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_1_std_last_unhandled_id</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Last received std CAN message on bus CAN_1, which was unhandled</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_1_std_last_unhandled_id</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_2_ext_receive_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of received ext CAN messages on bus CAN_2</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_2_ext_receive_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_2_ext_handled_count</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Total number of handled ext CAN messages on bus CAN_2</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_2_ext_handled_count</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>CAN_2_ext_last_unhandled_id</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <ctype>Volatile_BSS_T</ctype>
      <help>Last received ext CAN message on bus CAN_2, which was unhandled</help>
      <group>System | Debug | Resources | CAN</group>
      <struct>VolatileWork_BSS.CAN_2_ext_last_unhandled_id</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
   <VarDec>
      <name>MotoHawkModelSecondsInUse</name>
      <access>RO RO RO RO</access>
      <gain>1</gain>
      <offset>0</offset>
      <exp>1</exp>
      <max>4.294967295E9</max>
      <min>0</min>
      <format>8.0</format>
      <mask>0xFFFFFFFF</mask>
      <units>seconds</units>
      <ctype>NonVolatile_T</ctype>
      <help>Total runtime of this MotoHawk software model</help>
      <group>System | Version</group>
      <struct>NonVolatileWork.MotoHawkModelSecondsInUse</struct>
      <class>var</class>
      <storage>RAM</storage>
      <update>BACKGND</update>
      <type>uint32</type>
   </VarDec>
</VarDecs>