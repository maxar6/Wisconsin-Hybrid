
/* file:/C:/Users/maxar/Documents/GitHub/Wisconsin-Hybrid/BatteryController_Rev1/BatteryController_Rev1_Build/TDB/TableDB.tdb */
/* Generated by MotoCoder */
/* Version: 0.12.4 */
/* At: 2018-09-07 09:43:39 */
/* Copyright: 2018 Woodward. */




		
#define __TABLEDB_C
#define __TABLEDB_TDB

/* --- INCLUDE FILES --------------------------------------------------------------------------------------*/

#include "CommonInclude.h"
#include "BatteryController_Rev1.h"
#include "TDB_Includes.h"

/* --- DEFINES --------------------------------------------------------------------------------------------*/
#define EXTERN_INSERT_POINT

/* --- CONSTANTS ------------------------------------------------------------------------------------------*/


		
const S_EriRequestTable Table0[] =
{
	{project_id},
	{table_0_rev},
	{table_1_rev},
	{table_2_rev},
	{project_id},
	{KeyRev},
	{EriRev},
	{table_3_rev},
	{table_4_rev},
	{table_5_rev},
	{table_6_rev},
	{table_7_rev},
	{SwIdTxt},
	{CalIdTxt},
	{SwRevisionTxt},
	{project_id},
	{project_id},
	{project_id},
	{project_id},
	{project_id},
	{project_id},
	{project_id},
	{project_id},
	{project_id},
	{FriendlyName},
	{ProductID},
	{MotProgRev},
	{BootVerMaj},
	{BootVerMin},
	{EcuHwMaj},
	{EcuHwMin},
	{ApplicationCompatibilityArr},
	{SerialNumber},
	{ModelNumber},
};

const S_EriRequestTable Table1[] =
{
	{ActiveDTC_Ovr_new},
	{ActiveDTC_Ovr_ovr},
	{ActiveDTC_Prb},
	{ain_create_Current_Sensor},
	{ain_create_ECUP},
	{ain_create_V5V_Reference},
	{ain_read_Current_Sensor},
	{ain_read_ECUP},
	{ain_read_V5V_Reference},
	{Amp_Clamp_K},
	{Amp_Offset},
	{AMPCurrent_Ovr_new},
	{AMPCurrent_Ovr_ovr},
	{AMPCurrent_Prb},
	{AMPCurrent_Pre_Filter_Prb},
	{AMPCurrent_Pre_Offset_Prb},
	{AmpIn},
	{AmpOut},
	{AmpV_Offset},
	{ApplicationInitStatus},
	{ApplicationMonitorEnable},
	{ApplicationPausePoint},
	{ApplicationStatus},
	{ApplicationStopReason},
	{ApplicationStopReasonBlock},
	{BalancingCount_Ovr_new},
	{BalancingCount_Ovr_ovr},
	{BalancingCount_Prb},
	{Battery_Enable_Ovr_new},
	{Battery_Enable_Ovr_ovr},
	{BatteryCurrent_Ovr_new},
	{BatteryCurrent_Ovr_ovr},
	{BatteryCurrent_prb},
	{BatteryVoltage_Ovr_new},
	{BatteryVoltage_Ovr_ovr},
	{BatteryVoltage_Prb},
	{Battey_Enable_Prb},
	{BGND_BASE_PERIODIC_RunCnt},
	{BGND_BASEx10_PERIODIC_RunCnt},
	{BGND_BASEx2_PERIODIC_RunCnt},
	{BgndAngTaskStatus},
	{BgndStackMargin},
	{BgndStackMinBytesFree},
	{BgndTimeTaskStatus},
	{BusVoltage_Ovr_new},
	{BusVoltage_Ovr_ovr},
	{BusVoltage_Prb},
	{CAN_1_ext_handled_count},
	{CAN_1_ext_last_unhandled_id},
	{CAN_1_ext_receive_count},
	{CAN_1_std_handled_count},
	{CAN_1_std_last_unhandled_id},
	{CAN_1_std_receive_count},
	{can_create_CAN_1},
	{can_tx_err_CAN_1_0},
	{CCP_BAT_StationAddr},
	{CCP_BATRxID},
	{CCP_BATRxIDMask},
	{CCP_BATTxID},
	{CCP_CCP_BAT_Access},
	{CCP_CCP_BAT_ConnectionStatus},
	{CellBalancingActive_Ovr_new},
	{CellBalancingActive_Ovr_ovr},
	{CellBalancingActive_Prb},
	{CellTemp_PreLookupIdx},
	{CellTemp_PreLookupIdxArr},
	{CellTemp_PreLookupIn},
	{CityID_CAN_1},
	{CodeCoverParent000},
	{CodeCoverParent001},
	{CodeCoverParent002},
	{CodeCoverParent003},
	{CodeCoverParent004},
	{Coil1_Neg_Ovr_new},
	{Coil1_Neg_Ovr_ovr},
	{Coil1_Neg_Prb},
	{Coil1_Pos_Ovr_new},
	{Coil1_Pos_Ovr_ovr},
	{Coil1_Pos_Prb},
	{Coil2_Pos_Ovr_new},
	{Coil2_Pos_Ovr_ovr},
	{Coil2_Pos_Prb},
	{Coil3_Pos_Ovr_new},
	{Coil3_Pos_Ovr_ovr},
	{Coil3_Pos_Prb},
	{CompilerVersion},
	{ConfigVerMaj},
	{ConfigVerMin},
	{ControlCoreSDKRelease},
	{CoolantTemperature},
	{CoolantTemperature_Ovr_new},
	{CoolantTemperature_Ovr_ovr},
	{CoolantTemperature_Prb},
	{CPUIdlePcent},
	{CPUMargin},
	{CPUTime_AppISR},
	{CPUTime_Bgnd},
	{CPUTime_CAN},
	{CPUTime_FgndAngle},
	{CPUTime_FgndTime},
	{CPUTime_MIOS},
	{CPUTime_Serial},
	{CPUTime_TimerISR},
	{CPUTime_TPU},
	{Current_Div2},
	{Current_Ovr_new},
	{Current_Ovr_ovr},
	{Current_Prb},
	{currState_Prb},
	{Delay_3_Cal},
	{Delay_5_Cal},
	{Delay3},
	{Delay5},
	{dout_create_DOut2268p0004},
	{dout_create_DOut953p0001},
	{dout_create_DOut954p0001},
	{dout_create_DOut955p0001},
	{dout_create_DOut956p0001},
	{DPI_RollingCounter},
	{DPI_RollingCounter_Ovr_new},
	{DPI_RollingCounter_Ovr_ovr},
	{DPI_RollingCounter_Prb},
	{DutyCycle},
	{DutyCycle_Ovr_new},
	{DutyCycle_Ovr_ovr},
	{DutyCycle_Prb},
	{ECUP_Threshold},
	{FaultsDTC},
	{FaultsDTC_Ovr_new},
	{FaultsDTC_Ovr_ovr},
	{FaultsDTC_Prb},
	{FGND_10XRTI_PERIODIC_RunCnt},
	{FGND_20XRTI_PERIODIC_RunCnt},
	{FGND_2XRTI_PERIODIC_RunCnt},
	{FGND_RTI_PERIODIC_RunCnt},
	{FgndAngleStackMinBytesFree},
	{FgndAngTaskStatus},
	{FgndTimeStackMargin},
	{FgndTimeStackMinBytesFree},
	{FrameworkGlueErrors},
	{FreqEnd},
	{FreqEnd_Ovr_new},
	{FreqEnd_Ovr_ovr},
	{FreqEnd_Prb},
	{FreqStart},
	{FreqStart_Ovr_new},
	{FreqStart_Ovr_ovr},
	{FreqStart_Prb},
	{G_Sensativity},
	{HeapMargin},
	{highAmperage},
	{HVIL_Status},
	{HVIL_Status_Ovr_new},
	{HVIL_Status_Ovr_ovr},
	{HVIL_Status_Prb},
	{IDLE_EVENT_RunCnt},
	{IdleStackMargin},
	{IdleStackMinBytesFree},
	{InterruptStackMargin},
	{InterruptStackMinBytesFree},
	{IsolationLevel},
	{IsolationLevel_Ovr_new},
	{IsolationLevel_Ovr_ovr},
	{IsolationLevel_Prb},
	{IsolationStatus},
	{IsolationStatus_Ovr_new},
	{IsolationStatus_Ovr_ovr},
	{IsolationStatus_Prb},
	{IT_Table_Prb},
	{JCS_PackIdentifier_Ovr_new},
	{JCS_PackIdentifier_Ovr_ovr},
	{JCS_PackIdentifier_Prb},
	{LastOSError},
	{LinkStatus},
	{lowAmperage},
	{MatlabVersionTxt},
	{Max_AmphoursIn},
	{Max_AmphoursOut},
	{MaxCellTemp},
	{MaxCellTemp_Ovr_new},
	{MaxCellTemp_Ovr_ovr},
	{MaxCellTemp_Prb},
	{MaxCellTemperature_Ovr_new},
	{MaxCellTemperature_Ovr_ovr},
	{MaxCellTemperature_Prb},
	{MaxCellVoltage__Ovr_new},
	{MaxCellVoltage__Ovr_ovr},
	{MaxCellVoltage__Prb},
	{MaxCellVoltage_Ovr_new},
	{MaxCellVoltage_Ovr_ovr},
	{MaxCellVoltage_Prb},
	{MaxDisPwr_10s_Table},
	{MaxDisPwr_10s_TableMap},
	{MaxDisPwr_Cont_Table},
	{MaxDisPwr_Cont_TableMap},
	{MaximumDischargePower_10s_Ovr_new},
	{MaximumDischargePower_10s_Ovr_ovr},
	{MaximumDischargePower_10s_Prb},
	{MaximumDischargePower_Continuos_Ovr_new},
	{MaximumDischargePower_Continuos_Ovr_ovr},
	{MaximumDischargePower_Continuos_Prb},
	{MaximumRegenPower_10s_Ovr_new},
	{MaximumRegenPower_10s_Ovr_ovr},
	{MaximumRegenPower_10s_Prb},
	{MaximumRegenPower_Continuous_Ovr_new},
	{MaximumRegenPower_Continuous_Ovr_ovr},
	{MaximumRegenPower_Continuous_Prb},
	{MaxRegenPwr_10s_Table},
	{MaxRegenPwr_10s_TableMap},
	{MaxRegenPwr_Cont_Table},
	{MaxRegenPwr_Cont_TableMap},
	{MIL_Status_Ovr_new},
	{MIL_Status_Ovr_ovr},
	{MIL_Status_Prb},
	{MILState},
	{MinCellTemp},
	{MinCellTemp_Ovr_new},
	{MinCellTemp_Ovr_ovr},
	{MinCellTemp_Prb},
	{MinCellTemperature_Ovr_new},
	{MinCellTemperature_Ovr_ovr},
	{MinCellTemperature_Prb},
	{MinCellVoltage__Ovr_new},
	{MinCellVoltage__Ovr_ovr},
	{MinCellVoltage__Prb},
	{MinCellVoltage_Ovr_new},
	{MinCellVoltage_Ovr_ovr},
	{MinCellVoltage_Prb},
	{ModuleCapability},
	{MotoHawkBuildGUID},
	{MotoHawkInterpolation2D},
	{MotoHawkInterpolation2DMap},
	{MotoHawkModelGUID},
	{MotoHawkModelName},
	{MotoHawkModelSecondsInUse},
	{MotoHawkTokenGUID},
	{MotoHawkVersionTxt},
	{MPRD},
	{MPRD_KeepAlive},
	{MPRD_new},
	{MPRD_ovr},
	{NonVolatileCRC},
	{NonVolatileFormatID},
	{NonVolatileRestoreOnFirstStartup},
	{NonVolatileRestoreOnStartup},
	{NonVolatileStatus},
	{ONE_SECOND_EVENT_RunCnt},
	{OSErrorCnt},
	{OSStatus},
	{PackIdentifier},
	{PackState__Ovr_new},
	{PackState__Ovr_ovr},
	{PackState__Prb},
	{PackState_Ovr_new},
	{PackState_Ovr_ovr},
	{PackState_Prb},
	{PartNumber},
	{PasswordTxt},
	{PeakHeapBytesUsed},
	{PPL_RollingCounter},
	{PPL10S_RollingCounter},
	{PPL10s_RollingCounter_Ovr_new},
	{PPL10s_RollingCounter_Ovr_ovr},
	{PPL10s_RollingCounter_Prb},
	{PPLCont_RollingCounter_Ovr_new},
	{PPLCont_RollingCounter_Ovr_ovr},
	{PPLCont_RollingCounter_Prb},
	{Precharge_Current_Threshold},
	{PreCharge_Duty_Cycle_Prb},
	{PreCharge_Duty_Cyle_Ovr_new},
	{PreCharge_Duty_Cyle_Ovr_ovr},
	{PreCharge_Enable_Ovr_new},
	{PreCharge_Enable_Ovr_ovr},
	{PreCharge_Enable_Prb},
	{PreCharge_Freq_Ovr_new},
	{PreCharge_Freq_Ovr_ovr},
	{PreCharge_Freq_Prb},
	{PrechargeState__Ovr_new},
	{PrechargeState__Ovr_ovr},
	{PreChargeState__Prb},
	{PrechargeState_Ovr_new},
	{PrechargeState_Ovr_ovr},
	{PrechargeState_Prb},
	{ProcessorReboot},
	{protocol_register_CAN_1},
	{PS_RollingCounter},
	{PS_RollingCounter_Ovr_new},
	{PS_RollingCounter_Ovr_ovr},
	{PS_RollingCounter_Prb},
	{PVC_RollingCounter},
	{PVC_RollingCounter_Ovr_new},
	{PVC_RollingCounter_Ovr_ovr},
	{PVC_RollingCounter_Prb},
	{pwm_create_EST1_PWMOutput},
	{pwm_set_EST1_PWMOutput},
	{Reset_AmpHoursIn},
	{Reset_AmpHoursOut},
	{resource_allocation},
	{RestoreNVFactoryDefaults},
	{SleepInhibited},
	{SleepInhibited_Ovr_new},
	{SleepInhibited_Ovr_ovr},
	{SleepInhibited_Prb},
	{SOC_K},
	{SOC_Ovr_new},
	{SOC_Ovr_ovr},
	{SOC_Prb},
	{SOC_PreFilter_Prb},
	{SOC_PreLookupIdx},
	{SOC_PreLookupIdxArr},
	{SOC_PreLookupIn},
	{SOC_TableIdx},
	{SOC_TableIdxArr},
	{SOC_TableIn},
	{SOCMap},
	{SOCMapTbl},
	{STARTUP_EVENT_RunCnt},
	{StateOfCharge_Ovr_new},
	{StateOfCharge_Ovr_ovr},
	{StateOfCharge_Prb},
	{StateOfChargeMax},
	{StateOfChargeMax_Ovr_new},
	{StateOfChargeMax_Ovr_ovr},
	{StateOfChargeMax_Prb},
	{StateOfChargeMin},
	{StateOfChargeMin_Ovr_new},
	{StateOfChargeMin_Ovr_ovr},
	{StateOfChargeMin_Prb},
	{StoreNV},
	{SWISRCurrQueueSize},
	{SystemFrequency},
	{TAH_RollingCounter},
	{TAH_RollingCounter_Ovr_new},
	{TAH_RollingCounter_Ovr_ovr},
	{TAH_RollingCounter_Prb},
	{Temp_IR_PreIdx},
	{Temp_IR_PreIdxArr},
	{Temp_IR_PreIn},
	{TPUMaskType},
	{TPUMaskVers},
	{TrimpAmpHoursOut_Ovr_new},
	{TrimpAmpHoursOut_Ovr_ovr},
	{TripAmoHoursOut_Prb},
	{TripAmpsHoursIn_Ovr_new},
	{TripAmpsHoursIn_Ovr_ovr},
	{TripAmpsHoursIn_Prb},
	{Unused},
	{V5V_Ref2},
	{V5V_Reference_Ovr_new},
	{V5V_Reference_Ovr_ovr},
	{V5V_Reference_Prb},
	{Volt_IR_PreIdx},
	{Volt_IR_PreIdxArr},
	{Volt_IR_PreIn},
	{Voltage_Ovr_new},
	{Voltage_Ovr_ovr},
	{Voltage_Prb},
	{Wait_time},
	{WakeSignal},
	{WakeSignal_Ovr_new},
	{WakeSignal_Ovr_ovr},
	{WakeSignal_Prb},
};

const S_EriRequestTable Table2[] =
{
	{project_id},
};

const S_EriRequestTable Table3[] =
{
	{project_id},
};

const S_EriRequestTable Table4[] =
{
	{project_id},
};

const S_EriRequestTable Table5[] =
{
	{project_id},
};

const S_EriRequestTable Table6[] =
{
	{project_id},
};

const S_EriRequestTable Table7[] =
{
	{project_id},
};

		
/* List of table addresses*/
const S_EriReqTblList EriRequestTableList[8] = 
{
	{ Table0, TABLE0_LENGTH },
	{ Table1, TABLE1_LENGTH },
	{ Table2, TABLE2_LENGTH },
	{ Table3, TABLE3_LENGTH },
	{ Table4, TABLE4_LENGTH },
	{ Table5, TABLE5_LENGTH },
	{ Table6, TABLE6_LENGTH },
	{ Table7, TABLE7_LENGTH },
};

			

